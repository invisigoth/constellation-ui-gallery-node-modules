{"version":3,"file":"TextSelect.js","sourceRoot":"","sources":["../../../../src/components/Editor/Toolbar/TextSelect.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC, useRef, useState, MouseEvent, KeyboardEvent, FocusEvent, useMemo } from 'react';\nimport { Editor } from 'tinymce';\nimport styled, { css } from 'styled-components';\n\nimport {\n  Popover,\n  Icon,\n  registerIcon,\n  useOuterEvent,\n  Menu,\n  Button,\n  defaultThemeProp,\n  useI18n,\n  Tooltip,\n  calculateFontSize\n} from '@pega/cosmos-react-core';\nimport * as arrowMicroDownIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/arrow-micro-down.icon';\n\nimport { getKeyCommand } from '../../RichTextEditor/Toolbar/utils';\n\nregisterIcon(arrowMicroDownIcon);\n\nconst StyledTextSelect = styled(Button)(({ theme }) => {\n  const fontSizes = calculateFontSize(theme.base['font-size'], theme.base['font-scale']);\n  return css`\n    color: ${theme.base.palette['foreground-color']};\n    display: inline-flex;\n    align-items: center;\n    border-radius: calc(0.25 * ${theme.base['border-radius']});\n    height: calc(4 * ${theme.base.spacing});\n    padding: calc(0.5 * ${theme.base.spacing});\n    font-size: ${fontSizes.xxs};\n\n    span {\n      white-space: nowrap;\n    }\n\n    :focus {\n      box-shadow: ${theme.base.shadow.focus};\n    }\n  `;\n});\n\nStyledTextSelect.defaultProps = defaultThemeProp;\n\nconst StyledSelectMenu = styled.div`\n  min-width: 20ch;\n`;\n\ntype FormatTypes = 'p' | 'h1' | 'h2' | 'h3' | 'h4';\n\nconst textMapping = {\n  p: 'Normal',\n  h1: 'Heading 1',\n  h2: 'Heading 2',\n  h3: 'Heading 3',\n  h4: 'Heading 4',\n  '': 'Normal',\n  div: 'Normal'\n} as const;\n\nconst getTextCommand = (num: number, osx: boolean) => {\n  return getKeyCommand(osx, ({ ctrl, alt }) => `${ctrl}${alt}${num}`);\n};\n\nexport const getTextFormats = (\n  osx: boolean = false\n): { text: string; subText: string; type: FormatTypes }[] => {\n  return [\n    { text: 'Normal', subText: getTextCommand(0, osx), type: 'p' },\n    { text: 'Heading 1', subText: getTextCommand(1, osx), type: 'h1' },\n    { text: 'Heading 2', subText: getTextCommand(2, osx), type: 'h2' },\n    { text: 'Heading 3', subText: getTextCommand(3, osx), type: 'h3' },\n    { text: 'Heading 4', subText: getTextCommand(4, osx), type: 'h4' }\n  ];\n};\n\nconst TextSelect: FC<{ osx: boolean; editor: Editor }> = ({ osx, editor }) => {\n  const t = useI18n();\n  const [open, setOpen] = useState(false);\n  const selecting = useRef(false);\n  const openedByClick = useRef(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const popoverRef = useRef(null);\n  const menuRef = useRef(null);\n\n  const textFormats = useMemo(() => {\n    return getTextFormats(osx);\n  }, [osx]);\n\n  useOuterEvent('click', [buttonRef, popoverRef, menuRef], () => {\n    setOpen(false);\n  });\n\n  const onTextSelect = (type: FormatTypes, e: MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    editor.execCommand('FormatBlock', false, type);\n    if (!openedByClick.current) {\n      buttonRef.current?.focus();\n    }\n    setOpen(false);\n    selecting.current = true;\n    setTimeout(() => {\n      if (!editor.hasFocus() && openedByClick.current) {\n        editor.focus();\n      }\n    }, 0);\n  };\n\n  const getParentTextFormat = (el: Element | Node): FormatTypes | undefined => {\n    const elTagName = el.nodeName.toLowerCase() as FormatTypes;\n    if (textMapping[elTagName]) {\n      return elTagName;\n    }\n    if (el.parentNode) {\n      return getParentTextFormat(el.parentNode);\n    }\n    return undefined;\n  };\n\n  const activeFormat = (): FormatTypes | undefined => {\n    return editor.hasFocus()\n      ? getParentTextFormat(editor.selection.getNode())\n      : (editor.contentDocument?.body?.firstChild?.nodeName.toLowerCase() as FormatTypes);\n  };\n\n  const getFormatText = (): string => {\n    const activeFormatType = activeFormat();\n    const format = activeFormatType ? textMapping[activeFormatType] : 'Unknown';\n    return format || 'Unknown';\n  };\n\n  return (\n    <>\n      <StyledTextSelect\n        variant='simple'\n        type='button'\n        icon={false}\n        ref={buttonRef}\n        onMouseDown={(e: MouseEvent) => {\n          e.preventDefault();\n          e.stopPropagation();\n          setOpen(true);\n          openedByClick.current = true;\n        }}\n        onKeyDown={(e: KeyboardEvent) => {\n          if (e.key === 'Enter' && !selecting.current) {\n            e.preventDefault();\n            setOpen(true);\n            openedByClick.current = false;\n          } else if (e.key === 'Enter') {\n            e.preventDefault();\n            selecting.current = false;\n          } else if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n            setOpen(false);\n          }\n        }}\n        onFocus={(e: FocusEvent) => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        onClick={(e: MouseEvent) => e.stopPropagation()}\n        aria-expanded={open}\n        aria-label={`${t('rte_text_formatting_toolbar')}. ${t(\n          'rte_heading_style'\n        )}. ${getFormatText()} ${t('selected').toLocaleLowerCase()}`}\n        aria-haspopup\n      >\n        <span>{getFormatText()}</span>\n        <Icon name='arrow-micro-down' />\n      </StyledTextSelect>\n      {buttonRef.current && (\n        <Tooltip target={buttonRef.current} showDelay='none' hideDelay='none'>\n          {t('rte_heading_style')}\n        </Tooltip>\n      )}\n      <Popover\n        show={open}\n        as={StyledSelectMenu}\n        target={buttonRef.current}\n        placement='bottom-start'\n        ref={popoverRef}\n      >\n        <Menu\n          items={textFormats.map(({ text, type, subText }) => ({\n            id: type,\n            primary: text,\n            secondary: [subText],\n            selected: type === activeFormat()\n          }))}\n          focusControlEl={buttonRef.current ?? undefined}\n          mode='single-select'\n          ref={menuRef}\n          onItemClick={onTextSelect as (id: string, e: MouseEvent) => void}\n        />\n      </Popover>\n    </>\n  );\n};\n\nexport default TextSelect;\n"]}