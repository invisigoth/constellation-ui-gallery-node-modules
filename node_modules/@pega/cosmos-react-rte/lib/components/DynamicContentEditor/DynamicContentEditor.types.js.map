{"version":3,"file":"DynamicContentEditor.types.js","sourceRoot":"","sources":["../../../src/components/DynamicContentEditor/DynamicContentEditor.types.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAsBlD,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,IAAgB,EAAyB,EAAE,CACzE,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC","sourcesContent":["import { ReactNode } from 'react';\n\nimport {\n  MenuGroupProps,\n  MenuItemProps\n} from '@pega/cosmos-react-core/lib/components/Menu/Menu.types';\nimport { hasProp } from '@pega/cosmos-react-core';\n\nimport { EditorProps } from '../Editor';\n\nexport type ItemType = {\n  id: string;\n  text: string;\n  namespace?: string;\n};\n\nexport type FieldMenuItem = MenuItemProps & {\n  namespace?: string;\n  items?: FieldItems[];\n};\n\nexport type FieldMenuGroup = MenuGroupProps & {\n  namespace?: string;\n  items?: FieldItems[];\n};\n\nexport type FieldItems = FieldMenuItem | FieldMenuGroup;\n\nexport const isFieldMenuItem = (item: FieldItems): item is FieldMenuItem =>\n  hasProp(item, 'primary');\n\nexport interface DynamicContentEditorProps extends EditorProps {\n  /** Insert field form */\n  form: {\n    onSubmit: (insertField: (selectedField: ItemType) => void) => void;\n    dynamicContentPicker: ReactNode;\n  };\n  onActiveFieldChange: (field: ItemType) => void;\n  /** Property selection array */\n  fieldItems?: FieldItems[];\n  defaultValue?: string;\n  onBlur?: () => void;\n}\n\nexport interface DynamicContentEditorContextProps extends DynamicContentEditorProps {\n  updateProperties?: (selectedfield: ItemType) => void;\n}\n"]}