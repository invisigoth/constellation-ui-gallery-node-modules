{"version":3,"file":"RichTextViewer.types.js","sourceRoot":"","sources":["../../../src/components/RichTextEditor/RichTextViewer.types.ts"],"names":[],"mappings":"","sourcesContent":["import { marked } from 'marked';\nimport { ComponentType, FC } from 'react';\n\nimport { ErrorStateProps, ExcludeStrict } from '@pega/cosmos-react-core';\n\nexport interface InteractionRenderers {\n  type: string;\n  regexPattern: RegExp;\n  xmlElement?: string;\n  component?: ComponentType<any>;\n  getSearchAttributes?: (\n    xmlElement: string,\n    searchResult: string\n  ) =>\n    | { markdown: string; component: ComponentType<any>; props: Record<string, any>; text: string }\n    | undefined;\n}\n\nexport type TokenMap = {\n  [K in ExcludeStrict<marked.Token, marked.Tokens.Def>['type']]: Extract<marked.Token, { type: K }>;\n};\n\nexport type MDMap = {\n  [K in ExcludeStrict<marked.Token, marked.Tokens.Def>['type']]?: (\n    token: TokenMap[K]\n  ) => FC<{ token: TokenMap[K] }> | undefined;\n};\n\nexport interface RichTextViewerProps {\n  content: string;\n  type: 'markdown' | 'html' | 'richtext';\n  interactionRenderers?: InteractionRenderers[];\n  markdownMap?: MDMap;\n  onRetry?: ErrorStateProps['onRetry'];\n}\n"]}