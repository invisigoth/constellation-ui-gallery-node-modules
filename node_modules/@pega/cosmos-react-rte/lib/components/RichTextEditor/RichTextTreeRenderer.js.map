{"version":3,"file":"RichTextTreeRenderer.js","sourceRoot":"","sources":["../../../src/components/RichTextEditor/RichTextTreeRenderer.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAM,QAAQ,EAAE,MAAM,OAAO,CAAC;AAGrC,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAElD,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAI/D,MAAM,OAAO,GAAG,CAAC,IAAgB,EAAE,KAAa,EAAE,EAAE;IAClD,IAAI,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE;QAC7B,MAAM,QAAQ,GAAkB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3F,OAAO,KAAC,QAAQ,cAAc,YAAY,CAAC,EAAE,GAAG,IAAI,EAAE,QAAQ,EAAE,CAAC,IAA3C,KAAK,CAAkD,CAAC;KAC/E;IACD,OAAO,KAAC,QAAQ,cAAc,YAAY,CAAC,IAAI,CAAC,IAA1B,KAAK,CAAiC,CAAC;AAC/D,CAAC,CAAC;AAMF,MAAM,CAAC,MAAM,oBAAoB,GAAkC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;IAC/E,OAAO,4BAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAI,CAAC;AACzD,CAAC,CAAC","sourcesContent":["import { FC, Fragment } from 'react';\nimport { CosmosCustom } from 'slate';\n\nimport { hasProp } from '@pega/cosmos-react-core';\n\nimport { nodeRenderer, leafRenderer } from './utils/renderers';\n\ntype CosmosNode = CosmosCustom.Element | CosmosCustom.Text;\n\nconst getNode = (node: CosmosNode, index: number) => {\n  if (hasProp(node, 'children')) {\n    const children: JSX.Element[] = node.children.map((childNode, i) => getNode(childNode, i));\n    return <Fragment key={index}>{nodeRenderer({ ...node, children })}</Fragment>;\n  }\n  return <Fragment key={index}>{leafRenderer(node)}</Fragment>;\n};\n\nexport interface RichTextTreeRendererProps {\n  nodes: CosmosNode[];\n}\n\nexport const RichTextTreeRenderer: FC<RichTextTreeRendererProps> = ({ nodes }) => {\n  return <>{nodes.map((node, i) => getNode(node, i))}</>;\n};\n"]}