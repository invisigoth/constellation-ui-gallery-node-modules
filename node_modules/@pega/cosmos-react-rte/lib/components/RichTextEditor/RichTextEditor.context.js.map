{"version":3,"file":"RichTextEditor.context.js","sourceRoot":"","sources":["../../../src/components/RichTextEditor/RichTextEditor.context.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAc,UAAU,EAAc,MAAM,OAAO,CAAC;AAc1E,MAAM,CAAC,MAAM,qBAAqB,GAAG,aAAa,CAA6B;IAC7E,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;IAClB,cAAc,EAAE,GAAG,EAAE,GAAE,CAAC;IACxB,aAAa,EAAE,GAAG,EAAE,GAAE,CAAC;IACvB,QAAQ,EAAE,KAAK;CAChB,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,EAAE;IAChC,OAAO,UAAU,CAAC,qBAAqB,CAAC,CAAC;AAC3C,CAAC,CAAC","sourcesContent":["import { createContext, MouseEvent, useContext, FocusEvent } from 'react';\n\nexport interface RichTextEditorContextValue {\n  addImage: (image: File) => void;\n  setPopoverOpen: (open: boolean) => void;\n  onEditorFocus: (args: {\n    event?: MouseEvent | FocusEvent<any>;\n    force?: boolean;\n    runAfterFocus?: () => void;\n    focusEditor?: boolean;\n  }) => void;\n  disabled: boolean;\n}\n\nexport const RichTextEditorContext = createContext<RichTextEditorContextValue>({\n  addImage: () => {},\n  setPopoverOpen: () => {},\n  onEditorFocus: () => {},\n  disabled: false\n});\n\nexport const useRTEContext = () => {\n  return useContext(RichTextEditorContext);\n};\n"]}