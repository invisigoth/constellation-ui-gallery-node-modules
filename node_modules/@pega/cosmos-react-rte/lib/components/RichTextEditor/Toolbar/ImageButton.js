import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { useRef } from 'react';
import styled from 'styled-components';
import { hideVisually } from 'polished';
import { Icon, registerIcon, useI18n } from '@pega/cosmos-react-core';
import * as pictureIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/picture.icon';
import { useRTEContext } from '../RichTextEditor.context';
import ToolbarButton from './ToolbarButton';
registerIcon(pictureIcon);
const StyledImageInput = styled.input `
  ${hideVisually}
`;
const ImageButton = ({ ...props }) => {
    const t = useI18n();
    const { addImage } = useRTEContext();
    const fileInputRef = useRef(null);
    const onImageInputChange = (e) => {
        if (e.target.files) {
            addImage(e.target.files[0]);
            if (fileInputRef.current) {
                fileInputRef.current.value = '';
            }
        }
    };
    return (_jsxs(_Fragment, { children: [_jsx(StyledImageInput, { type: 'file', accept: 'image/*', ref: fileInputRef, onChange: onImageInputChange }), _jsx(ToolbarButton, { onClick: () => {
                    fileInputRef?.current?.click();
                }, tooltip: t('rte_image'), label: t('rte_image'), ...props, children: _jsx(Icon, { name: 'picture' }) })] }));
};
export default ImageButton;
//# sourceMappingURL=ImageButton.js.map