import { jsx as _jsx } from "react/jsx-runtime";
import { ReactEditor, useSlate } from 'slate-react';
import { Icon, navigatorIsAvailable, registerIcon, useI18n } from '@pega/cosmos-react-core';
import * as indentIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/indent.icon';
import * as unindentIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/unindent.icon';
import EditorCommands from '../utils/EditorCommands';
import ToolbarButton from './ToolbarButton';
import { getKeyCommand } from './utils';
registerIcon(indentIcon, unindentIcon);
const isMobile = navigatorIsAvailable && navigator.userAgent.includes('Mobile');
const IndentButton = ({ type, osx }) => {
    const editor = useSlate();
    const t = useI18n();
    const tooltipMobile = type === 'indent' ? `${t('rte_indent')}` : `${t('rte_unindent')}`;
    const tooltipDesktop = getKeyCommand(osx, ({ shift, alt }) => type === 'indent' ? `${t('rte_indent')} (${alt}M)` : `${t('rte_unindent')} (${alt}${shift}M)`);
    const tooltip = isMobile ? tooltipMobile : tooltipDesktop;
    const onMouseDown = e => {
        e.preventDefault();
        if (type === 'indent') {
            EditorCommands.indent(editor);
        }
        else {
            EditorCommands.unindent(editor);
        }
        if (!ReactEditor.isFocused(editor))
            ReactEditor.focus(editor);
    };
    return (_jsx(ToolbarButton, { onMouseDown: onMouseDown, tooltip: tooltip, label: type, children: _jsx(Icon, { name: type }) }));
};
export default IndentButton;
//# sourceMappingURL=IndentButton.js.map