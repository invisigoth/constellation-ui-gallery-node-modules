{"version":3,"file":"ToolbarButton.js","sourceRoot":"","sources":["../../../../src/components/RichTextEditor/Toolbar/ToolbarButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC, forwardRef, KeyboardEvent, MouseEvent, Ref } from 'react';\nimport styled, { css } from 'styled-components';\nimport { mix } from 'polished';\n\nimport {\n  defaultThemeProp,\n  ForwardProps,\n  Tooltip,\n  tryCatch,\n  useConsolidatedRef,\n  useElement,\n  useI18n\n} from '@pega/cosmos-react-core';\n\nimport { useRTEContext } from '../RichTextEditor.context';\n\nimport { StyleType } from './Toolbar.types';\n\nexport interface ToolBarButtonProps {\n  tooltip?: string;\n  active?: boolean;\n  styleType?: StyleType;\n  disabled?: boolean;\n  label?: string;\n  onMouseDown?: (e: MouseEvent | KeyboardEvent) => void;\n}\n\nconst StyledToolbarButton = styled.button<ToolBarButtonProps>(props => {\n  const { active, theme, styleType } = props;\n  const size = `calc(4 * ${props.theme.base.spacing})`;\n  const activeColor = tryCatch(() =>\n    mix(0.85, theme.base.palette['primary-background'], theme.base.palette.interactive)\n  );\n  return css`\n    background-color: ${active ? activeColor : 'transparent'};\n    border: none;\n    color: ${active ? theme.base.palette.interactive : theme.base.palette['foreground-color']};\n    outline: none;\n    display: inline-flex;\n    line-height: 1;\n    align-items: center;\n    justify-content: center;\n    height: ${size};\n    min-width: ${size};\n    opacity: ${active ? 'inherit' : '0.7'};\n    cursor: pointer;\n\n    &:focus {\n      box-shadow: ${theme.base.shadow.focus};\n    }\n\n    &:hover {\n      opacity: 1;\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n      box-shadow: none;\n    }\n\n    ${styleType === 'BOLD' &&\n    css`\n      font-weight: bold;\n    `}\n\n    ${styleType === 'ITALIC' &&\n    css`\n      font-style: italic;\n    `}\n\n    ${styleType === 'STRIKE-THROUGH' &&\n    css`\n      text-decoration: line-through;\n    `}\n  `;\n});\n\nStyledToolbarButton.defaultProps = defaultThemeProp;\n\nconst ToolbarButton: FC<ToolBarButtonProps & ForwardProps> = forwardRef(function ToolbarButton(\n  { tooltip, active, styleType, disabled, label, onMouseDown, ...restProps },\n  ref: Ref<HTMLButtonElement>\n) {\n  const { disabled: contextDisabled } = useRTEContext();\n  const [el, setEl] = useElement();\n  const toolBarRef = useConsolidatedRef<HTMLButtonElement>(setEl, ref);\n  const t = useI18n();\n  return (\n    <>\n      <StyledToolbarButton\n        active={active}\n        styleType={styleType}\n        ref={toolBarRef}\n        disabled={contextDisabled || disabled}\n        tabIndex={-1}\n        onKeyPress={(e: KeyboardEvent<HTMLButtonElement>) => {\n          if (e.key === 'Enter') {\n            onMouseDown?.(e);\n          }\n        }}\n        onMouseDown={onMouseDown}\n        type='button'\n        aria-label={`${label}${active ? ` - ${t('active')}` : ''}`}\n        aria-pressed={active}\n        {...restProps}\n      />\n      {el && tooltip && (\n        <Tooltip target={el} showDelay='none' hideDelay='none'>\n          {tooltip}\n        </Tooltip>\n      )}\n    </>\n  );\n});\n\nexport default ToolbarButton;\n"]}