{"version":3,"file":"DatePicker.js","sourceRoot":"","sources":["../../../../src/components/DateTime/Picker/DatePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FunctionComponent, useState, useEffect, useRef } from 'react';\n\nimport Flex from '../../Flex';\nimport MonthInput from '../Input/MonthInput';\nimport Button from '../../Button';\nimport Icon, { registerIcon } from '../../Icon';\nimport * as caretLeftIcon from '../../Icon/icons/caret-left.icon';\nimport * as caretRightIcon from '../../Icon/icons/caret-right.icon';\nimport { useConfiguration, useDirection, useI18n, useTestIds } from '../../../hooks';\nimport { getCalendarTypeFromLocale, parseToDate } from '../Input/utils';\nimport { CALENDAR_TYPES } from '../Input/local';\nimport TimeInput from '../Input/TimeInput';\nimport VisuallyHiddenText from '../../VisuallyHiddenText';\nimport { getDatePickerTestIds } from '../DateTime.test-ids';\nimport { withTestIds } from '../../../utils';\nimport { getAdjustedUTCDateTime } from '../utils';\n\nimport Calendar from './Calendar';\nimport DatePickerProps from './DatePicker.types';\nimport { isValidDate, toDateTimeString } from './utils';\nimport { StyledDatePicker, StyledMonthPicker } from './DatePicker.styles';\n\nregisterIcon(caretLeftIcon, caretRightIcon);\n\nconst DatePicker: FunctionComponent<DatePickerProps> = ({\n  testId,\n  selected: initial,\n  onChange,\n  min,\n  max,\n  mode = 'date',\n  showWeekNumber,\n  withSeconds,\n  pickerInterval,\n  clockFormat,\n  ...restProps\n}: DatePickerProps) => {\n  const testIds = useTestIds(testId, getDatePickerTestIds);\n\n  const { locale } = useConfiguration();\n  const t = useI18n();\n\n  const [selected, setSelected] = useState(initial);\n  const [current, setCurrent] = useState(\n    selected && isValidDate(selected) ? selected : getAdjustedUTCDateTime()\n  );\n\n  useEffect(() => {\n    if (toDateTimeString(initial, mode) !== toDateTimeString(selected, mode)) {\n      setSelected(initial);\n      setCurrent(initial || getAdjustedUTCDateTime());\n    }\n  }, [toDateTimeString(initial, mode)]);\n\n  const calendarRef = useRef<HTMLTableElement>(null);\n  useEffect(() => {\n    // need to postpone focusing to make sure onFocusWithin has been attached\n    setTimeout(() => {\n      calendarRef.current?.querySelector<HTMLElement>('button[tabindex=\"0\"]:enabled')?.focus();\n    });\n  }, []);\n\n  const calendarType = getCalendarTypeFromLocale(locale);\n  const { start, end } = useDirection();\n\n  return (\n    <StyledDatePicker\n      data-testid={testIds.root}\n      aria-label={t('calendar')}\n      role='region'\n      {...restProps}\n    >\n      <Flex as={StyledMonthPicker} container={{ justify: 'between', alignItems: 'center' }}>\n        <Button\n          data-testid={testIds.previousMonth}\n          variant='simple'\n          icon\n          onClick={() => {\n            const newCurrent = new Date(current);\n            const currentYear = newCurrent.getUTCFullYear();\n            const currentMonth = newCurrent.getUTCMonth();\n            const currentDay = newCurrent.getUTCDate();\n            const lastDayOfPreviousMonth = new Date(currentYear, currentMonth, 0).getDate();\n\n            if (currentDay > lastDayOfPreviousMonth) {\n              newCurrent.setUTCDate(1);\n              newCurrent.setUTCMonth(newCurrent.getUTCMonth() - 1);\n              newCurrent.setUTCDate(lastDayOfPreviousMonth);\n              setCurrent(newCurrent);\n            } else {\n              newCurrent.setUTCMonth(newCurrent.getUTCMonth() - 1);\n              setCurrent(newCurrent);\n            }\n          }}\n          disabled={(() => {\n            const newCurrent = new Date(current);\n            newCurrent.setUTCDate(1);\n\n            return Boolean(min && min > newCurrent);\n          })()}\n          aria-label={t('picker_prev_month')}\n        >\n          <Icon name={`caret-${start}`} />\n        </Button>\n        <MonthInput\n          testId={testIds.month}\n          value={current}\n          required\n          role='group'\n          aria-label={t('picker_jump_to_month_and_year')}\n          onChange={({ valueAsTimestamp }) => {\n            let newCurrent = new Date(valueAsTimestamp!);\n            newCurrent.setUTCDate(current.getUTCDate());\n\n            if (max) {\n              const maxDate = parseToDate(max);\n              maxDate.setUTCMinutes(maxDate.getUTCMinutes() - maxDate.getTimezoneOffset());\n              if (newCurrent > maxDate) newCurrent = maxDate;\n            }\n\n            if (min) {\n              const minDate = parseToDate(min);\n              minDate.setUTCMinutes(minDate.getUTCMinutes() - minDate.getTimezoneOffset());\n              if (newCurrent < minDate) newCurrent = minDate;\n            }\n\n            setCurrent(newCurrent);\n          }}\n          min={min}\n          max={max}\n        />\n        <VisuallyHiddenText aria-live='polite' role='alert'>\n          {current.toLocaleString(locale, { month: 'long', year: 'numeric', timeZone: 'UTC' })}\n        </VisuallyHiddenText>\n        <Button\n          data-testid={testIds.nextMonth}\n          variant='simple'\n          icon\n          onClick={() => {\n            const newCurrent = new Date(current);\n            const currentYear = newCurrent.getUTCFullYear();\n            const currentMonth = newCurrent.getUTCMonth();\n            const currentDay = newCurrent.getUTCDate();\n            const lastDayOfNextMonth = new Date(currentYear, currentMonth + 2, 0).getDate();\n\n            if (currentDay > lastDayOfNextMonth) {\n              newCurrent.setUTCDate(1);\n              newCurrent.setUTCMonth(newCurrent.getUTCMonth() + 1);\n              newCurrent.setUTCDate(lastDayOfNextMonth);\n              setCurrent(newCurrent);\n            } else {\n              newCurrent.setUTCMonth(newCurrent.getUTCMonth() + 1);\n              setCurrent(newCurrent);\n            }\n          }}\n          disabled={(() => {\n            const newCurrent = new Date(current);\n            newCurrent.setUTCMonth(newCurrent.getUTCMonth() + 1);\n            newCurrent.setUTCDate(0);\n            return Boolean(max && max < newCurrent);\n          })()}\n          aria-label={t('picker_next_month')}\n        >\n          <Icon name={`caret-${end}`} />\n        </Button>\n      </Flex>\n      <Flex container={{ wrap: 'nowrap' }} dir='ltr'>\n        <Calendar\n          testId={testIds.calendar}\n          ref={calendarRef}\n          selected={selected && isValidDate(selected) ? selected : undefined}\n          current={current}\n          calendarType={mode === 'date' ? calendarType : CALENDAR_TYPES.ISO_8601}\n          showWeekNumber={showWeekNumber}\n          mode={mode === 'datetime' ? 'date' : mode}\n          onFocus={setCurrent}\n          onSelect={selectedDate => {\n            const newDate = new Date(selectedDate);\n\n            if (selected) {\n              newDate.setUTCHours(selected.getUTCHours());\n              newDate.setUTCMinutes(selected.getUTCMinutes());\n              newDate.setUTCSeconds(selected.getUTCSeconds());\n            }\n\n            setCurrent(newDate);\n            setSelected(newDate);\n            onChange?.(newDate);\n          }}\n          min={min}\n          max={max}\n        />\n      </Flex>\n\n      {mode === 'datetime' && (\n        <TimeInput\n          testId={testIds.time}\n          label={t('time_text')}\n          value={selected}\n          pickerInterval={pickerInterval}\n          withSeconds={withSeconds}\n          clockFormat={clockFormat}\n          onChange={selectedTime => {\n            if (selectedTime.state || !selectedTime.valueAsISOString) {\n              return;\n            }\n            const newDate = selected ? new Date(selected) : new Date();\n            const selectedTimeDateObject = new Date(selectedTime.valueAsISOString);\n            newDate.setUTCHours(selectedTimeDateObject.getUTCHours());\n            newDate.setUTCMinutes(selectedTimeDateObject.getUTCMinutes());\n            newDate.setUTCSeconds(selectedTimeDateObject.getUTCSeconds());\n\n            setSelected(newDate);\n            onChange?.(newDate);\n          }}\n          min={min}\n          max={max}\n        />\n      )}\n    </StyledDatePicker>\n  );\n};\n\nexport default withTestIds(DatePicker, getDatePickerTestIds);\n"]}