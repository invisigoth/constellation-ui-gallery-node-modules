{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/components/DateTime/utils.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAC;AAGlC,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAC/C,OAAO,EAEL,YAAY,EACZ,UAAU,EACV,cAAc,EACd,OAAO,EACP,WAAW,EACZ,MAAM,eAAe,CAAC;AAEvB,MAAM,SAAS,GAAG;IAChB,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG;IAC/B,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE;IACvC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IACxB,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI;IACpB,MAAM,EAAE,EAAE,GAAG,IAAI;IACjB,MAAM,EAAE,IAAI;CACkD,CAAC;AAoBjE,MAAM,SAAS,GAAG;IAChB,IAAI,EAAE,SAAS;IACf,MAAM,EAAE,SAAS;CACI,CAAC;AAExB,MAAM,WAAW,GAAG;IAClB,GAAG,SAAS;IACZ,MAAM,EAAE,IAAI;CACS,CAAC;AAExB,MAAM,WAAW,GAAG;IAClB,GAAG,SAAS;IACZ,MAAM,EAAE,KAAK;CACQ,CAAC;AAExB,MAAM,QAAQ,GAAG;IACf,GAAG,SAAS;IACZ,MAAM,EAAE,SAAS;CACI,CAAC;AAExB,MAAM,UAAU,GAAG;IACjB,GAAG,WAAW;IACd,MAAM,EAAE,SAAS;CACI,CAAC;AAExB,MAAM,UAAU,GAAG;IACjB,GAAG,WAAW;IACd,MAAM,EAAE,SAAS;CACI,CAAC;AAMxB,MAAM,aAAa,GAAG;IACpB,IAAI,EAAE;QACJ,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE;QAC1D,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE;QACxD,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE;KAC/D;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE;QACxE,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,QAAQ,EAAE;QACrE,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE;KAC7E;IACD,UAAU,EAAE;QACV,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,WAAW,EAAE;QAC1E,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,UAAU,EAAE;QACvE,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,WAAW,EAAE;KAC/E;IACD,UAAU,EAAE;QACV,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,WAAW,EAAE;QAC1E,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,UAAU,EAAE;QACvE,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,WAAW,EAAE;KAC/E;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,SAAS;KACnB;IACD,MAAM,EAAE;QACN,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,WAAW;KACrB;IACD,MAAM,EAAE;QACN,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,WAAW;KACrB;IACD,KAAK,EAAE;QACL,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;QACzB,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;QACvB,OAAO,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;KAC9B;IACD,SAAS,EAAE;QACT,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE;QAC1C,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;QACxC,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;KAC/C;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE;QACzC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE;QACvC,OAAO,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE;KAC9C;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAC1B,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QACzB,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;KAC7B;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;QACzC,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;QACxC,OAAO,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;KAC7C;CAKyE,CAAC;AAE7E,MAAM,mBAAmB,GAQrB,EAAE,CAAC;AAEP,MAAM,uBAAuB,GAIzB,EAAE,CAAC;AAEP,MAAM,iBAAiB,GAInB,EAAE,CAAC;AAEP,MAAM,UAAU,cAAc,CAC5B,KAAW,EACX,EACE,CAAC,EACD,MAAM,EACN,MAAM,EACN,OAAO,EACP,WAAW,EACX,YAAY,GAAG,cAAc,CAAC,QAAQ,EACtC,QAAQ,EACc;IAExB,MAAM,gBAAgB,GAAG,CACvB,IAAU,EACV,WAA0D,EAC1D,gBAAyB,EACzB,EAAE;QACF,MAAM,eAAe,GACnB,WAAW,KAAK,MAAM,IAAI,WAAW,KAAK,UAAU;YAClD,CAAC,CAAC,GAAG,WAAW,GAAG,WAAW,IAAI,EAAE,EAAE;YACtC,CAAC,CAAC,WAAW,CAAC;QAClB,MAAM,gBAAgB,GAAG,gBAAgB,IAAI,QAAQ,CAAC;QACtD,MAAM,eAAe,GAAG,aAAa,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC;QAE/D,mBAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACnC,mBAAmB,CAAC,MAAM,CAAC,CAAC,GAAG,gBAAgB,EAAE,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC;QAEjE,MAAM,GAAG,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC,GAAG,gBAAgB,EAAE,CAAC,CAAC;QAE/D,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;YAC7B,GAAG,CAAC,GAAG,CACL,eAAe,EACf,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC9B,GAAG,eAAe;gBAClB,QAAQ,EAAE,gBAAgB;aAC3B,CAAC,CACH,CAAC;SACH;QAED,OAAO,GAAG,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC;IAEF,MAAM,qBAAqB,GAAG,CAAC,aAAqB,EAAE,IAAc,EAAE,EAAE;QACtE,MAAM,eAAe,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEvD,uBAAuB,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC;QAC9C,MAAM,GAAG,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC;QAE5C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;YAC7B,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC,CAAC;SAChF;QAED,OAAO,GAAG,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,CAAC,IAAU,EAAE,IAAc,EAAU,EAAE;QAC7D,IAAI,MAAc,CAAC;QACnB,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QAEvB,QAAQ,IAAI,EAAE;YACZ,KAAK,MAAM;gBACT,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,GAAG,GAAG,CAAC,cAAc,EAAE,CAAC;gBACtD,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,IAAI,CAAC,cAAc,EAAE,KAAK,GAAG,CAAC,cAAc,EAAE,EAAE;oBAClD,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;iBACjD;qBAAM,IAAI,IAAI,GAAG,GAAG,EAAE;oBACrB,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACjE;qBAAM;oBACL,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;iBAC1D;gBACD,MAAM;YACR,KAAK,KAAK;gBACR,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC,WAAW,EAAE,EAAE;oBAC5C,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;iBAC/C;qBAAM,IAAI,IAAI,GAAG,GAAG,EAAE;oBACrB,MAAM,iBAAiB,GAAG,IAAI,IAAI,CAChC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAC3D,CAAC,UAAU,EAAE,CAAC;oBACf,MAAM,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC1E;qBAAM;oBACL,MAAM,iBAAiB,GAAG,IAAI,IAAI,CAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CACrD,CAAC,UAAU,EAAE,CAAC;oBACf,MAAM,GAAG,iBAAiB,GAAG,GAAG,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;iBACvE;gBACD,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,IAAI,CAAC,UAAU,EAAE,KAAK,GAAG,CAAC,UAAU,EAAE,EAAE;oBAC1C,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;iBACjD;qBAAM,IAAI,IAAI,GAAG,GAAG,EAAE;oBACrB,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACjE;qBAAM;oBACL,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;iBAC1D;gBACD,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC,WAAW,EAAE,EAAE;oBAC5C,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC;iBACrD;qBAAM,IAAI,IAAI,GAAG,GAAG,EAAE;oBACrB,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACrE;qBAAM;oBACL,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;iBAC9D;gBACD,MAAM;YACR;gBACE,MAAM,GAAG,CAAC,CAAC;gBACX,MAAM;SACT;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,CAAC,IAAU,EAAE,EAAE;QACrC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC1C,4CAA4C;QAC5C,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,KAAK;YAAE,OAAO,GAAG,CAAC,CAAC;QAC3C,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,CAAa,CAAC,CAAC;YAC3F,QAAQ,CAAa,CAAC;QACxB,MAAM,MAAM,GAAG,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE3C,OAAO,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAM,gBAAgB,GAAG,CAAC,IAAU,EAAE,EAAE;QACtC,iBAAiB,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC1D,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,eAAe;SACtB,CAA8B,CAAC;QAEhC,MAAM,YAAY,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC/C,MAAM,eAAe,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;QACpF,MAAM,SAAS,GAAG,gBAAgB,CAChC,cAAc,CAAC,eAAe,EAAE,YAAY,CAAC,EAC7C,MAAM,EACN,KAAK,CACN,CAAC;QACF,MAAM,OAAO,GAAG,gBAAgB,CAAC,YAAY,CAAC,eAAe,EAAE,YAAY,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAC7F,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,IAAI,OAAO,CACrD,eAAe,EACf,YAAY,CACb,KAAK,WAAW,CAAC,eAAe,CAAC,KAAK,SAAS,MAAM,OAAO,GAAG,CAAC;IACnE,CAAC,CAAC;IAEF,MAAM,uBAAuB,GAAG,CAAC,IAAU,EAAE,EAAE;QAC7C,MAAM,aAAa,GAAG,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACrD,MAAM,eAAe,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;QACpF,MAAM,aAAa,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC;QAClD,OAAO,GAAG,CAAE,CAAC,iBAAiB,aAAa,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC;IACpE,CAAC,CAAC;IAEF,QAAQ,OAAO,EAAE;QACf,KAAK,UAAU;YACb,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;QAChC,KAAK,MAAM;YACT,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjC,KAAK,aAAa;YAChB,OAAO,uBAAuB,CAAC,KAAK,CAAC,CAAC;QACxC;YACE,OAAO,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC3C;AACH,CAAC;AAED,MAAM,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AACpC,MAAM,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AAChC,MAAM,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC;AAC7B,MAAM,UAAU,GAAG,IAAI,CAAC;AAQxB,MAAM,iBAAiB,GAYnB,EAAE,CAAC;AAEP,MAAM,UAAU,cAAc,CAC5B,SAAiB,EACjB,EAAE,MAAM,EAAE,gBAAgB,EAAE,WAAW,GAAG,QAAQ,EAAyB;IAE3E,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IAEjC,MAAM,IAAI,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IACtC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAClC,IAAI,KAAK,GAAG,UAAU,EAAE;QACtB,iBAAiB,CAAC,MAAM,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;QAEzC,iBAAiB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YACzE,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,QAAQ;SACtB,CAAC,CAAC;QAEH,OAAO,iBAAiB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KAC3D;IAED,MAAM,aAAa,GAAG;QACpB,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE;QACnD,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,QAAQ,CAAC,EAAE;QACjE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,EAAE;QACtE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,EAAE;KACzE,CAAC;IAEF,MAAM,MAAM,GAAG,EAAE,CAAC;IAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,gBAAgB,IAAI,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACpF,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAEzC,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACvC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gBAC7E,KAAK,EAAE,MAAM;gBACb,IAAI;gBACJ,WAAW;aACZ,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACzE;KACF;IACD,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;AACtC,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,GAAS,EAAE;IAC/C,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;IACvB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;IAC7D,OAAO,GAAG,CAAC;AACb,CAAC,CAAC","sourcesContent":["import { TranslationFunction, TranslationPack } from '../../i18n';\nimport { ExcludeStrict } from '../../types';\nimport { cap } from '../../utils';\n\nimport { AbsoluteVariant, DateTimeFormat, DateTimeVariant } from './DateTime.types';\nimport { CALENDAR_TYPES } from './Input/local';\nimport {\n  ClockFormat,\n  getEndOfWeek,\n  getQuarter,\n  getStartOfWeek,\n  getWeek,\n  getWeekYear\n} from './Input/utils';\n\nconst unitsInMs = {\n  year: 24 * 60 * 60 * 1000 * 365,\n  month: (24 * 60 * 60 * 1000 * 365) / 12,\n  day: 24 * 60 * 60 * 1000,\n  hour: 60 * 60 * 1000,\n  minute: 60 * 1000,\n  second: 1000\n} satisfies Partial<Record<Intl.RelativeTimeFormatUnit, number>>;\n\ntype TimeUnit = keyof typeof unitsInMs;\n\ntype DateTimeFormatOptions = {\n  locale: string;\n  format: DateTimeFormat;\n  timeZone?: string;\n  clockFormat?: ClockFormat;\n  calendarType?: string;\n} & (\n  | {\n      variant: ExcludeStrict<DateTimeVariant, 'quarteryear'>;\n      t?: TranslationFunction<TranslationPack>;\n    }\n  | { variant: 'quarteryear'; t: TranslationFunction<TranslationPack> }\n);\n\ntype TimeOptions = Pick<Intl.DateTimeFormatOptions, 'hour' | 'minute' | 'second' | 'hour12'>;\n\nconst timeShort = {\n  hour: 'numeric',\n  minute: 'numeric'\n} satisfies TimeOptions;\n\nconst timeShort12 = {\n  ...timeShort,\n  hour12: true\n} satisfies TimeOptions;\n\nconst timeShort24 = {\n  ...timeShort,\n  hour12: false\n} satisfies TimeOptions;\n\nconst timeLong = {\n  ...timeShort,\n  second: 'numeric'\n} satisfies TimeOptions;\n\nconst timeLong12 = {\n  ...timeShort12,\n  second: 'numeric'\n} satisfies TimeOptions;\n\nconst timeLong24 = {\n  ...timeShort24,\n  second: 'numeric'\n} satisfies TimeOptions;\n\ntype AddClockFormatToTimeKeys<Key extends DateTimeVariant> = Key extends `${string}time`\n  ? `${Key}${'' | 12 | 24}`\n  : Key;\n\nconst formatMapping = {\n  date: {\n    short: { year: 'numeric', month: 'short', day: 'numeric' },\n    long: { year: 'numeric', month: 'long', day: 'numeric' },\n    numeric: { year: 'numeric', month: 'numeric', day: 'numeric' }\n  },\n  datetime: {\n    short: { year: 'numeric', month: 'short', day: 'numeric', ...timeShort },\n    long: { year: 'numeric', month: 'long', day: 'numeric', ...timeLong },\n    numeric: { year: 'numeric', month: 'numeric', day: 'numeric', ...timeShort }\n  },\n  datetime12: {\n    short: { year: 'numeric', month: 'short', day: 'numeric', ...timeShort12 },\n    long: { year: 'numeric', month: 'long', day: 'numeric', ...timeLong12 },\n    numeric: { year: 'numeric', month: 'numeric', day: 'numeric', ...timeShort12 }\n  },\n  datetime24: {\n    short: { year: 'numeric', month: 'short', day: 'numeric', ...timeShort24 },\n    long: { year: 'numeric', month: 'long', day: 'numeric', ...timeLong24 },\n    numeric: { year: 'numeric', month: 'numeric', day: 'numeric', ...timeShort24 }\n  },\n  time: {\n    short: timeShort,\n    long: timeLong,\n    numeric: timeShort\n  },\n  time12: {\n    short: timeShort12,\n    long: timeLong12,\n    numeric: timeShort12\n  },\n  time24: {\n    short: timeShort24,\n    long: timeLong24,\n    numeric: timeShort24\n  },\n  month: {\n    short: { month: 'short' },\n    long: { month: 'long' },\n    numeric: { month: 'numeric' }\n  },\n  monthyear: {\n    short: { year: 'numeric', month: 'short' },\n    long: { year: 'numeric', month: 'long' },\n    numeric: { year: 'numeric', month: 'numeric' }\n  },\n  week: {\n    short: { month: 'short', day: 'numeric' },\n    long: { month: 'long', day: 'numeric' },\n    numeric: { month: 'numeric', day: 'numeric' }\n  },\n  year: {\n    short: { year: 'numeric' },\n    long: { year: 'numeric' },\n    numeric: { year: '2-digit' }\n  },\n  relative: {\n    short: { style: 'long', numeric: 'auto' },\n    long: { style: 'long', numeric: 'auto' },\n    numeric: { style: 'short', numeric: 'auto' }\n  }\n} satisfies Record<\n  AddClockFormatToTimeKeys<ExcludeStrict<AbsoluteVariant, 'quarteryear'>>,\n  Record<DateTimeFormat, Intl.DateTimeFormatOptions>\n> &\n  Record<'relative', Record<DateTimeFormat, Intl.RelativeTimeFormatOptions>>;\n\nconst dateTimeFormatCache: Record<\n  // locale\n  string,\n  Record<\n    // timeZone\n    string,\n    Map<Intl.DateTimeFormatOptions, Intl.DateTimeFormat>\n  >\n> = {};\n\nconst relativeTimeFormatCache: Record<\n  // locale\n  string,\n  Map<Intl.RelativeTimeFormatOptions, Intl.RelativeTimeFormat>\n> = {};\n\nconst displayNamesCache: Record<\n  // locale\n  string,\n  Intl.DateTimeDisplayNames\n> = {};\n\nexport function formatDateTime(\n  value: Date,\n  {\n    t,\n    locale,\n    format,\n    variant,\n    clockFormat,\n    calendarType = CALENDAR_TYPES.ISO_8601,\n    timeZone\n  }: DateTimeFormatOptions\n) {\n  const getFormattedDate = (\n    date: Date,\n    dateVariant: ExcludeStrict<AbsoluteVariant, 'quarteryear'>,\n    overrideTimeZone?: string\n  ) => {\n    const resolvedVariant: AddClockFormatToTimeKeys<typeof dateVariant> =\n      dateVariant === 'time' || dateVariant === 'datetime'\n        ? `${dateVariant}${clockFormat ?? ''}`\n        : dateVariant;\n    const resolvedTimeZone = overrideTimeZone ?? timeZone;\n    const resolvedOptions = formatMapping[resolvedVariant][format];\n\n    dateTimeFormatCache[locale] ??= {};\n    dateTimeFormatCache[locale][`${resolvedTimeZone}`] ??= new Map();\n\n    const map = dateTimeFormatCache[locale][`${resolvedTimeZone}`];\n\n    if (!map.has(resolvedOptions)) {\n      map.set(\n        resolvedOptions,\n        new Intl.DateTimeFormat(locale, {\n          ...resolvedOptions,\n          timeZone: resolvedTimeZone\n        })\n      );\n    }\n\n    return map.get(resolvedOptions)!.format(date);\n  };\n\n  const relativeTimeFormatter = (relativeValue: number, unit: TimeUnit) => {\n    const resolvedOptions = formatMapping.relative[format];\n\n    relativeTimeFormatCache[locale] ??= new Map();\n    const map = relativeTimeFormatCache[locale];\n\n    if (!map.has(resolvedOptions)) {\n      map.set(resolvedOptions, new Intl.RelativeTimeFormat(locale, resolvedOptions));\n    }\n\n    return map.get(resolvedOptions)!.format(relativeValue, unit);\n  };\n\n  const getUnitsElapsed = (date: Date, unit: TimeUnit): number => {\n    let amount: number;\n    const now = new Date();\n\n    switch (unit) {\n      case 'year':\n        amount = date.getUTCFullYear() - now.getUTCFullYear();\n        break;\n      case 'month':\n        if (date.getUTCFullYear() === now.getUTCFullYear()) {\n          amount = date.getUTCMonth() - now.getUTCMonth();\n        } else if (date < now) {\n          amount = (11 - date.getUTCMonth() + now.getUTCMonth() + 1) * -1;\n        } else {\n          amount = 11 - now.getUTCMonth() + date.getUTCMonth() + 1;\n        }\n        break;\n      case 'day':\n        if (date.getUTCMonth() === now.getUTCMonth()) {\n          amount = date.getUTCDate() - now.getUTCDate();\n        } else if (date < now) {\n          const maximalDayOfMonth = new Date(\n            Date.UTC(date.getUTCFullYear(), date.getUTCMonth() + 1, 0)\n          ).getUTCDate();\n          amount = (maximalDayOfMonth - date.getUTCDate() + now.getUTCDate()) * -1;\n        } else {\n          const maximalDayOfMonth = new Date(\n            Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), 0)\n          ).getUTCDate();\n          amount = maximalDayOfMonth - now.getUTCDate() + date.getUTCDate() + 1;\n        }\n        break;\n      case 'hour':\n        if (date.getUTCDate() === now.getUTCDate()) {\n          amount = date.getUTCHours() - now.getUTCHours();\n        } else if (date < now) {\n          amount = (23 - date.getUTCHours() + now.getUTCHours() + 1) * -1;\n        } else {\n          amount = 23 - now.getUTCHours() + date.getUTCHours() + 1;\n        }\n        break;\n      case 'minute':\n        if (date.getUTCHours() === now.getUTCHours()) {\n          amount = date.getUTCMinutes() - now.getUTCMinutes();\n        } else if (date < now) {\n          amount = (59 - date.getUTCMinutes() + now.getUTCMinutes() + 1) * -1;\n        } else {\n          amount = 59 - now.getUTCMinutes() + date.getUTCMinutes() + 1;\n        }\n        break;\n      default:\n        amount = 0;\n        break;\n    }\n    return amount;\n  };\n\n  const getRelativeTime = (date: Date) => {\n    let elapsed = date.getTime() - Date.now();\n    // Deliberately reduce precision to 1 minute\n    if (Math.abs(elapsed) < 60000) elapsed = 0;\n    const unit = (Object.keys(unitsInMs).find(u => Math.abs(elapsed) >= unitsInMs[u as TimeUnit]) ||\n      'second') as TimeUnit;\n    const amount = getUnitsElapsed(date, unit);\n\n    return relativeTimeFormatter(amount, unit);\n  };\n\n  const getFormattedWeek = (date: Date) => {\n    displayNamesCache[locale] ??= new Intl.DisplayNames(locale, {\n      style: 'long',\n      type: 'dateTimeField'\n    }) as Intl.DateTimeDisplayNames;\n\n    const displayNames = displayNamesCache[locale];\n    const adjustedUTCDate = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n    const startDate = getFormattedDate(\n      getStartOfWeek(adjustedUTCDate, calendarType),\n      'week',\n      'UTC'\n    );\n    const endDate = getFormattedDate(getEndOfWeek(adjustedUTCDate, calendarType), 'week', 'UTC');\n    return `${cap(displayNames.of('weekOfYear'))} ${getWeek(\n      adjustedUTCDate,\n      calendarType\n    )}, ${getWeekYear(adjustedUTCDate)} (${startDate} - ${endDate})`;\n  };\n\n  const getFormattedQuarterYear = (date: Date) => {\n    const formattedYear = getFormattedDate(date, 'year');\n    const adjustedUTCDate = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n    const quarterNumber = getQuarter(adjustedUTCDate);\n    return `${t!(`date_quarter_q${quarterNumber}`, [formattedYear])}`;\n  };\n\n  switch (variant) {\n    case 'relative':\n      return getRelativeTime(value);\n    case 'week':\n      return getFormattedWeek(value);\n    case 'quarteryear':\n      return getFormattedQuarterYear(value);\n    default:\n      return getFormattedDate(value, variant);\n  }\n}\n\nconst dayInMs = 24 * 60 * 60 * 1000;\nconst hourInMs = 60 * 60 * 1000;\nconst minuteInMs = 60 * 1000;\nconst secondInMs = 1000;\n\ninterface DurationFormatOptions {\n  locale: string;\n  significantUnits: 4 | 3 | 2 | 1;\n  unitDisplay?: Intl.NumberFormatOptions['unitDisplay'];\n}\n\nconst numberFormatCache: Record<\n  // locale\n  string,\n  Record<\n    // unit\n    string,\n    Record<\n      // unitDisplay\n      string,\n      Intl.NumberFormat\n    >\n  >\n> = {};\n\nexport function formatDuration(\n  valueInMs: number,\n  { locale, significantUnits, unitDisplay = 'narrow' }: DurationFormatOptions\n) {\n  numberFormatCache[locale] ??= {};\n\n  const sign = valueInMs < 0 ? '-' : '';\n  const absMs = Math.abs(valueInMs);\n  if (absMs < secondInMs) {\n    numberFormatCache[locale].seconds ??= {};\n\n    numberFormatCache[locale].seconds.narrow ??= new Intl.NumberFormat(locale, {\n      style: 'unit',\n      unit: 'second',\n      unitDisplay: 'narrow'\n    });\n\n    return numberFormatCache[locale].seconds.narrow.format(0);\n  }\n\n  const durationParts = [\n    { unit: 'day', value: Math.floor(absMs / dayInMs) },\n    { unit: 'hour', value: Math.floor((absMs % dayInMs) / hourInMs) },\n    { unit: 'minute', value: Math.floor((absMs % hourInMs) / minuteInMs) },\n    { unit: 'second', value: Math.floor((absMs % minuteInMs) / secondInMs) }\n  ];\n\n  const result = [];\n  for (let i = 0; result.length < significantUnits && i < durationParts.length; i += 1) {\n    const { value, unit } = durationParts[i];\n\n    if (value > 0) {\n      numberFormatCache[locale][unit] ??= {};\n      numberFormatCache[locale][unit][unitDisplay] ??= new Intl.NumberFormat(locale, {\n        style: 'unit',\n        unit,\n        unitDisplay\n      });\n\n      result.push(numberFormatCache[locale][unit][unitDisplay].format(value));\n    }\n  }\n  return `${sign}${result.join(' ')}`;\n}\n\n/**\n * @returns Current date and time value adjusted for local time zone.\n */\nexport const getAdjustedUTCDateTime = (): Date => {\n  const now = new Date();\n  now.setTime(now.getTime() - now.getTimezoneOffset() * 60000);\n  return now;\n};\n"]}