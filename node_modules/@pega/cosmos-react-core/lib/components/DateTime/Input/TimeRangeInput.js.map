{"version":3,"file":"TimeRangeInput.js","sourceRoot":"","sources":["../../../../src/components/DateTime/Input/TimeRangeInput.tsx"],"names":[],"mappings":";AAAA,OAAO,EACL,UAAU,EAGV,WAAW,EACX,mBAAmB,EACnB,UAAU,EACV,MAAM,EACP,MAAM,OAAO,CAAC;AAEf,OAAO,IAAI,MAAM,YAAY,CAAC;AAE9B,OAAO,EAAE,kBAAkB,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAOzF,OAAO,EAAE,yBAAyB,EAAE,MAAM,0BAA0B,CAAC;AAErE,OAAO,SAAS,MAAM,iBAAiB,CAAC;AACxC,OAAO,EAAE,wBAAwB,EAAE,MAAM,sBAAsB,CAAC;AAChE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,OAAO,EAAe,WAAW,EAAE,MAAM,SAAS,CAAC;AACnD,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAwC5C,MAAM,OAAO,GAAG,CAAC,SAAgB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAmB,EAAS,EAAE;IAC5E,QAAQ,IAAI,EAAE;QACZ,KAAK,OAAO,CAAC,CAAC;YACZ,OAAO,EAAE,GAAG,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SACvC;QACD,KAAK,KAAK,CAAC,CAAC;YACV,OAAO,EAAE,GAAG,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;SACrC;QACD;YACE,OAAO,SAAS,CAAC;KACpB;AACH,CAAC,CAAC;AAEF,MAAM,0BAA0B,GAAG,CAAC,CAAU,EAA6B,EAAE;IAC3E,OAAO;QACL,gBAAgB,EAAE,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;QAC5F,gBAAgB,EAAE,CAAC;KACpB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,cAAc,GAA0D,UAAU,CACtF,SAAS,cAAc,CACrB,EACE,MAAM,EACN,KAAK,GAAG,EAAE,EACV,QAAQ,EACR,OAAO,EACP,MAAM,EACN,KAAK,EACL,SAAS,EACT,OAAO,EACP,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,GAAG,EACH,GAAG,EACH,WAAW,EACX,cAAc,EACd,WAAW,EACX,IAAI,EACJ,MAAM,EACN,kBAAkB,EAClB,gBAAgB,EAChB,SAAS,EACT,MAAM,EACN,GAAG,SAAS,EACQ,EACtB,GAAwB;IAExB,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAC;IAE7D,MAAM,CAAC,GAAG,OAAO,EAAE,CAAC;IAEpB,MAAM,iBAAiB,GAAG,MAAM,CAAsB,IAAI,CAAC,CAAC;IAC5D,MAAM,eAAe,GAAG,MAAM,CAAsB,IAAI,CAAC,CAAC;IAE1D,MAAM,oBAAoB,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IACvD,MAAM,kBAAkB,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAErD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,OAAO,EAAE;QAC5C,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,SAAS;QACnE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,SAAS;KAC9D,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,MAAM,CAA4B,0BAA0B,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAChG,MAAM,UAAU,GAAG,MAAM,CAA4B,0BAA0B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAE5F,mBAAmB,CACjB,MAAM,EACN,GAAG,EAAE,CAAC,CAAC;QACL,KAAK,EAAE,GAAG,EAAE;YACV,oBAAoB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;YACtC,kBAAkB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;YACpC,MAAM,sBAAsB,GAAG,0BAA0B,CAAC,SAAS,CAAC,CAAC;YACrE,YAAY,CAAC,OAAO,GAAG,sBAAsB,CAAC;YAC9C,UAAU,CAAC,OAAO,GAAG,sBAAsB,CAAC;YAC5C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;YAC9C,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;YAC5C,QAAQ,CAAC;gBACP,KAAK,EAAE,sBAAsB;gBAC7B,GAAG,EAAE,sBAAsB;aAC5B,CAAC,CAAC;QACL,CAAC;KACF,CAAC,EACF,CAAC,QAAQ,CAAC,CACX,CAAC;IAEF,MAAM,aAAa,GAAG,WAAW,CAC/B,CAAC,OAAgB,EAAE,EAAE;QACnB,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;YAC7B,KAAK,EAAE,YAAY,CAAC,OAAO;YAC3B,GAAG,EAAE,UAAU,CAAC,OAAO;SACxB,CAAC,CAAC;IACL,CAAC,EACD,CAAC,OAAO,EAAE,MAAM,CAAC,CAClB,CAAC;IAEF,MAAM,YAAY,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;IAC7C,cAAc,CAAC,CAAC,YAAY,CAAC,EAAE,aAAa,CAAC,CAAC;IAE9C,MAAM,WAAW,GAAG;QAClB,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,GAAG;QACH,GAAG;QACH,MAAM;QACN,WAAW;QACX,cAAc;QACd,WAAW;KACZ,CAAC;IAEF,OAAO,CACL,KAAC,SAAS,IACR,MAAM,EAAE,OAAO,EACf,EAAE,EAAC,UAAU,KACT,SAAS,EACb,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAC7B,GAAG,EAAE,YAAY,EACjB,OAAO,EAAC,QAAQ,EAChB,KAAK,EAAE,KAAK,EACZ,WAAW,EAAE,WAAW,EACxB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,MAAM,YAEd,KAAC,IAAI,IAAC,SAAS,QAAC,EAAE,EAAE,yBAAyB,YAC1C,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,CACjB,8BACE,KAAC,SAAS,OACJ,WAAW,EACf,MAAM,EAAE,OAAO,CAAC,QAAQ,EACxB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,MAAM,EAAE,YAAY,CAAC,EAAE;4BACrB,QAAQ,CAAC;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,gBAAgB;6BACtE,CAAC,CAAC;4BAEH,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC;4BACpC,QAAQ,CAAC;gCACP,KAAK,EAAE,YAAY;gCACnB,GAAG,EAAE,0BAA0B,CAAC,KAAK,CAAC,GAAG,CAAC;6BAC3C,CAAC,CAAC;wBACL,CAAC,EACD,KAAK,EAAE,SAAS,gBACJ,GAAG,CAAC,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EACxE,cAAc,EAAE,kBAAkB,EAClC,SAAS,EAAE,SAAS,EACpB,GAAG,EAAE,iBAAiB,EACtB,MAAM,EAAE,oBAAoB,GAC5B,EACF,KAAC,SAAS,OACJ,WAAW,EACf,MAAM,EAAE,OAAO,CAAC,MAAM,EACtB,KAAK,EAAE,KAAK,CAAC,GAAG,EAChB,MAAM,EAAE,YAAY,CAAC,EAAE;4BACrB,QAAQ,CAAC;gCACP,IAAI,EAAE,KAAK;gCACX,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,gBAAgB;6BACtE,CAAC,CAAC;4BAEH,UAAU,CAAC,OAAO,GAAG,YAAY,CAAC;4BAClC,QAAQ,CAAC;gCACP,KAAK,EAAE,0BAA0B,CAAC,KAAK,CAAC,KAAK,CAAC;gCAC9C,GAAG,EAAE,YAAY;6BAClB,CAAC,CAAC;wBACL,CAAC,EACD,KAAK,EAAE,OAAO,gBACF,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EACtE,cAAc,EAAE,gBAAgB,EAChC,GAAG,EAAE,eAAe,EACpB,MAAM,EAAE,kBAAkB,GAC1B,IACD,CACJ,CAAC,CAAC,CAAC,CACF,8BACE,KAAC,aAAa,OACR,WAAW,EACf,MAAM,EAAE,OAAO,CAAC,YAAY,EAC5B,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,MAAM,EAAE,YAAY,CAAC,EAAE;4BACrB,QAAQ,CAAC;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,gBAAgB;6BACtE,CAAC,CAAC;4BAEH,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC;4BACpC,QAAQ,CAAC;gCACP,KAAK,EAAE,YAAY;gCACnB,GAAG,EAAE,0BAA0B,CAAC,KAAK,CAAC,GAAG,CAAC;6BAC3C,CAAC,CAAC;wBACL,CAAC,EACD,KAAK,EAAE,SAAS,gBACJ,GAAG,CAAC,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EACxE,cAAc,EAAE,kBAAkB,EAClC,GAAG,EAAE,iBAAiB,EACtB,MAAM,EAAE,oBAAoB,GAC5B,EACF,KAAC,aAAa,IACZ,MAAM,EAAE,OAAO,CAAC,UAAU,KACtB,WAAW,EACf,KAAK,EAAE,KAAK,CAAC,GAAG,EAChB,MAAM,EAAE,YAAY,CAAC,EAAE;4BACrB,QAAQ,CAAC;gCACP,IAAI,EAAE,KAAK;gCACX,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,gBAAgB;6BACtE,CAAC,CAAC;4BAEH,UAAU,CAAC,OAAO,GAAG,YAAY,CAAC;4BAClC,QAAQ,CAAC;gCACP,KAAK,EAAE,0BAA0B,CAAC,KAAK,CAAC,KAAK,CAAC;gCAC9C,GAAG,EAAE,YAAY;6BAClB,CAAC,CAAC;wBACL,CAAC,EACD,KAAK,EAAE,OAAO,gBACF,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EACtE,cAAc,EAAE,gBAAgB,EAChC,GAAG,EAAE,eAAe,EACpB,MAAM,EAAE,kBAAkB,GAC1B,IACD,CACJ,GACI,GACG,CACb,CAAC;AACJ,CAAC,CACF,CAAC;AACF,eAAe,WAAW,CAAC,cAAc,EAAE,wBAAwB,CAAC,CAAC","sourcesContent":["import {\n  forwardRef,\n  FunctionComponent,\n  Ref,\n  useCallback,\n  useImperativeHandle,\n  useReducer,\n  useRef\n} from 'react';\n\nimport Flex from '../../Flex';\nimport { FormControlProps, HandleValue } from '../../FormControl';\nimport { useConsolidatedRef, useFocusWithin, useI18n, useTestIds } from '../../../hooks';\nimport DateTimeProps, {\n  DateRangeCallbackParameter,\n  DateTimeCallbackParameter,\n  DateTimeProperties\n} from '../DateTime.types';\nimport { ForwardProps } from '../../../types';\nimport { StyledRangeInputContainer } from '../../Input/Input.styles';\nimport { MinuteInterval } from '../Picker/DatePicker.types';\nimport FormField from '../../FormField';\nimport { getTimeRangeInputTestIds } from '../DateTime.test-ids';\nimport { withTestIds } from '../../../utils';\n\nimport { ClockFormat, parseToDate } from './utils';\nimport TimeInput from './TimeInput';\nimport DateTimeInput from './DateTimeInput';\n\nexport interface TimeRangeInputProps extends DateTimeProperties {\n  /** Object of range boundaries. */\n  value?: { start?: DateTimeProps['value']; end?: DateTimeProps['value'] };\n  /** Callback fired when inputs value changes. */\n  onChange: (value: DateRangeCallbackParameter) => void;\n  /** Callback fired when the component gets focused. */\n  onFocus?: (value: DateRangeCallbackParameter) => void;\n  /** Callback fired when the component loses focus. */\n  onBlur?: (value: DateRangeCallbackParameter) => void;\n  /** Pass a string or a fragment with an Icon and string for first part of TimeRangeInput. */\n  fromLabel?: FormControlProps['label'];\n  /** Pass a string or a fragment with an Icon and string for second part of TimeRangeInput. */\n  toLabel?: FormControlProps['label'];\n  /** Pass an object with \"heading\" and \"content\" properties to show AdditionalInfo for second part of DataRangeInput. */\n  toAdditionalInfo?: FormControlProps['additionalInfo'];\n  /** Pass an object with \"heading\" and \"content\" properties to show AdditionalInfo for first part of DataRangeInput. */\n  fromAdditionalInfo?: FormControlProps['additionalInfo'];\n  /** Controls which input is displayed */\n  mode: 'time' | 'datetime';\n  /**\n   * Display the time with seconds.\n   * @default false\n   */\n  withSeconds?: boolean;\n  /**\n   * Defines interval for time picker options (in minutes).\n   * @default 30\n   */\n  pickerInterval?: MinuteInterval;\n  /** Defines clock format that overrides locale based format */\n  clockFormat?: ClockFormat;\n  /** Imperative handle */\n  handle?: Ref<HandleValue>;\n}\n\ntype DateRangeAction = { type: 'start' | 'end'; value?: number };\ntype State = { start?: number; end?: number };\n\nconst reducer = (prevState: State, { type, value }: DateRangeAction): State => {\n  switch (type) {\n    case 'start': {\n      return { ...prevState, start: value };\n    }\n    case 'end': {\n      return { ...prevState, end: value };\n    }\n    default:\n      return prevState;\n  }\n};\n\nconst convertToCallbackParameter = (v?: number): DateTimeCallbackParameter => {\n  return {\n    valueAsISOString: v === undefined || Number.isNaN(v) ? undefined : new Date(v).toISOString(),\n    valueAsTimestamp: v\n  };\n};\n\nconst TimeRangeInput: FunctionComponent<TimeRangeInputProps & ForwardProps> = forwardRef(\n  function TimeRangeInput(\n    {\n      testId,\n      value = {},\n      onChange,\n      onFocus,\n      onBlur,\n      label,\n      fromLabel,\n      toLabel,\n      labelHidden,\n      required,\n      readOnly,\n      disabled,\n      min,\n      max,\n      withSeconds,\n      pickerInterval,\n      clockFormat,\n      mode,\n      status,\n      fromAdditionalInfo,\n      toAdditionalInfo,\n      autoFocus,\n      handle,\n      ...restProps\n    }: TimeRangeInputProps,\n    ref: Ref<HTMLDivElement>\n  ) {\n    const testIds = useTestIds(testId, getTimeRangeInputTestIds);\n\n    const t = useI18n();\n\n    const startTimeInputRef = useRef<HTMLFieldSetElement>(null);\n    const endTimeInputRef = useRef<HTMLFieldSetElement>(null);\n\n    const startTimeClearHandle = useRef<HandleValue>(null);\n    const endTimeClearHandle = useRef<HandleValue>(null);\n\n    const [state, dispatch] = useReducer(reducer, {\n      start: value.start ? parseToDate(value.start).getTime() : undefined,\n      end: value.end ? parseToDate(value.end).getTime() : undefined\n    });\n\n    const startTimeRef = useRef<DateTimeCallbackParameter>(convertToCallbackParameter(state.start));\n    const endTimeRef = useRef<DateTimeCallbackParameter>(convertToCallbackParameter(state.end));\n\n    useImperativeHandle(\n      handle,\n      () => ({\n        clear: () => {\n          startTimeClearHandle.current?.clear();\n          endTimeClearHandle.current?.clear();\n          const emptyCallbackParameter = convertToCallbackParameter(undefined);\n          startTimeRef.current = emptyCallbackParameter;\n          endTimeRef.current = emptyCallbackParameter;\n          dispatch({ type: 'start', value: undefined });\n          dispatch({ type: 'end', value: undefined });\n          onChange({\n            start: emptyCallbackParameter,\n            end: emptyCallbackParameter\n          });\n        }\n      }),\n      [onChange]\n    );\n\n    const onFocusChange = useCallback(\n      (focused: boolean) => {\n        (focused ? onFocus : onBlur)?.({\n          start: startTimeRef.current,\n          end: endTimeRef.current\n        });\n      },\n      [onFocus, onBlur]\n    );\n\n    const containerRef = useConsolidatedRef(ref);\n    useFocusWithin([containerRef], onFocusChange);\n\n    const commonProps = {\n      required,\n      readOnly,\n      disabled,\n      min,\n      max,\n      status,\n      withSeconds,\n      pickerInterval,\n      clockFormat\n    };\n\n    return (\n      <FormField\n        testId={testIds}\n        as='fieldset'\n        {...restProps}\n        container={{ wrap: 'nowrap' }}\n        ref={containerRef}\n        labelAs='legend'\n        label={label}\n        labelHidden={labelHidden}\n        disabled={disabled}\n        required={required}\n        readOnly={readOnly}\n        status={status}\n      >\n        <Flex container as={StyledRangeInputContainer}>\n          {mode === 'time' ? (\n            <>\n              <TimeInput\n                {...commonProps}\n                testId={testIds.fromTime}\n                value={state.start}\n                onBlur={changedValue => {\n                  dispatch({\n                    type: 'start',\n                    value: changedValue.state ? undefined : changedValue.valueAsTimestamp\n                  });\n\n                  startTimeRef.current = changedValue;\n                  onChange({\n                    start: changedValue,\n                    end: convertToCallbackParameter(state.end)\n                  });\n                }}\n                label={fromLabel}\n                aria-label={`${t('range_from_datetime') + (label ? ` - ${label}` : '')}`}\n                additionalInfo={fromAdditionalInfo}\n                autoFocus={autoFocus}\n                ref={startTimeInputRef}\n                handle={startTimeClearHandle}\n              />\n              <TimeInput\n                {...commonProps}\n                testId={testIds.toTime}\n                value={state.end}\n                onBlur={changedValue => {\n                  dispatch({\n                    type: 'end',\n                    value: changedValue.state ? undefined : changedValue.valueAsTimestamp\n                  });\n\n                  endTimeRef.current = changedValue;\n                  onChange({\n                    start: convertToCallbackParameter(state.start),\n                    end: changedValue\n                  });\n                }}\n                label={toLabel}\n                aria-label={`${t('range_to_datetime') + (label ? ` - ${label}` : '')}`}\n                additionalInfo={toAdditionalInfo}\n                ref={endTimeInputRef}\n                handle={endTimeClearHandle}\n              />\n            </>\n          ) : (\n            <>\n              <DateTimeInput\n                {...commonProps}\n                testId={testIds.fromDateTime}\n                value={state.start}\n                onBlur={changedValue => {\n                  dispatch({\n                    type: 'start',\n                    value: changedValue.state ? undefined : changedValue.valueAsTimestamp\n                  });\n\n                  startTimeRef.current = changedValue;\n                  onChange({\n                    start: changedValue,\n                    end: convertToCallbackParameter(state.end)\n                  });\n                }}\n                label={fromLabel}\n                aria-label={`${t('range_from_datetime') + (label ? ` - ${label}` : '')}`}\n                additionalInfo={fromAdditionalInfo}\n                ref={startTimeInputRef}\n                handle={startTimeClearHandle}\n              />\n              <DateTimeInput\n                testId={testIds.toDateTime}\n                {...commonProps}\n                value={state.end}\n                onBlur={changedValue => {\n                  dispatch({\n                    type: 'end',\n                    value: changedValue.state ? undefined : changedValue.valueAsTimestamp\n                  });\n\n                  endTimeRef.current = changedValue;\n                  onChange({\n                    start: convertToCallbackParameter(state.start),\n                    end: changedValue\n                  });\n                }}\n                label={toLabel}\n                aria-label={`${t('range_to_datetime') + (label ? ` - ${label}` : '')}`}\n                additionalInfo={toAdditionalInfo}\n                ref={endTimeInputRef}\n                handle={endTimeClearHandle}\n              />\n            </>\n          )}\n        </Flex>\n      </FormField>\n    );\n  }\n);\nexport default withTestIds(TimeRangeInput, getTimeRangeInputTestIds);\n"]}