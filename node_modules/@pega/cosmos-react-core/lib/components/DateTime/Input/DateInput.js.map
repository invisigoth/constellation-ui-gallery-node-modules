{"version":3,"file":"DateInput.js","sourceRoot":"","sources":["../../../../src/components/DateTime/Input/DateInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  ClipboardEvent,\n  FunctionComponent,\n  forwardRef,\n  PropsWithoutRef,\n  Ref,\n  useRef,\n  RefObject,\n  Dispatch,\n  SetStateAction,\n  useImperativeHandle,\n  useEffect,\n  ComponentType\n} from 'react';\nimport styled from 'styled-components';\n\nimport { defaultThemeProp } from '../../../theme';\nimport {\n  useConfiguration,\n  useFocusWithin,\n  useI18n,\n  useOuterEvent,\n  useTestIds\n} from '../../../hooks';\nimport { ForwardProps } from '../../../types';\nimport FormField from '../../FormField';\nimport Flex from '../../Flex';\nimport Button from '../../Button';\nimport Icon, { registerIcon } from '../../Icon';\nimport * as calendarIcon from '../../Icon/icons/calendar.icon';\nimport DatePicker from '../Picker/DatePicker';\nimport type DatePickerProps from '../Picker/DatePicker.types';\nimport { FormControlProps, HandleValue, StyledFormControl } from '../../FormControl';\nimport DateTimeProps, { DateTimeCallbackParameter } from '../DateTime.types';\nimport { cap, withTestIds } from '../../../utils';\nimport Dialog from '../../Dialog/Dialog';\nimport { getDateInputTestIds } from '../DateTime.test-ids';\nimport { getAdjustedUTCDateTime } from '../utils';\n\nimport {\n  getDateFormat,\n  parsePastedTextToDate,\n  parseToDate,\n  validateDate,\n  generatePickerButtonAriaLabel\n} from './utils';\nimport StyledDateTime, {\n  StyledClearNowButtonsContainer,\n  StyledDialogContent,\n  StyledInputContainer\n} from './DateTime.styles';\nimport useAutoFocusNextInput from './useAutoFocusNextInput';\nimport PartInput from './PartInput';\nimport usePickerButton from './usePickerButton';\nimport type { DateParts } from './DateTimeInput.types';\n\nregisterIcon(calendarIcon);\n\nexport interface DateInputHandleValue extends HandleValue {\n  readonly value: Date | undefined;\n  setOpen: Dispatch<SetStateAction<boolean>>;\n  buttonEl: HTMLElement | null;\n}\n\nexport interface DateInputProps extends DateTimeProps {\n  /**\n   * Display additional column with week number in date picker popover.\n   * @default false\n   */\n  showWeekNumber?: boolean;\n  /** Changes default date picker */\n  picker?: {\n    renderer: ComponentType;\n    rendererProps?: Partial<DatePickerProps> & ForwardProps;\n  };\n  /** Pass a heading and content to show additional information on the field. */\n  additionalInfo?: FormControlProps['additionalInfo'];\n  /** Additional properties for imperative control. */\n  handle?: Ref<DateInputHandleValue | HandleValue>;\n}\n\nexport const StyledDateInput = styled(StyledDateTime)<DateInputProps>`\n  padding-inline-end: 0;\n`;\n\nStyledDateInput.defaultProps = defaultThemeProp;\n\nconst convertToCallbackParameter = (\n  date: Date,\n  { year, month: monthIndex, day }: DateParts<string | undefined>\n): DateTimeCallbackParameter => {\n  if ([year, monthIndex, day].every(Boolean)) {\n    if (!validateDate(Number(year), Number(monthIndex) + 1, Number(day))) {\n      return {\n        valueAsISOString: '',\n        valueAsTimestamp: NaN,\n        state: 'invalid'\n      };\n    }\n\n    date.setUTCFullYear(Number(year), Number(monthIndex), Number(day));\n    return {\n      valueAsISOString: date.toISOString(),\n      valueAsTimestamp: date.getTime()\n    };\n  }\n  if ([year, monthIndex, day].every(p => !p)) {\n    return {\n      valueAsISOString: undefined,\n      valueAsTimestamp: undefined\n    };\n  }\n  return {\n    valueAsISOString: '',\n    valueAsTimestamp: NaN,\n    state: 'incomplete'\n  };\n};\n\nconst DateInput: FunctionComponent<DateInputProps & ForwardProps> = forwardRef(function DateInput(\n  props: PropsWithoutRef<DateInputProps>,\n  ref: Ref<HTMLFieldSetElement>\n) {\n  const { locale } = useConfiguration();\n  const {\n    testId,\n    value,\n    min,\n    max,\n    id,\n    label,\n    labelHidden,\n    info = getDateFormat(locale).join(''),\n    status,\n    required,\n    readOnly,\n    disabled,\n    onChange,\n    onFocus,\n    onBlur,\n    onResolveSuggestion,\n    showWeekNumber,\n    picker: { renderer: PickerComp = DatePicker, rendererProps = {} } = {},\n    autoFocus,\n    additionalInfo,\n    handle,\n    ...restProps\n  } = props;\n\n  const testIds = useTestIds(testId, getDateInputTestIds);\n\n  const t = useI18n();\n  const containerRef = useRef<HTMLElement>(null);\n\n  const date = value !== undefined ? parseToDate(value) : undefined;\n\n  const [yearInputRef, monthInputRef, dayInputRef] = [\n    useRef<HTMLInputElement>(null),\n    useRef<HTMLInputElement>(null),\n    useRef<HTMLInputElement>(null)\n  ];\n\n  const pickParts = (): DateParts<string | undefined> => {\n    return {\n      day: dayInputRef.current?.value || undefined,\n      month: monthInputRef.current?.value\n        ? (Number(monthInputRef.current.value) - 1).toString()\n        : undefined,\n      year: yearInputRef.current?.value || undefined\n    };\n  };\n\n  const currentlySelectedDate = () => {\n    const parts = pickParts();\n    if (Object.values(parts).every(Boolean)) {\n      const year = Number(parts.year);\n      const monthIndex = Number(parts.month);\n      const day = Number(parts.day);\n\n      return validateDate(year, monthIndex + 1, day)\n        ? new Date(Date.UTC(year, monthIndex, day))\n        : undefined;\n    }\n  };\n\n  const [open, setOpen, , setPopoverRef, buttonEl, setButtonEl] = usePickerButton();\n\n  const inputContainerRef = useRef<HTMLDivElement>(null);\n\n  const onFocusChange = (focused: boolean) => {\n    const callbackParam = convertToCallbackParameter(\n      date ? new Date(date) : new Date(),\n      pickParts()\n    );\n    if (onFocus && focused) onFocus(callbackParam);\n    if (!focused) {\n      if (inputContainerRef.current) inputContainerRef.current.scrollTop = 0;\n      onBlur?.(callbackParam);\n    }\n  };\n\n  const onInputChange = () => {\n    onChange?.(convertToCallbackParameter(date ? new Date(date) : new Date(), pickParts()));\n    buttonEl?.setAttribute(\n      'aria-label',\n      generatePickerButtonAriaLabel(currentlySelectedDate(), 'date', locale, t, open)\n    );\n  };\n\n  const setInputValue = (newValue?: Date) => {\n    if (dayInputRef.current && monthInputRef.current && yearInputRef.current) {\n      dayInputRef.current.value = newValue?.getUTCDate().toString().padStart(2, '0') ?? '';\n      monthInputRef.current.value =\n        (newValue && (newValue.getUTCMonth() + 1).toString().padStart(2, '0')) ?? '';\n      yearInputRef.current.value = newValue?.getUTCFullYear().toString() ?? '';\n    }\n  };\n\n  const onPaste = (e: ClipboardEvent) => {\n    const text = e.clipboardData.getData('text');\n    const newDate = parsePastedTextToDate(text, locale, date || new Date());\n    if (newDate) {\n      e.preventDefault();\n      setInputValue(newDate);\n      onInputChange();\n    }\n  };\n\n  // autoclose picker on focusing out\n  useOuterEvent('focusin', [containerRef], e => {\n    if (containerRef.current?.contains(e.relatedTarget as HTMLElement)) setOpen(false);\n  });\n\n  const displayNames = new Intl.DisplayNames(locale, { style: 'long', type: 'dateTimeField' });\n\n  const DayInput = (\n    <PartInput\n      data-testid={testIds.controlDay}\n      key='day'\n      placeholder={t('day_placeholder')}\n      aria-label={displayNames.of('day')}\n      value={date?.getUTCDate()}\n      onChange={onInputChange}\n      size={2}\n      maxLength={2}\n      readOnly={readOnly}\n      min={1}\n      max={31}\n      ref={dayInputRef}\n    />\n  );\n\n  const MonthInput = (\n    <PartInput\n      data-testid={testIds.controlMonth}\n      key='month'\n      placeholder={t('month_placeholder')}\n      aria-label={displayNames.of('month')}\n      value={date ? date.getUTCMonth() + 1 : undefined}\n      onChange={onInputChange}\n      size={2}\n      maxLength={2}\n      readOnly={readOnly}\n      min={1}\n      max={12}\n      ref={monthInputRef}\n    />\n  );\n\n  const YearInput = (\n    <PartInput\n      data-testid={testIds.controlYear}\n      key='year'\n      placeholder={t('year_placeholder')}\n      aria-label={displayNames.of('year')}\n      value={date?.getUTCFullYear()}\n      onChange={onInputChange}\n      size={4}\n      maxLength={4}\n      padWithZeros={false}\n      readOnly={readOnly}\n      min={1}\n      ref={yearInputRef}\n    />\n  );\n\n  useFocusWithin([containerRef], onFocusChange);\n\n  useImperativeHandle(\n    handle,\n    () => ({\n      setOpen,\n      buttonEl,\n      get value() {\n        return currentlySelectedDate();\n      },\n      clear: () => {\n        if (dayInputRef.current) dayInputRef.current.value = '';\n        if (monthInputRef.current) monthInputRef.current.value = '';\n        if (yearInputRef.current) yearInputRef.current.value = '';\n        onInputChange();\n      }\n    }),\n    [onInputChange]\n  );\n\n  const PickerButton = (\n    <>\n      <Button\n        data-testid={testIds.openClosePicker}\n        variant='simple'\n        icon\n        ref={setButtonEl}\n        onClick={() => setOpen(cur => !cur)}\n        aria-label={generatePickerButtonAriaLabel(currentlySelectedDate(), 'date', locale, t, open)}\n        readOnly={readOnly}\n        disabled={disabled}\n      >\n        <Icon name='calendar' />\n      </Button>\n      {open && buttonEl && (\n        <Dialog\n          ref={setPopoverRef}\n          target={buttonEl}\n          placement='bottom-end'\n          ariaLabel={t('choose_date')}\n        >\n          <Flex container={{ direction: 'column' }} as={StyledDialogContent}>\n            <PickerComp\n              testId={testIds.root}\n              selected={currentlySelectedDate()}\n              min={min}\n              max={max}\n              showWeekNumber={showWeekNumber}\n              {...rendererProps}\n              onChange={selected => {\n                setInputValue(selected);\n                setOpen(false);\n                setTimeout(() => buttonEl?.focus());\n                onInputChange();\n                rendererProps?.onChange?.(selected);\n              }}\n            />\n            <Flex as={StyledClearNowButtonsContainer} container={{ justify: 'between' }}>\n              <Button\n                data-testid={testIds.clearCurrentDate}\n                aria-label={t('clear_current_date')}\n                onClick={() => {\n                  setInputValue(undefined);\n                  setOpen(false);\n                  setTimeout(() => buttonEl?.focus());\n                  onInputChange();\n                }}\n              >\n                {t('clear')}\n              </Button>\n              <Button\n                data-testid={testIds.setCurrentDate}\n                aria-label={t('set_current_date_a11y')}\n                onClick={() => {\n                  setInputValue(getAdjustedUTCDateTime());\n                  setOpen(false);\n                  setTimeout(() => buttonEl?.focus());\n                  onInputChange();\n                }}\n              >\n                {cap(new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(0, 'day'))}\n              </Button>\n            </Flex>\n          </Flex>\n        </Dialog>\n      )}\n    </>\n  );\n\n  const orderedRefs: RefObject<HTMLInputElement>[] = [];\n\n  const Comp = (\n    <Flex\n      data-testid={testIds.root}\n      as={StyledDateInput}\n      forwardedAs={StyledFormControl}\n      hasSuggestion={status === 'pending' && !!onResolveSuggestion}\n      container={{ alignItems: 'center', wrap: 'nowrap' }}\n      status={status}\n      readOnly={readOnly}\n      disabled={disabled}\n      ref={containerRef}\n      onClick={(e: MouseEvent) => {\n        if (e.target === containerRef.current) orderedRefs[0].current?.focus();\n      }}\n      {...restProps}\n    >\n      <Flex\n        ref={inputContainerRef}\n        as={StyledInputContainer}\n        container={{ alignItems: 'center', wrap: 'wrap' }}\n        onPaste={onPaste}\n      >\n        {getDateFormat(locale).map(part => {\n          switch (part) {\n            case 'DD':\n              orderedRefs.push(dayInputRef);\n              return DayInput;\n            case 'MM':\n              orderedRefs.push(monthInputRef);\n              return MonthInput;\n            case 'YYYY':\n              orderedRefs.push(yearInputRef);\n              return YearInput;\n            default:\n              return part;\n          }\n        })}\n      </Flex>\n      {!readOnly && PickerButton}\n    </Flex>\n  );\n\n  useEffect(() => {\n    if (autoFocus) orderedRefs[0].current?.focus();\n  }, [autoFocus]);\n\n  useAutoFocusNextInput(orderedRefs);\n\n  return label ? (\n    <FormField\n      as='fieldset'\n      aria-labelledby={id}\n      labelAs='legend'\n      {...{\n        testId: testIds,\n        label,\n        labelHidden,\n        id,\n        info,\n        status,\n        required,\n        disabled,\n        onResolveSuggestion,\n        additionalInfo\n      }}\n      ref={ref}\n    >\n      {Comp}\n    </FormField>\n  ) : (\n    Comp\n  );\n});\n\nexport default withTestIds(DateInput, getDateInputTestIds);\n"]}