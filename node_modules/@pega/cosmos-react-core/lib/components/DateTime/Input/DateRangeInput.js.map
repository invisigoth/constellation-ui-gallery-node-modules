{"version":3,"file":"DateRangeInput.js","sourceRoot":"","sources":["../../../../src/components/DateTime/Input/DateRangeInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  FunctionComponent,\n  useRef,\n  forwardRef,\n  PropsWithoutRef,\n  Ref,\n  useCallback,\n  useReducer,\n  useImperativeHandle\n} from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { useConsolidatedRef, useFocusWithin, useI18n, useTestIds } from '../../../hooks';\nimport { ForwardProps } from '../../../types';\nimport { defaultThemeProp } from '../../../theme';\nimport { FormControlProps, HandleValue } from '../../FormControl';\nimport Flex from '../../Flex';\nimport FormField, { StyledFormField } from '../../FormField/FormField';\nimport DateRangePicker from '../Picker/DateRangePicker';\nimport type {\n  DateRangeCallbackParameter,\n  DateTimeCallbackParameter,\n  DateTimeProperties\n} from '../DateTime.types';\nimport { StyledRangeInputContainer } from '../../Input/Input.styles';\nimport DateTimeProps from '../DateTime.types';\nimport { getDateRangeInputTestIds } from '../DateTime.test-ids';\nimport { withTestIds } from '../../../utils';\n\nimport DateInput, { type DateInputHandleValue } from './DateInput';\nimport { parseToDate } from './utils';\nimport StyledDateInput from './DateTime.styles';\n\nexport interface DateRangeInputProps extends DateTimeProperties {\n  /** Object of range boundaries. */\n  value?: { start?: DateTimeProps['value']; end?: DateTimeProps['value'] };\n  /**\n   * Display additional column with week number in date picker popover.\n   * @default false\n   */\n  showWeekNumber?: boolean;\n  /** Pass a string or a fragment with an Icon and string for first part of DataRangeInput. */\n  fromLabel?: FormControlProps['label'];\n  /** Pass a string or a fragment with an Icon and string for second part of DataRangeInput. */\n  toLabel?: FormControlProps['label'];\n  /** Pass an object with \"heading\" and \"content\" properties to show AdditionalInfo for second part of DataRangeInput. */\n  toAdditionalInfo?: FormControlProps['additionalInfo'];\n  /** Pass an object with \"heading\" and \"content\" properties to show AdditionalInfo for first part of DataRangeInput. */\n  fromAdditionalInfo?: FormControlProps['additionalInfo'];\n  /** Callback fired when input value changes. */\n  onChange: (value: DateRangeCallbackParameter) => void;\n  /** Callback fired when the component gets focused. */\n  onFocus?: (value: DateRangeCallbackParameter) => void;\n  /** Callback fired when the component loses focus. */\n  onBlur?: (value: DateRangeCallbackParameter) => void;\n  /** Automatically focuses the input on render. */\n  autoFocus?: boolean;\n  /** Imperative handle */\n  handle?: Ref<HandleValue>;\n}\n\nconst StyledDateRangeInput = styled.div<DateRangeInputProps>(props => {\n  const {\n    theme: {\n      components: { input }\n    }\n  } = props;\n\n  return css`\n    border: 0;\n    min-width: min-content;\n\n    ${StyledFormField} {\n      &:last-child > ${StyledDateInput} {\n        margin-inline-start: -${input['border-width']};\n      }\n      & legend {\n        align-self: center;\n      }\n      &:focus,\n      &:hover,\n      &:focus-within {\n        z-index: 2;\n      }\n    }\n  `;\n});\n\nStyledDateRangeInput.defaultProps = defaultThemeProp;\n\ntype DateRepresentable = string | number | Date;\n\ntype DateRangeAction = { type: 'start' | 'end'; value?: number };\ntype State = { start?: number; end?: number };\n\nconst reducer = (prevState: State, { type, value }: DateRangeAction): State => {\n  switch (type) {\n    case 'start': {\n      return { ...prevState, start: value };\n    }\n    case 'end': {\n      return { ...prevState, end: value };\n    }\n    default:\n      return prevState;\n  }\n};\n\nconst convertToCallbackParameter = (v?: number): DateTimeCallbackParameter => {\n  return {\n    valueAsISOString: v === undefined || Number.isNaN(v) ? undefined : new Date(v).toISOString(),\n    valueAsTimestamp: v\n  };\n};\n\nconst prepareValue = (v: number | undefined, type: 'start' | 'end') => {\n  if (v === undefined || Number.isNaN(v)) {\n    return v;\n  }\n  return type === 'start'\n    ? new Date(v).setUTCHours(0, 0, 0, 0)\n    : new Date(v).setUTCHours(23, 59, 59, 999);\n};\n\nconst getSelected = (first: number | undefined, second: number | undefined) => {\n  const selected = first ?? second;\n  return selected ? parseToDate(selected) : undefined;\n};\n\nconst parseValueToDate = (value: DateRepresentable | undefined) => {\n  return value ? parseToDate(value) : undefined;\n};\n\nconst DateRangeInput: FunctionComponent<DateRangeInputProps & ForwardProps> = forwardRef(\n  function DateRangeInput(\n    {\n      testId,\n      value = {},\n      min,\n      max,\n      label,\n      fromLabel,\n      toLabel,\n      labelHidden,\n      status,\n      required,\n      readOnly,\n      disabled,\n      onChange,\n      onFocus,\n      onBlur,\n      showWeekNumber,\n      autoFocus,\n      fromAdditionalInfo,\n      toAdditionalInfo,\n      handle,\n      ...restProps\n    }: PropsWithoutRef<DateRangeInputProps>,\n    ref: Ref<HTMLDivElement>\n  ) {\n    const testIds = useTestIds(testId, getDateRangeInputTestIds);\n\n    const t = useI18n();\n\n    const startDateHandle = useRef<DateInputHandleValue>(null);\n    const endDateHandle = useRef<DateInputHandleValue>(null);\n\n    const [state, dispatch] = useReducer(reducer, {\n      start: value.start ? parseToDate(value.start).getTime() : undefined,\n      end: value.end ? parseToDate(value.end).getTime() : undefined\n    });\n\n    // Need to keep the value in ref also, to be able to call onBlur with newest value\n    const startDateRef = useRef<DateTimeCallbackParameter>(\n      convertToCallbackParameter(prepareValue(state.start, 'start'))\n    );\n    const endDateRef = useRef<DateTimeCallbackParameter>(\n      convertToCallbackParameter(prepareValue(state.end, 'end'))\n    );\n\n    useImperativeHandle(\n      handle,\n      () => ({\n        clear: () => {\n          startDateHandle.current?.clear();\n          endDateHandle.current?.clear();\n          const emptyCallbackParameter = convertToCallbackParameter(undefined);\n          startDateRef.current = emptyCallbackParameter;\n          endDateRef.current = emptyCallbackParameter;\n          dispatch({ type: 'start', value: undefined });\n          dispatch({ type: 'end', value: undefined });\n          onChange({\n            start: emptyCallbackParameter,\n            end: emptyCallbackParameter\n          });\n        }\n      }),\n      [onChange]\n    );\n\n    const onFocusChange = useCallback(\n      (focused: boolean) => {\n        (focused ? onFocus : onBlur)?.({\n          start: startDateRef.current,\n          end: endDateRef.current\n        });\n      },\n      [onFocus, onBlur]\n    );\n\n    const containerRef = useConsolidatedRef(ref);\n    useFocusWithin([containerRef], onFocusChange);\n\n    const onStartDateChange = (selectedDate?: Date) => {\n      const selected = selectedDate?.getTime();\n      let start;\n      let end;\n      if (state.end && selected && selected > state.end) {\n        dispatch({ type: 'start', value: state.end });\n        dispatch({ type: 'end', value: selected });\n        onChange({\n          start: convertToCallbackParameter(prepareValue(state.end, 'start')),\n          end: convertToCallbackParameter(prepareValue(selected, 'end'))\n        });\n        start = state.end;\n        end = selected;\n      } else {\n        dispatch({ type: 'start', value: selected });\n        onChange({\n          start: convertToCallbackParameter(prepareValue(selected, 'start')),\n          end: convertToCallbackParameter(prepareValue(state.end, 'end'))\n        });\n        start = selected;\n        end = state.end;\n      }\n      startDateRef.current = convertToCallbackParameter(prepareValue(start, 'start'));\n      endDateRef.current = convertToCallbackParameter(prepareValue(end, 'end'));\n      endDateHandle.current?.setOpen(true);\n    };\n\n    const onEndDateChange = (selectedDate?: Date) => {\n      const selected = selectedDate?.getTime();\n      let start;\n      let end;\n      if (state.start && selected && selected < state.start) {\n        dispatch({ type: 'end', value: state.start });\n        dispatch({ type: 'start', value: selected });\n        onChange({\n          start: convertToCallbackParameter(prepareValue(selected, 'start')),\n          end: convertToCallbackParameter(prepareValue(state.start, 'end'))\n        });\n        start = selected;\n        end = state.start;\n      } else {\n        dispatch({ type: 'end', value: selected });\n        onChange({\n          start: convertToCallbackParameter(prepareValue(state.start, 'start')),\n          end: convertToCallbackParameter(prepareValue(selected, 'end'))\n        });\n        start = state.start;\n        end = selected;\n      }\n      startDateRef.current = convertToCallbackParameter(prepareValue(start, 'start'));\n      endDateRef.current = convertToCallbackParameter(prepareValue(end, 'end'));\n    };\n\n    const getSelectedRange = () => {\n      const startDate = parseValueToDate(state.start);\n      const endDate = parseValueToDate(state.end);\n\n      if (startDate && endDate && startDate > endDate) return undefined;\n\n      return {\n        startDate,\n        endDate\n      };\n    };\n\n    const commonProps = {\n      required,\n      readOnly,\n      disabled,\n      min,\n      max,\n      status\n    };\n\n    return (\n      <FormField\n        testId={testIds}\n        as={StyledDateRangeInput}\n        {...restProps}\n        ref={containerRef}\n        container={{ wrap: 'nowrap' }}\n        labelHidden={labelHidden}\n        label={label}\n        labelAs='legend'\n        required={required}\n        readOnly={readOnly}\n        status={status}\n        disabled={disabled}\n      >\n        <Flex container as={StyledRangeInputContainer}>\n          <DateInput\n            {...commonProps}\n            testId={testIds.fromDate}\n            value={state.start}\n            handle={startDateHandle}\n            picker={{\n              renderer: DateRangePicker,\n              rendererProps: {\n                selected: getSelected(state.start, state.end),\n                selectedRange: getSelectedRange(),\n                onChange: onStartDateChange\n              }\n            }}\n            onBlur={changedValue => {\n              // invalid value stored only in ref, state holds undefined\n              dispatch({\n                type: 'start',\n                value: changedValue.state ? undefined : changedValue.valueAsTimestamp\n              });\n              const newValue = changedValue.state\n                ? changedValue\n                : convertToCallbackParameter(prepareValue(changedValue.valueAsTimestamp, 'start'));\n              startDateRef.current = newValue;\n              onChange({\n                start: newValue,\n                end: convertToCallbackParameter(prepareValue(state.end, 'end'))\n              });\n            }}\n            additionalInfo={fromAdditionalInfo}\n            label={fromLabel}\n            aria-label={`${t('range_from_datetime') + (label ? ` - ${label}` : '')}`}\n            autoFocus={autoFocus}\n          />\n          <DateInput\n            {...commonProps}\n            testId={testIds.toDate}\n            value={state.end}\n            handle={endDateHandle}\n            picker={{\n              renderer: DateRangePicker,\n              rendererProps: {\n                selected: getSelected(state.end, state.start),\n                selectedRange: getSelectedRange(),\n                onChange: onEndDateChange\n              }\n            }}\n            onBlur={changedValue => {\n              // invalid value stored only in ref, state holds undefined\n              dispatch({\n                type: 'end',\n                value: changedValue.state ? undefined : changedValue.valueAsTimestamp\n              });\n              const newValue = changedValue.state\n                ? changedValue\n                : convertToCallbackParameter(prepareValue(changedValue.valueAsTimestamp, 'end'));\n              endDateRef.current = newValue;\n              onChange({\n                start: convertToCallbackParameter(prepareValue(state.start, 'start')),\n                end: newValue\n              });\n            }}\n            additionalInfo={toAdditionalInfo}\n            label={toLabel}\n            aria-label={`${t('range_to_datetime') + (label ? ` - ${label}` : '')}`}\n          />\n        </Flex>\n      </FormField>\n    );\n  }\n);\n\nexport default withTestIds(DateRangeInput, getDateRangeInputTestIds);\n"]}