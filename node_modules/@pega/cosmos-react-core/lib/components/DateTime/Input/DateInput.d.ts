import { FunctionComponent, Ref, Dispatch, SetStateAction, ComponentType } from 'react';
import { ForwardProps } from '../../../types';
import type DatePickerProps from '../Picker/DatePicker.types';
import { FormControlProps, HandleValue } from '../../FormControl';
import DateTimeProps from '../DateTime.types';
export interface DateInputHandleValue extends HandleValue {
    readonly value: Date | undefined;
    setOpen: Dispatch<SetStateAction<boolean>>;
    buttonEl: HTMLElement | null;
}
export interface DateInputProps extends DateTimeProps {
    /**
     * Display additional column with week number in date picker popover.
     * @default false
     */
    showWeekNumber?: boolean;
    /** Changes default date picker */
    picker?: {
        renderer: ComponentType;
        rendererProps?: Partial<DatePickerProps> & ForwardProps;
    };
    /** Pass a heading and content to show additional information on the field. */
    additionalInfo?: FormControlProps['additionalInfo'];
    /** Additional properties for imperative control. */
    handle?: Ref<DateInputHandleValue | HandleValue>;
}
export declare const StyledDateInput: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, DateInputProps, never>;
declare const _default: FunctionComponent<DateInputProps & ForwardProps> & {
    getTestIds: (testIdProp?: string | undefined) => import("../../../types").TestIdsRecord<readonly ["control-day", "control-month", "control-year", "open-close-picker", "clear-current-date", "set-current-date", "label", "info", "additional-info", "suggestion-accept", "suggestion-reject"]>;
};
export default _default;
//# sourceMappingURL=DateInput.d.ts.map