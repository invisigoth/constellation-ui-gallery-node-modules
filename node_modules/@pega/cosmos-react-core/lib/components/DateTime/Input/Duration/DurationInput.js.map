{"version":3,"file":"DurationInput.js","sourceRoot":"","sources":["../../../../../src/components/DateTime/Input/Duration/DurationInput.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAmB,UAAU,EAA0B,MAAM,OAAO,CAAC;AAE5E,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AACxD,OAAO,SAAS,MAAM,oBAAoB,CAAC;AAE3C,OAAO,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AAClE,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAEhD,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,UAAU,MAAM,cAAc,CAAC;AACtC,OAA2B,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAEnE,MAAM,aAAa,GAAyD,UAAU,CACpF,SAAS,aAAa,CACpB,KAA0C,EAC1C,GAA6B;IAE7B,MAAM,EACJ,MAAM,EACN,EAAE,EACF,KAAK,EACL,WAAW,EACX,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,MAAM,GAAG,MAAM,CAAC,OAAO,EACvB,QAAQ,EACR,cAAc,EACd,GAAG,SAAS,EACb,GAAG,KAAK,CAAC;IACV,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAC;IAE5D,MAAM,CAAC,GAAG,OAAO,EAAE,CAAC;IAEpB,MAAM,IAAI,GACR,MAAM,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAC5B,KAAC,IAAI,OAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAM,SAAS,GAAI,CACpE,CAAC,CAAC,CAAC,CACF,KAAC,UAAU,OAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAM,SAAS,GAAI,CAC5F,CAAC;IAEJ,OAAO,KAAK,CAAC,CAAC,CAAC,CACb,KAAC,SAAS,IACR,EAAE,EAAC,UAAU,EACb,OAAO,EAAC,QAAQ,EAChB,IAAI,EAAE,MAAM,KAAK,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC,kBAAkB,CAAC,EAC1D,MAAM,EAAE,MAAM,KACV;YACF,MAAM,EAAE,OAAO;YACf,KAAK;YACL,WAAW;YACX,EAAE;YACF,QAAQ;YACR,QAAQ;YACR,GAAG;YACH,cAAc;SACf,YAEA,IAAI,GACK,CACb,CAAC,CAAC,CAAC,CACF,IAAI,CACL,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,WAAW,CAAC,aAAa,EAAE,uBAAuB,CAAC,CAAC","sourcesContent":["import { PropsWithoutRef, forwardRef, Ref, FunctionComponent } from 'react';\n\nimport { useI18n, useTestIds } from '../../../../hooks';\nimport FormField from '../../../FormField';\nimport { ForwardProps } from '../../../../types';\nimport { getDurationInputTestIds } from '../../DateTime.test-ids';\nimport { withTestIds } from '../../../../utils';\n\nimport Time from './Time';\nimport NumberUnit from './NumberUnit';\nimport DurationInputProps, { Format } from './DurationInput.types';\n\nconst DurationInput: FunctionComponent<DurationInputProps & ForwardProps> = forwardRef(\n  function DurationInput(\n    props: PropsWithoutRef<DurationInputProps>,\n    ref: Ref<HTMLFieldSetElement>\n  ) {\n    const {\n      testId,\n      id,\n      label,\n      labelHidden,\n      required,\n      status,\n      disabled,\n      onChange,\n      format = Format.Seconds,\n      onSelect,\n      additionalInfo,\n      ...restProps\n    } = props;\n    const testIds = useTestIds(testId, getDurationInputTestIds);\n\n    const t = useI18n();\n\n    const Comp =\n      format === Format.Formatted ? (\n        <Time {...{ testId, status, disabled, onChange }} {...restProps} />\n      ) : (\n        <NumberUnit {...{ testId, format, status, disabled, onChange, onSelect }} {...restProps} />\n      );\n\n    return label ? (\n      <FormField\n        as='fieldset'\n        labelAs='legend'\n        info={format === Format.Formatted && t('time_format_info')}\n        status={status}\n        {...{\n          testId: testIds,\n          label,\n          labelHidden,\n          id,\n          required,\n          disabled,\n          ref,\n          additionalInfo\n        }}\n      >\n        {Comp}\n      </FormField>\n    ) : (\n      Comp\n    );\n  }\n);\n\nexport default withTestIds(DurationInput, getDurationInputTestIds);\n"]}