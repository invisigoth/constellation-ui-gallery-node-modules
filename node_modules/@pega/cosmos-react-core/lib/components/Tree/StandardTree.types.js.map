{"version":3,"file":"StandardTree.types.js","sourceRoot":"","sources":["../../../src/components/Tree/StandardTree.types.ts"],"names":[],"mappings":"","sourcesContent":["import type { MouseEvent, KeyboardEvent } from 'react';\n\nimport type { Action, PropsWithDefaults } from '../../types';\n\nimport type { TreeProps, TreeNode } from './Tree';\n\nexport interface StandardTreeNode extends TreeNode {\n  /** A set of nested tree nodes. */\n  nodes?: StandardTreeNode[];\n  /** The display text of the tree node. */\n  label: string;\n  /** The name of the Cosmos Icon to render as a visual, next to the label. */\n  icon?: string;\n  /**\n   * If true, the node's children will be displayed.\n   * @default false\n   */\n  expanded?: boolean;\n  /**\n   * If true, the node will render a loading indicator in place of any children.\n   * @default false\n   */\n  loading?: boolean;\n  /** A set of actions attached to the node. */\n  actions?: Action[];\n  /** Click handler for the tree node. */\n  onClick?: (id: TreeNode['id'], e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => void;\n  /** URL or DOM id to navigate to. This will render the tree node as a link. */\n  href?: string;\n}\n\nexport interface StandardTreeProps extends TreeProps<StandardTreeNode> {\n  /** The id of the currently active tree node. */\n  currentNodeId?: TreeNode['id'];\n  /**\n   * If true, a vertical line will render alongside nested nodes.\n   * @default false\n   */\n  lined?: boolean;\n  /** Callback function for click events on tree nodes. This will only be called on parent nodes if selectableParents is true. It will always be called on leaf nodes. */\n  onNodeClick?: (\n    id: TreeNode['id'],\n    e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  ) => void;\n  /** Callback function for toggling tree nodes between expanded/collapsed states. This is only ever called on parent nodes. */\n  onNodeToggle?: (\n    id: TreeNode['id'],\n    e?: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  ) => void;\n  /**\n   * If true, parent tree nodes can be selected independently from being toggled expanded/collapsed.\n   * @default true\n   */\n  selectableParents?: boolean;\n}\n\nexport interface StandardTreeContextProps extends StandardTreeProps {\n  firstNodeId?: TreeNode['id'];\n  lastNodeId?: TreeNode['id'];\n  focusedNodeId?: TreeNode['id'];\n  changeFocusedNodeId: (id: TreeNode['id'], type?: 'up' | 'down' | 'left' | 'right') => void;\n}\n\nexport type StandardTreePropsWithDefaults = PropsWithDefaults<StandardTreeContextProps, 'lined'>;\n"]}