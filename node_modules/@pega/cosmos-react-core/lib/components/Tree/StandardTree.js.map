{"version":3,"file":"StandardTree.js","sourceRoot":"","sources":["../../../src/components/Tree/StandardTree.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  forwardRef,\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useState,\n  KeyboardEvent,\n  useEffect,\n  useRef\n} from 'react';\nimport type { FunctionComponent, PropsWithoutRef, CSSProperties, MouseEvent } from 'react';\n\nimport Progress from '../Progress';\nimport { useConsolidatedRef, useDirection, useFocusWithin } from '../../hooks';\nimport Flex from '../Flex';\nimport Actions from '../Actions';\nimport type { Action, ForwardProps } from '../../types';\nimport { cap } from '../../utils';\nimport Button from '../Button';\n\nimport {\n  StyledStandardTreeParent,\n  StyledToggleIcon,\n  StyledToggleIconWrapper,\n  StyledStandardTreeItemSubTree,\n  StyledStandardTreeLeaf,\n  StyledStandardTree,\n  StyledNodeInteraction,\n  StyledStandardTreeNode,\n  StyledNodeActions,\n  StyledLabelContent,\n  StyledNodeIcon,\n  StyledNodeText\n} from './StandardTree.styles';\nimport type { TreeProps } from './Tree';\nimport type {\n  StandardTreeContextProps,\n  StandardTreeNode,\n  StandardTreeProps,\n  StandardTreePropsWithDefaults\n} from './StandardTree.types';\nimport helpers from './helpers';\n\nconst StandardTreeContext = createContext<\n  Pick<\n    StandardTreePropsWithDefaults,\n    | 'currentNodeId'\n    | 'lined'\n    | 'onNodeClick'\n    | 'onNodeToggle'\n    | 'firstNodeId'\n    | 'lastNodeId'\n    | 'focusedNodeId'\n    | 'changeFocusedNodeId'\n    | 'selectableParents'\n  >\n>({\n  currentNodeId: undefined,\n  lined: false,\n  onNodeClick: () => {},\n  onNodeToggle: () => {},\n  firstNodeId: undefined,\n  lastNodeId: undefined,\n  focusedNodeId: undefined,\n  changeFocusedNodeId: () => {},\n  selectableParents: true\n});\n\nconst NodeRenderer: TreeProps<StandardTreeNode>['nodeRenderer'] = ({\n  id,\n  label,\n  icon,\n  depth,\n  hasParentSibling,\n  nodes,\n  expanded = false,\n  loading = false,\n  subTree,\n  actions,\n  onClick,\n  href\n}) => {\n  const {\n    currentNodeId,\n    onNodeClick,\n    onNodeToggle,\n    lined,\n    focusedNodeId,\n    changeFocusedNodeId,\n    firstNodeId,\n    lastNodeId,\n    selectableParents\n  } = useContext(StandardTreeContext);\n  const current = currentNodeId === id;\n  const focusedEl = focusedNodeId === id;\n  const firstNode = firstNodeId === id;\n  const { start, end } = useDirection();\n\n  const ariaCurrent = useMemo(() => {\n    return href ? 'page' : 'true';\n  }, [href]);\n\n  const tabIndex = useMemo(() => {\n    let index = -1;\n    if (focusedNodeId) {\n      index = focusedEl ? 0 : -1;\n    } else if (currentNodeId && nodes && helpers.getNode(nodes, currentNodeId)) {\n      index = current ? 0 : -1;\n    } else {\n      index = firstNode ? 0 : -1;\n    }\n    return index;\n  }, [focusedNodeId, currentNodeId, current, focusedEl]);\n\n  const handleParentClick = useCallback(\n    (e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => {\n      onNodeClick?.(id, e);\n      changeFocusedNodeId(id);\n    },\n    [id, onNodeClick, changeFocusedNodeId]\n  );\n\n  const handleParentToggle = useCallback(\n    (e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeToggle?.(id, e);\n      changeFocusedNodeId(id);\n    },\n    [id, onNodeToggle, changeFocusedNodeId]\n  );\n\n  const onKeyDown = useCallback(\n    (e: KeyboardEvent<HTMLElement>) => {\n      if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(e.key)) e.preventDefault();\n      if (e.key === 'Enter' && !href) e.preventDefault();\n      switch (e.key) {\n        case 'ArrowUp':\n          changeFocusedNodeId(id, 'up');\n          break;\n        case 'ArrowDown':\n          changeFocusedNodeId(id, 'down');\n          break;\n        case `Arrow${cap(end)}`:\n          if (nodes) {\n            if (expanded) {\n              changeFocusedNodeId(id, 'right');\n            } else {\n              onNodeToggle?.(id);\n            }\n          }\n          break;\n        case `Arrow${cap(start)}`:\n          if (expanded) {\n            onNodeToggle?.(id);\n          } else {\n            changeFocusedNodeId(id, 'left');\n          }\n          break;\n        case 'Enter':\n          onClick?.(id, e);\n          if (nodes) {\n            if (selectableParents) {\n              handleParentClick(e);\n            } else {\n              handleParentToggle(e);\n            }\n          } else {\n            onNodeClick?.(id, e);\n            changeFocusedNodeId(id);\n          }\n          break;\n        case 'Home':\n          if (firstNodeId) changeFocusedNodeId(firstNodeId);\n          break;\n        case 'End':\n          if (lastNodeId) changeFocusedNodeId(lastNodeId);\n          break;\n        default:\n      }\n    },\n    [id, end, nodes, expanded, actions, firstNodeId, lastNodeId, changeFocusedNodeId]\n  );\n\n  const actionsJSX = useMemo(() => {\n    // since Actions may render a frag of buttons and we need a wrapper for flex space-between.\n    return actions ? (\n      <StyledNodeActions>\n        <Actions\n          items={actions.map(action => {\n            return {\n              ...action,\n              onClick: (\n                actionId: Action['id'],\n                e: MouseEvent<HTMLButtonElement | HTMLAnchorElement | HTMLInputElement>\n              ) => {\n                e.stopPropagation();\n                e.preventDefault();\n                action?.onClick?.(actionId, e);\n              },\n              onKeyDown: (e: KeyboardEvent) => {\n                if (e.key === 'Enter') e.stopPropagation();\n              }\n            };\n          })}\n          menuAt={3}\n          menuButtonProps={{\n            onClick: (e: MouseEvent) => {\n              e.stopPropagation();\n              e.preventDefault();\n            },\n            onKeyDown: (e: KeyboardEvent) => {\n              e.stopPropagation();\n              if (['ArrowUp', 'ArrowDown'].includes(e.key)) {\n                e.preventDefault();\n              }\n            }\n          }}\n        />\n      </StyledNodeActions>\n    ) : null;\n  }, [actions]);\n\n  const elRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (focusedEl) {\n      elRef?.current?.focus();\n    }\n  }, [focusedEl]);\n\n  const labelContent = useMemo(() => {\n    const internal = (\n      // Wrapping in a div for handling of flex space-between when there are node actions.\n      <Flex container={{ alignItems: 'center', gap: 0.5 }} as={StyledLabelContent}>\n        {icon && <StyledNodeIcon name={icon} />}\n        <StyledNodeText>{label}</StyledNodeText>\n      </Flex>\n    );\n\n    return !nodes && (onClick ?? onNodeClick) ? (\n      <Flex\n        container={{ alignItems: 'center', justify: 'between', gap: 2 }}\n        as={StyledNodeInteraction}\n        forwardedAs={href ? 'a' : 'div'}\n        role='treeitem'\n        aria-current={current ? ariaCurrent : undefined}\n        tabIndex={tabIndex}\n        onClick={(e: MouseEvent<HTMLElement>) => {\n          onClick?.(id, e);\n          onNodeClick?.(id, e);\n          changeFocusedNodeId(id);\n        }}\n        href={href}\n        onKeyDown={onKeyDown}\n        ref={elRef}\n      >\n        {internal}\n        {actionsJSX}\n      </Flex>\n    ) : (\n      internal\n    );\n  }, [\n    id,\n    label,\n    icon,\n    nodes,\n    actions,\n    onClick,\n    onNodeClick,\n    current,\n    focusedEl,\n    tabIndex,\n    changeFocusedNodeId,\n    onKeyDown\n  ]);\n\n  return (\n    <StyledStandardTreeNode\n      id={id}\n      style={\n        {\n          '--depth': depth,\n          '--has-parent': depth ? 1 : 0,\n          '--has-parent-sibling': hasParentSibling ? 1 : 0\n        } as CSSProperties\n      }\n      aria-busy={loading}\n    >\n      {nodes ? (\n        <>\n          <Flex\n            container={{ alignItems: 'center', justify: 'between', gap: 2 }}\n            as={StyledStandardTreeParent}\n            forwardedAs={href ? 'a' : 'div'}\n            role='treeitem'\n            aria-current={current ? ariaCurrent : undefined}\n            tabIndex={tabIndex}\n            variant='text'\n            onClick={selectableParents ? handleParentClick : handleParentToggle}\n            href={selectableParents ? href : undefined}\n            aria-expanded={expanded ? 'true' : 'false'}\n            aria-owns={`${id}-subtree`}\n            aria-label={label}\n            onKeyDown={onKeyDown}\n            ref={elRef}\n          >\n            <Flex container={{ alignItems: 'center' }} as='span'>\n              {selectableParents ? (\n                <Button variant='simple' tabIndex={-1} icon compact onClick={handleParentToggle}>\n                  <StyledToggleIcon name='caret-right' />\n                </Button>\n              ) : (\n                <Flex\n                  as={StyledToggleIconWrapper}\n                  container={{ justify: 'center', alignItems: 'center' }}\n                >\n                  <StyledToggleIcon name='caret-right' />\n                </Flex>\n              )}\n              {labelContent}\n            </Flex>\n            {actionsJSX}\n          </Flex>\n          <StyledStandardTreeItemSubTree lined={lined} id={`${id}-subtree`}>\n            {subTree}\n            {loading && <Progress variant='ring' placement='inline' />}\n          </StyledStandardTreeItemSubTree>\n        </>\n      ) : (\n        <StyledStandardTreeLeaf>{labelContent}</StyledStandardTreeLeaf>\n      )}\n    </StyledStandardTreeNode>\n  );\n};\n\nconst StandardTreeWithNodes: FunctionComponent<StandardTreeProps & ForwardProps> = forwardRef(\n  function StandardTreeWithNodes(\n    {\n      nodes,\n      currentNodeId,\n      onNodeClick,\n      onNodeToggle,\n      lined = false,\n      selectableParents = true,\n      ...restProps\n    }: PropsWithoutRef<StandardTreeProps>,\n    ref: StandardTreeProps['ref']\n  ) {\n    const [focusedNodeId, setFocusedNodedId] = useState<string | undefined>();\n    const treeRef = useConsolidatedRef(ref);\n\n    const lastNodeId = useMemo(() => {\n      return helpers.getDeepestNode(nodes, nodes[nodes.length - 1].id)?.id;\n    }, [nodes]);\n\n    const changeFocusedNodeId: StandardTreeContextProps['changeFocusedNodeId'] = useCallback(\n      (id, type) => {\n        switch (type) {\n          case 'up': {\n            const previousNode = helpers.getPreviousNode(nodes, id);\n            if (previousNode) setFocusedNodedId(previousNode.id);\n            break;\n          }\n          case 'down': {\n            const nextNode = helpers.getNextNode(nodes, id);\n            if (nextNode) setFocusedNodedId(nextNode.id);\n            break;\n          }\n          case 'left': {\n            const parentNode = helpers.getParentNode(nodes, id);\n            if (parentNode) setFocusedNodedId(parentNode.id);\n            break;\n          }\n          case 'right': {\n            const childNode = helpers.getFirstChildNode(nodes, id);\n            if (childNode) setFocusedNodedId(childNode.id);\n            break;\n          }\n          default: {\n            if (id !== focusedNodeId) setFocusedNodedId(id);\n            break;\n          }\n        }\n      },\n      [nodes]\n    );\n\n    const onFocusChange = (focused: boolean) => {\n      if (!focused) setFocusedNodedId('');\n    };\n\n    useFocusWithin([treeRef], onFocusChange);\n\n    return (\n      <StandardTreeContext.Provider\n        value={useMemo(\n          () => ({\n            currentNodeId,\n            focusedNodeId,\n            lastNodeId,\n            firstNodeId: nodes[0].id,\n            changeFocusedNodeId,\n            onNodeClick,\n            onNodeToggle,\n            lined,\n            selectableParents\n          }),\n          [\n            currentNodeId,\n            onNodeClick,\n            lined,\n            focusedNodeId,\n            lastNodeId,\n            onNodeToggle,\n            selectableParents\n          ]\n        )}\n      >\n        {/* FIXME: Types are having issues when styled(Tree) is typeof Tree. */}\n        <StyledStandardTree\n          {...restProps}\n          ref={treeRef}\n          nodes={nodes}\n          nodeRenderer={NodeRenderer}\n        />\n      </StandardTreeContext.Provider>\n    );\n  }\n);\n\nconst StandardTree: FunctionComponent<StandardTreeProps & ForwardProps> = forwardRef(\n  function StandardTree(props: PropsWithoutRef<StandardTreeProps>, ref: StandardTreeProps['ref']) {\n    return props.nodes.length > 0 ? <StandardTreeWithNodes {...props} ref={ref} /> : null;\n  }\n);\n\nexport default StandardTree;\n"]}