import { ReactNode } from 'react';
interface ShortcutEventDetails {
    actionId: string;
}
declare global {
    type ShortcutEvent = CustomEvent<ShortcutEventDetails>;
    interface GlobalEventHandlersEventMap {
        shortcut: ShortcutEvent;
    }
}
export interface ShortcutActionConfig {
    defaultKeyBinding: string;
}
export interface ShortcutAction extends ShortcutActionConfig {
    id: string;
}
export type ShortcutActionCallback = (e: ShortcutEvent) => void;
export interface KeyBindings {
    [key: string]: string;
}
export interface ShortcutManagerProps {
    /** The element(s) that may bind callbacks to actions. */
    children: ReactNode;
    /** Pre-populated key bindings for actions. */
    bindings?: KeyBindings;
    /** HTML element that global event handler will be attached to. Document will be used if not passed. */
    target?: HTMLElement;
}
export {};
//# sourceMappingURL=ShortcutManager.types.d.ts.map