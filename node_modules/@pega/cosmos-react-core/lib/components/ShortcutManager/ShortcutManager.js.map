{"version":3,"file":"ShortcutManager.js","sourceRoot":"","sources":["../../../src/components/ShortcutManager/ShortcutManager.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FunctionComponent, useEffect, useRef } from 'react';\nimport { Shortcuts } from 'shortcuts';\n\nimport { useAfterInitialEffect, useSimpleStore } from '../../hooks';\nimport { hasProp } from '../../utils';\n\nimport type { ShortcutAction, ShortcutManagerProps } from './ShortcutManager.types';\nimport { type ActionDefinitions, actionStore } from './Store';\n\n/**\n * Function to register an action triggerable using a shortcut. All actions must be registered before\n * binding a callback.\n * @param actions actions with definitions to be registered.\n */\nexport const registerAction = (...actions: ShortcutAction[]): void => {\n  actionStore.setStore(store => {\n    let newStore = store;\n    actions.forEach(({ id, defaultKeyBinding: defaultShortcut }) => {\n      if (!hasProp(store, id))\n        newStore = {\n          ...(newStore as ActionDefinitions),\n          [id]: { defaultKeyBinding: defaultShortcut, keyBinding: defaultShortcut }\n        };\n    });\n    return newStore;\n  });\n};\n\nconst dispatchShortcutEvent = (actionId: ShortcutAction['id'], e: KeyboardEvent) => {\n  const shortcutEvent = new CustomEvent('shortcut', {\n    bubbles: true,\n    detail: { actionId }\n  });\n  e.target?.dispatchEvent(shortcutEvent);\n};\n\nconst ShortcutManager: FunctionComponent<ShortcutManagerProps> = ({\n  children,\n  target,\n  bindings: customBindings = {}\n}) => {\n  const shortcutsRef = useRef<Shortcuts>();\n\n  const [bindings, setBindings] = useSimpleStore(actionStore, store =>\n    Object.entries(store).map(([actionId, actionDefinition]) => ({\n      action: actionId,\n      shortcut: actionDefinition.keyBinding\n    }))\n  );\n\n  useEffect(() => {\n    setBindings(store => {\n      let newStore = store;\n      Object.entries(customBindings).forEach(([actionId, keyBinding]) => {\n        newStore = { ...newStore, [actionId]: { ...newStore[actionId], keyBinding } };\n      });\n      return newStore;\n    });\n  }, [JSON.stringify(customBindings)]);\n\n  useEffect(() => {\n    shortcutsRef.current = new Shortcuts({\n      target,\n      shouldHandleEvent: e =>\n        // both 'keydown' and 'keypress' events are handled by default ('shortcuts' bug?)\n        e.type === 'keydown' &&\n        !e.defaultPrevented &&\n        // don't process event during typing letters/digits into inputs without modifier keys\n        !(\n          e.target instanceof HTMLElement &&\n          ['input', 'textarea'].includes(e.target.nodeName.toLowerCase()) &&\n          e.key.match(/a-zA-Z0-9/) &&\n          !['Control', 'Meta'].some(modifier => e.getModifierState(modifier))\n        ),\n      shortcuts: bindings.map(({ action, shortcut }) => ({\n        shortcut,\n        handler: e => {\n          e.preventDefault();\n          dispatchShortcutEvent(action, e);\n        }\n      }))\n    });\n\n    return () => {\n      shortcutsRef.current?.reset();\n      shortcutsRef.current = undefined;\n    };\n  }, [target]);\n\n  useAfterInitialEffect(() => {\n    const shortcutInstance = shortcutsRef.current;\n    if (shortcutInstance) {\n      shortcutInstance.reset();\n      shortcutInstance.add(\n        bindings.map(({ action, shortcut }) => ({\n          shortcut,\n          handler: e => {\n            e.preventDefault();\n            dispatchShortcutEvent(action, e);\n          }\n        }))\n      );\n    }\n  }, [JSON.stringify(bindings)]);\n\n  return <>{children}</>;\n};\n\nexport default ShortcutManager;\n"]}