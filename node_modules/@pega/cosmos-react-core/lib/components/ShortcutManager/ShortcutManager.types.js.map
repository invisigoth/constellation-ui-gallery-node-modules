{"version":3,"file":"ShortcutManager.types.js","sourceRoot":"","sources":["../../../src/components/ShortcutManager/ShortcutManager.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ReactNode } from 'react';\n\ninterface ShortcutEventDetails {\n  actionId: string;\n}\n\ndeclare global {\n  type ShortcutEvent = CustomEvent<ShortcutEventDetails>;\n\n  interface GlobalEventHandlersEventMap {\n    shortcut: ShortcutEvent;\n  }\n}\n\nexport interface ShortcutActionConfig {\n  defaultKeyBinding: string;\n}\n\nexport interface ShortcutAction extends ShortcutActionConfig {\n  id: string;\n}\n\nexport type ShortcutActionCallback = (e: ShortcutEvent) => void;\n\nexport interface KeyBindings {\n  [key: string]: string;\n}\n\nexport interface ShortcutManagerProps {\n  /** The element(s) that may bind callbacks to actions. */\n  children: ReactNode;\n  /** Pre-populated key bindings for actions. */\n  bindings?: KeyBindings;\n  /** HTML element that global event handler will be attached to. Document will be used if not passed. */\n  target?: HTMLElement;\n}\n"]}