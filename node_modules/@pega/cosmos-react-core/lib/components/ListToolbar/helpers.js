import { hasProp } from '../../utils';
const helpers = {
    isView(view) {
        return hasProp(view, 'selected');
    },
    getViews(views) {
        return views.reduce((result, item) => {
            if (this.isView(item)) {
                result.push(item);
                return result;
            }
            return result.concat(this.getViews(item.items));
        }, []);
    },
    updateViews(views, fn) {
        return views.map((item, index) => {
            if (this.isView(item)) {
                return fn(item, index);
            }
            return {
                ...item,
                items: this.updateViews(item.items, fn)
            };
        });
    },
    selectView(views, id) {
        return this.updateViews(views, view => {
            return {
                ...view,
                selected: view.id === id
            };
        });
    },
    getSelectedView(views) {
        return views.reduce((result, item) => {
            if (result)
                return result;
            if (this.isView(item)) {
                return item.selected ? item : undefined;
            }
            return this.getSelectedView(item.items);
        }, undefined);
    }
};
export default helpers;
//# sourceMappingURL=helpers.js.map