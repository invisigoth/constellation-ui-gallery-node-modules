{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../src/components/ListToolbar/helpers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAItC,MAAM,OAAO,GAAG;IACd,MAAM,CAAC,IAAgC;QACrC,OAAO,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,KAAqC;QAC5C,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YACnC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClB,OAAO,MAAM,CAAC;aACf;YACD,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAClD,CAAC,EAAE,EAAiB,CAAC,CAAC;IACxB,CAAC;IAED,WAAW,CACT,KAAqC,EACrC,EAAiD;QAEjD,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACrB,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACxB;YACD,OAAO;gBACL,GAAG,IAAI;gBACP,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC;aACtB,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CACR,KAAqC,EACrC,EAAmB;QAEnB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;YACpC,OAAO;gBACL,GAAG,IAAI;gBACP,QAAQ,EAAE,IAAI,CAAC,EAAE,KAAK,EAAE;aACzB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,KAAqC;QACnD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YACnC,IAAI,MAAM;gBAAE,OAAO,MAAM,CAAC;YAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;aACzC;YACD,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC,EAAE,SAAkC,CAAC,CAAC;IACzC,CAAC;CACF,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import { hasProp } from '../../utils';\n\nimport { ViewGroupProps, ViewProps } from './ListToolbar.types';\n\nconst helpers = {\n  isView(view: ViewGroupProps | ViewProps): view is ViewProps {\n    return hasProp(view, 'selected');\n  },\n\n  getViews(views: (ViewGroupProps | ViewProps)[]): ViewProps[] {\n    return views.reduce((result, item) => {\n      if (this.isView(item)) {\n        result.push(item);\n        return result;\n      }\n      return result.concat(this.getViews(item.items));\n    }, [] as ViewProps[]);\n  },\n\n  updateViews(\n    views: (ViewGroupProps | ViewProps)[],\n    fn: (view: ViewProps, index: number) => ViewProps\n  ): (ViewGroupProps | ViewProps)[] {\n    return views.map((item, index) => {\n      if (this.isView(item)) {\n        return fn(item, index);\n      }\n      return {\n        ...item,\n        items: this.updateViews(item.items, fn)\n      } as ViewGroupProps;\n    });\n  },\n\n  selectView(\n    views: (ViewGroupProps | ViewProps)[],\n    id: ViewProps['id']\n  ): (ViewGroupProps | ViewProps)[] {\n    return this.updateViews(views, view => {\n      return {\n        ...view,\n        selected: view.id === id\n      };\n    });\n  },\n\n  getSelectedView(views: (ViewGroupProps | ViewProps)[]): ViewProps | undefined {\n    return views.reduce((result, item) => {\n      if (result) return result;\n      if (this.isView(item)) {\n        return item.selected ? item : undefined;\n      }\n      return this.getSelectedView(item.items);\n    }, undefined as ViewProps | undefined);\n  }\n};\n\nexport default helpers;\n"]}