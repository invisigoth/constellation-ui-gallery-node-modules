{"version":3,"file":"Configuration.js","sourceRoot":"","sources":["../../../src/components/Configuration/Configuration.tsx"],"names":[],"mappings":"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","sourcesContent":["import { createContext, useContext, useMemo, useEffect, useState } from 'react';\nimport type { FunctionComponent, ReactNode, Context, MutableRefObject } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ThemeProvider, StyleSheetManager } from 'styled-components';\nimport type { StyleSheetManagerProps } from 'styled-components';\n\nimport '../../init';\nimport { GlobalStyle } from '../../styles';\nimport {\n  ThemeMachine,\n  ThemeMachineLike,\n  BaseThemeMachine,\n  DefaultSettableTheme,\n  DefaultThemeDefinition\n} from '../../theme';\nimport {\n  createTranslationPack,\n  Translation,\n  TranslationPack,\n  DefaultTranslation,\n  direction as directionOfLocale\n} from '../../i18n';\nimport { documentIsAvailable, navigatorIsAvailable, windowIsAvailable } from '../../utils';\nimport pkg from '../../../package.json';\nimport useElement from '../../hooks/useElement';\n\nimport type PegaConnectedWatcher from './connected-watcher';\nimport './connected-watcher';\n\nexport interface ConfigurationProps {\n  /** Any components or nodes that should be impacted by the settings applied by this Configuration component. */\n  children: ReactNode;\n  /** User locale as defined in [BCP-47](https://www.techonthenet.com/js/language_tags.php). */\n  locale?: string;\n  /** Override rendering direction of the document. Direction will be based on the locale if now provided. */\n  direction?: 'ltr' | 'rtl';\n  /** Object with (partial) translations. */\n  translations?: Translation;\n  /** Theme object used to override any or all Cosmos theme properties. */\n  theme?: DefaultSettableTheme;\n  /** Disables loading Open Sans or Inter from Google Fonts. Only takes effect on the root configuration. */\n  disableDefaultFontLoading?: boolean;\n  /**\n   * Target element for loading styles related to `styled-components`.\n   * @deprecated\n   */\n  styleSheetTarget?: StyleSheetManagerProps['target'];\n  /**\n   * Target element for rendering a `ReactDOM` portal.\n   * @deprecated\n   */\n  portalTarget?: Parameters<typeof createPortal>[1];\n  /**\n   * Use native HTML5 controls for inputs instead of rich ones.\n   * @default false\n   */\n  renderNativeControls?: boolean;\n  /** String to identify this configuration instance. */\n  id?: string;\n  /**\n   * Enable/disable testId attribute rendering for all components.\n   * @default true\n   */\n  testIds?: boolean;\n}\n\nexport interface ConfigurationContextValue {\n  locale: string;\n  direction: NonNullable<ConfigurationProps['direction']>;\n  translations: TranslationPack;\n  themeMachine: ThemeMachineLike<DefaultThemeDefinition>;\n  styleSheetTarget: ConfigurationProps['styleSheetTarget'];\n  portalTarget: ConfigurationProps['portalTarget'];\n  loadedRef: MutableRefObject<boolean>;\n  renderNativeControls: boolean;\n  testIds: NonNullable<ConfigurationProps['testIds']>;\n  /** @internal */\n  mountedStyleSheetManagers?: (typeof StyleSheetManager)[];\n  /** @internal */\n  initialized: boolean;\n}\n\nconst defaultLocale = navigatorIsAvailable ? navigator.language : 'en';\n\nexport const ConfigurationContext = createContext<ConfigurationContextValue>({\n  locale: defaultLocale,\n  direction: directionOfLocale(defaultLocale),\n  translations: DefaultTranslation,\n  themeMachine: BaseThemeMachine,\n  styleSheetTarget: documentIsAvailable ? document.head : undefined,\n  portalTarget: documentIsAvailable ? document.body : undefined,\n  loadedRef: { current: false },\n  renderNativeControls: false,\n  testIds: true,\n  mountedStyleSheetManagers: [],\n  initialized: false\n});\n\nconst legacyMetaKey = Symbol.for('@pega/cosmos-react-core.metadata');\n\ninterface LegacyCosmosInstace {\n  version: string;\n}\n\ndeclare global {\n  interface Window {\n    [legacyMetaKey]?: {\n      push: (instance: LegacyCosmosInstace) => void;\n    };\n  }\n}\n\nconst mountedConfigs = new Set<symbol>();\n\ninterface CosmosInstance extends LegacyCosmosInstace {\n  mountedConfigs: string[];\n  mountOrder: string[];\n  mountCount: Record<string, number>;\n}\n\nconst instance: CosmosInstance = {\n  version: pkg.version,\n  mountedConfigs: [],\n  mountOrder: [],\n  mountCount: {}\n};\n\nconst mountConfig = (sym: symbol) => {\n  mountedConfigs.add(sym);\n  instance.mountedConfigs = [...mountedConfigs].map(i => i.description ?? 'Unknown');\n\n  const description = sym.description ?? 'Unknown';\n\n  instance.mountOrder.push(description);\n\n  if (!(description in instance.mountCount)) {\n    instance.mountCount[description] = 0;\n  }\n  instance.mountCount[description] += 1;\n};\n\nconst unmountConfig = (sym: symbol) => {\n  mountedConfigs.delete(sym);\n  instance.mountedConfigs = [...mountedConfigs].map(i => i.description ?? 'Unknown');\n};\n\ndeclare module '../../init' {\n  export interface CosmosGlobals {\n    instances?: (CosmosInstance | LegacyCosmosInstace)[];\n    configurationContext?: Context<ConfigurationContextValue>;\n  }\n}\n\nif (windowIsAvailable) {\n  if (!window.cosmos.instances) {\n    window.cosmos.instances = [];\n  }\n\n  window.cosmos.instances.push(instance);\n\n  if (Array.isArray(window[legacyMetaKey])) {\n    window.cosmos.instances.push(...window[legacyMetaKey]);\n    delete window[legacyMetaKey];\n  }\n\n  if (!window[legacyMetaKey]) {\n    window[legacyMetaKey] = {\n      push: inst => {\n        window.cosmos.instances?.push(inst);\n      }\n    };\n  }\n}\n\nconst Configuration: FunctionComponent<ConfigurationProps> = ({\n  children,\n  locale,\n  direction,\n  translations: customTranslations,\n  theme,\n  disableDefaultFontLoading,\n  styleSheetTarget,\n  portalTarget,\n  renderNativeControls,\n  testIds,\n  id\n}: ConfigurationProps) => {\n  const context = windowIsAvailable\n    ? window.cosmos.configurationContext ?? ConfigurationContext\n    : ConfigurationContext;\n  const ctx = useContext(context);\n  const themeMachine = theme\n    ? new ThemeMachine<DefaultThemeDefinition>({ theme, parent: ctx.themeMachine })\n    : ctx.themeMachine;\n  const translations = useMemo(\n    () => createTranslationPack({ ...ctx.translations, ...customTranslations }),\n    [ctx.translations, customTranslations]\n  );\n\n  const [wrapperEl, setWrapperEl] = useElement<HTMLDivElement>();\n  const [connectedWatcherEl, setConnectedWatcherEl] = useElement<PegaConnectedWatcher>();\n  // State tracking if the DOM nodes are connected. Only used to trigger rerenders when connected state changes.\n  const [, setConnected] = useState<boolean | null>(null);\n\n  useEffect(() => {\n    if (!connectedWatcherEl) return;\n\n    const connectDisconnectListener = () => {\n      setConnected(connectedWatcherEl.isConnected);\n    };\n\n    connectedWatcherEl.addEventListener('connect-disconnect', connectDisconnectListener);\n\n    return () => {\n      connectedWatcherEl.removeEventListener('connect-disconnect', connectDisconnectListener);\n    };\n  }, [connectedWatcherEl]);\n\n  // Determine valid style sheet and portal target with ShadowDOM handling.\n  const [resolvedStyleSheetTarget, resolvedPortalTarget] = useMemo(() => {\n    // When rendering on the server, or before the wrapper is in the DOM, just bail.\n    if (!documentIsAvailable || !wrapperEl?.isConnected) return [undefined, undefined];\n\n    const rootNode = wrapperEl.getRootNode();\n\n    // When within the ShadowDOM, the default target is the ShadowRoot, otherwise default to head/body element.\n    const defaultStyleSheetTarget = rootNode instanceof ShadowRoot ? rootNode : document.head;\n    const defaultPortalTarget = rootNode instanceof ShadowRoot ? rootNode : document.body;\n\n    // Currently passed prop or previous context value\n    const requestedStyleSheetTarget = styleSheetTarget ?? ctx.styleSheetTarget;\n    const requestedPortalTarget = portalTarget ?? ctx.portalTarget;\n\n    // If the \"requested\" target is within the root node, it is valid, so use that, otherwise fallback to the default.\n    return [\n      rootNode.contains(requestedStyleSheetTarget ?? null)\n        ? requestedStyleSheetTarget\n        : defaultStyleSheetTarget,\n      rootNode.contains(requestedPortalTarget ?? null) ? requestedPortalTarget : defaultPortalTarget\n    ];\n  }, [\n    wrapperEl,\n    wrapperEl?.isConnected,\n    styleSheetTarget,\n    portalTarget,\n    ctx.styleSheetTarget,\n    ctx.portalTarget\n  ]);\n\n  // Load global fonts and styles if this configuration instance is...\n  const shouldInitialize = useMemo(\n    () =>\n      // the first configuration instance or...\n      !ctx.initialized ||\n      // is not within the same root node as the previous configuration instance.\n      !!(wrapperEl && wrapperEl.getRootNode() !== ctx.styleSheetTarget?.getRootNode()),\n    [ctx.initialized, ctx.styleSheetTarget, wrapperEl]\n  );\n\n  // Check if this StyleSheetManager is mounted above this Configuration.\n  const stylesheetManagerMounted = useMemo(\n    () => !!ctx.mountedStyleSheetManagers?.includes(StyleSheetManager),\n    [ctx.mountedStyleSheetManagers]\n  );\n\n  useEffect(() => {\n    const sym = Symbol(id);\n    mountConfig(sym);\n\n    return () => {\n      unmountConfig(sym);\n    };\n  }, [id]);\n\n  const wrappedChildren = shouldInitialize ? (\n    <>\n      {!disableDefaultFontLoading &&\n        resolvedStyleSheetTarget &&\n        createPortal(\n          <link\n            rel='stylesheet'\n            href='https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400..700;1,400..700&family=Inter:wght@400..700&display=swap'\n            data-cosmos-global-style\n          />,\n          resolvedStyleSheetTarget\n        )}\n      <GlobalStyle />\n      {children}\n    </>\n  ) : (\n    <>{children}</>\n  );\n\n  const styledWrappedChildren = stylesheetManagerMounted ? (\n    wrappedChildren\n  ) : (\n    <StyleSheetManager\n      disableVendorPrefixes\n      target={\n        // Target must be undefined in a JSDOM environment due to Styled Components server mode handling.\n        navigatorIsAvailable &&\n        resolvedStyleSheetTarget?.isConnected &&\n        !navigator.userAgent.includes('jsdom')\n          ? resolvedStyleSheetTarget\n          : undefined\n      }\n    >\n      {wrappedChildren}\n    </StyleSheetManager>\n  );\n\n  return (\n    <div\n      // Need to use inline styles because the StyleSheetManager is configured within this div.\n      style={{ display: 'contents' }}\n      ref={setWrapperEl}\n    >\n      <context.Provider\n        // eslint-disable-next-line react/jsx-no-constructed-context-values\n        value={{\n          locale: locale ?? ctx.locale,\n          direction:\n            direction ?? (locale !== undefined ? directionOfLocale(locale) : ctx.direction),\n          translations,\n          themeMachine,\n          styleSheetTarget: resolvedStyleSheetTarget,\n          portalTarget: resolvedPortalTarget,\n          loadedRef: ctx.loadedRef,\n          renderNativeControls: renderNativeControls ?? ctx.renderNativeControls,\n          testIds: testIds ?? ctx.testIds,\n          mountedStyleSheetManagers: stylesheetManagerMounted\n            ? ctx.mountedStyleSheetManagers\n            : [...(ctx.mountedStyleSheetManagers ?? []), StyleSheetManager],\n          initialized: true\n        }}\n      >\n        <ThemeProvider theme={themeMachine.theme}>{styledWrappedChildren}</ThemeProvider>\n      </context.Provider>\n      <pega-connected-watcher ref={setConnectedWatcherEl} />\n    </div>\n  );\n};\n\nexport default Configuration;\n"]}