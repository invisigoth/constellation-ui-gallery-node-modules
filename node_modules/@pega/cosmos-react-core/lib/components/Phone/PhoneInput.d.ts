import { FunctionComponent, Ref } from 'react';
import { BaseProps, ForwardProps, NoChildrenProp, TestIdProp } from '../../types';
import { FormControlProps } from '../FormControl';
export interface PhoneInputProps extends FormControlProps, BaseProps, NoChildrenProp, TestIdProp {
    /**
     * Display select with countries calling codes
     * @default false
     */
    showCountryCode?: boolean;
    /** Changes lists of countries calling codes */
    callingCodesList?: string[];
    /** Callback fired on input value change */
    onChange?: (value: string) => void;
    /** Callback fired when the component loses focus */
    onBlur?: (value: string) => void;
    /** CCallback fired when the component gets focus */
    onFocus?: (value: string) => void;
    /** Ref for the wrapping element. */
    ref?: Ref<HTMLInputElement>;
}
declare const _default: FunctionComponent<PhoneInputProps & ForwardProps> & {
    getTestIds: (testIdProp?: string | undefined) => import("../../types").TestIdsRecord<readonly ["control", "country-code", "label", "info", "additional-info", "suggestion-accept", "suggestion-reject"]>;
};
export default _default;
//# sourceMappingURL=PhoneInput.d.ts.map