{"version":3,"file":"LiveLog.js","sourceRoot":"","sources":["../../../src/components/LiveLog/LiveLog.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  type FunctionComponent,\n  type Reducer,\n  type Context,\n  useEffect,\n  useContext,\n  useReducer,\n  useMemo\n} from 'react';\n\nimport { createUID, windowIsAvailable } from '../../utils';\nimport { useI18n } from '../../hooks';\n\nimport { StyledLog } from './LiveLog.styles';\nimport type {\n  LiveLogContextValue,\n  LiveLogProps,\n  LiveLogState,\n  ReducerAction\n} from './LiveLog.types';\nimport { LiveLogContext } from './Context';\n\ndeclare module '../../init' {\n  export interface CosmosGlobals {\n    liveLogContext?: Context<LiveLogContextValue>;\n  }\n}\n\nconst reducer = (state: LiveLogState, action: ReducerAction) => {\n  const type = action.type;\n\n  switch (type) {\n    case 'announce': {\n      const message = action.payload.message;\n      const messageType = action.payload.type;\n      const announceMessage =\n        ['alert', 'error', 'exception'].includes(messageType) ||\n        !state.suppressedTypes.includes(messageType);\n\n      if (announceMessage) {\n        const id = createUID();\n\n        if (action.payload.level === 'assertive') {\n          return {\n            ...state,\n            assertiveMessages: [...state.assertiveMessages, { message, id }]\n          };\n        }\n\n        return {\n          ...state,\n          politeMessages: [...state.politeMessages, { message, id }]\n        };\n      }\n\n      return state;\n    }\n    case 'setMaxLength': {\n      return {\n        ...state,\n        maxLength: action.payload > 0 ? action.payload : 50\n      };\n    }\n    case 'trimLength': {\n      const trimPolite = state.politeMessages.length > state.maxLength;\n      const trimAssertive = state.assertiveMessages.length > state.maxLength;\n\n      return {\n        ...state,\n        politeMessages: trimPolite\n          ? [...state.politeMessages.slice(-state.maxLength)]\n          : state.politeMessages,\n        assertiveMessages: trimAssertive\n          ? [...state.assertiveMessages.slice(-state.maxLength)]\n          : state.assertiveMessages\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst LiveLog: FunctionComponent<LiveLogProps> = ({ children, maxLength = 50 }: LiveLogProps) => {\n  const t = useI18n();\n\n  const [state, dispatch] = useReducer<Reducer<LiveLogState, ReducerAction>>(reducer, {\n    maxLength,\n    politeMessages: [],\n    assertiveMessages: [],\n    suppressedTypes: [] // initialize via a11y settings once available.\n  });\n\n  // Manage log length.\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      dispatch({ type: 'trimLength' });\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [state.assertiveMessages, state.politeMessages, state.maxLength]);\n\n  // Update max length\n  useEffect(() => {\n    dispatch({ type: 'setMaxLength', payload: maxLength });\n  }, [maxLength]);\n\n  const providerValue = useMemo<LiveLogContextValue>(\n    () => ({\n      announce: ({ message, type = 'info', assertive = false }) => {\n        dispatch({\n          type: 'announce',\n          payload: { message, type, level: assertive ? 'assertive' : 'polite' }\n        });\n      },\n      announcePolite: ({ message, type = 'info' }) => {\n        dispatch({ type: 'announce', payload: { message, type, level: 'polite' } });\n      },\n      announceAssertive: ({ message, type = 'info' }) => {\n        dispatch({ type: 'announce', payload: { message, type, level: 'assertive' } });\n      },\n      initialized: true\n    }),\n    []\n  );\n\n  // Don't create additional LiveLogContext.Providers.\n  const context = windowIsAvailable\n    ? window.cosmos.liveLogContext ?? LiveLogContext\n    : LiveLogContext;\n  const priorCtx = useContext(context);\n  if (priorCtx.initialized) {\n    return <context.Provider value={priorCtx}>{children}</context.Provider>;\n  }\n\n  return (\n    <context.Provider value={providerValue}>\n      {children}\n\n      <StyledLog role='log' aria-relevant='additions'>\n        <h6>{t('polite_announcements')}</h6>\n        {state.politeMessages.map(({ message, id }) => (\n          <p key={id}>{message}</p>\n        ))}\n      </StyledLog>\n\n      <StyledLog role='log' aria-live='assertive' aria-relevant='additions'>\n        <h6>{t('assertive_announcements')}</h6>\n        {state.assertiveMessages.map(({ message, id }) => (\n          <p key={id}>{message}</p>\n        ))}\n      </StyledLog>\n    </context.Provider>\n  );\n};\n\nexport default LiveLog;\n"]}