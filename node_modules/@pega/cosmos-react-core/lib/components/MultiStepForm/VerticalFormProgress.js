import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment } from 'react';
import Flex from '../Flex';
import Grid from '../Grid';
import Text from '../Text';
import { StepMarkerIcon, StyledBulletWrapper, StyledStepText } from './FormProgress.styles';
const VerticalFormProgress = ({ steps, currentStepId, ...restProps }) => {
    const curIdx = steps.findIndex(step => step.id === currentStepId);
    const curStep = steps[curIdx];
    return (_jsx(Flex, { ...restProps, container: { alignItems: 'start' }, role: 'progressbar', "aria-valuenow": curIdx, "aria-valuemin": 0, "aria-valuetext": curStep.name, "aria-valuemax": steps.length, children: _jsx(Grid, { container: {
                cols: '2rem minmax(0, 1fr)',
                colGap: 1
            }, children: steps.map((step, index) => {
                return (_jsxs(Fragment, { children: [_jsx(StyledBulletWrapper, { hasNext: index !== steps.length - 1, prior: index < curIdx, children: _jsx(StepMarkerIcon, { "aria-label": step.name, "aria-describedby": step.id, current: index === curIdx, prior: index < curIdx, depth: step.depth }) }), _jsx(Text, { variant: 'h4', as: StyledStepText, children: step.name })] }, step.id));
            }) }) }));
};
export default VerticalFormProgress;
//# sourceMappingURL=VerticalFormProgress.js.map