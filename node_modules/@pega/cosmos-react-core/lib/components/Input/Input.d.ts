import { FC } from 'react';
import { Action, BaseProps, ForwardProps, NoChildrenProp, TestIdProp } from '../../types';
import { FormControlProps } from '../FormControl';
export interface InputProps extends FormControlProps, BaseProps, NoChildrenProp, TestIdProp {
    /**
     * Specifies the type of input to be used.
     * @default 'text'
     */
    type?: 'text' | 'password' | 'number' | 'email' | 'url' | 'search' | 'tel' | 'date' | 'datetime-local' | 'time' | 'week' | 'month' | 'hidden' | 'color';
    /** Pass an array of Action objects to append button(s) inline with the Input. */
    actions?: Action[];
    /** Enables read only mode */
    readOnly?: FormControlProps['readOnly'];
}
declare const _default: FC<InputProps & ForwardProps> & {
    getTestIds: (testIdProp?: string | undefined) => import("../../types").TestIdsRecord<readonly ["control", "label", "info", "additional-info", "suggestion-accept", "suggestion-reject"]>;
};
export default _default;
//# sourceMappingURL=Input.d.ts.map