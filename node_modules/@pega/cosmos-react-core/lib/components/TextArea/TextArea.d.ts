import { FC, ChangeEventHandler } from 'react';
import { BaseProps, ForwardProps, NoChildrenProp, TestIdProp } from '../../types';
import { FormControlProps } from '../FormControl';
export interface TextAreaProps extends FormControlProps, BaseProps, NoChildrenProp, TestIdProp {
    /** Minimum length of characters that can be input. */
    minLength?: number;
    /** Maximum length of characters that can be input. */
    maxLength?: number;
    /**
     * Allows the user to resize the Text Area.
     * @default false
     */
    resizable?: boolean;
    /**
     * Enables the Text Area to resize itself automatically.
     * @default true
     */
    autoResize?: boolean;
    /**
     * Display a live character count in relation to the maxLength.
     * @default false
     */
    displayCharCount?: boolean;
    /**
     * Allow or disallow a value beyond the maxLength.
     * @default true
     */
    hardStop?: boolean;
    onChange?: ChangeEventHandler<HTMLTextAreaElement>;
}
declare const _default: FC<TextAreaProps & ForwardProps> & {
    getTestIds: (testIdProp?: string | undefined) => import("../../types").TestIdsRecord<readonly ["control", "label", "info", "additional-info", "suggestion-accept", "suggestion-reject"]>;
};
export default _default;
//# sourceMappingURL=TextArea.d.ts.map