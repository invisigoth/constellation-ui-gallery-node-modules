import { FunctionComponent, MouseEventHandler, KeyboardEventHandler } from 'react';
import type { BaseProps, ForwardProps, NoChildrenProp, OmitStrict, TestIdProp } from '../../types';
import { ButtonProps } from '../Button';
import { PopoverProps } from '../Popover';
import type { MenuProps } from '../Menu/Menu.types';
import type { CountProps } from '../Badges/Count';
export interface MenuButtonProps extends BaseProps, NoChildrenProp, TestIdProp {
    /** The text for the MenuButton also used to set the aria-label. */
    text: string;
    /**
     * Determines the Button variant for the MenuButton.
     * @default 'secondary'
     */
    variant?: ButtonProps['variant'];
    /** The name of the icon for the MenuButton. */
    icon?: string;
    /** Only display the icon. The text prop will be forwarded to a tooltip. */
    iconOnly?: ButtonProps['icon'];
    /** The total count representing the list data which was selected. */
    count?: CountProps['children'];
    /** The click handler for the MenuButton. */
    onClick?: MouseEventHandler;
    /** Menu related props. */
    menu?: MenuProps;
    /** Popover related props. */
    popover?: OmitStrict<PopoverProps, 'show' | 'target' | 'children'>;
    /** DOM id for the button element. */
    id?: string;
    /** Ref for the button element. */
    ref?: ButtonProps['ref'];
    /** The keydown handler for the MenuButton. */
    onKeyDown?: KeyboardEventHandler;
}
declare const _default: FunctionComponent<ForwardProps & MenuButtonProps> & {
    getTestIds: (testIdProp?: string | undefined) => import("../../types").TestIdsRecord<readonly []>;
};
export default _default;
//# sourceMappingURL=MenuButton.d.ts.map