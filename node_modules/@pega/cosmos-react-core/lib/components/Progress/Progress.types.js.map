{"version":3,"file":"Progress.types.js","sourceRoot":"","sources":["../../../src/components/Progress/Progress.types.ts"],"names":[],"mappings":"","sourcesContent":["import { Ref } from 'react';\n\nimport { BaseProps, NoChildrenProp } from '../../types';\nimport { BackdropProps } from '../Backdrop/Backdrop';\n\nexport interface ProgressProps extends BaseProps, NoChildrenProp {\n  /**\n   * Determines which variant should be rendered.\n   * @default 'ring'\n   */\n  variant?: 'ring' | 'bar' | 'ellipsis';\n  /**\n   * Minimum possible value.\n   * @default 0\n   */\n  minValue?: number;\n  /**\n   * Maximum possible value.\n   * @default 100\n   */\n  maxValue?: number;\n  /** Current progress value within the range specified, or the default range of 0-100. */\n  value?: number;\n  /** Provides a message to the user along with the component. */\n  message?: string;\n  /**\n   * Determines the placement of the component.\n   * @default 'global'\n   */\n  placement?: 'global' | 'local' | 'block' | 'inline';\n  /**\n   * When true, fade in occurs when component mounts.\n   * When false, mounted component fades out then re-renders self and returns null, removing itself from the DOM.\n   * This is technically not the same as unmounting via parent.\n   * Applicable for all placements but the fade effect is only applicable to 'global' | 'local' placement.\n   * @default true\n   */\n  visible?: boolean;\n  /**\n   * If true, upon visible render the indicator element will take focus.\n   * @default false\n   */\n  focusOnVisible?: boolean;\n  /**\n   * If true, the indicator will not render as visible until 1sec after the visible prop is set to true.\n   * This is a best estimate to avoid visual flicker where progress is resolved within 1sec.\n   * @default false\n   */\n  delay?: boolean;\n  /** Called when the css transition ends on the way in. */\n  onTransitionEndIn?: BackdropProps['onAfterTransitionIn'];\n  /** Called when the css transition ends on the way out...A good time to unmount! */\n  onTransitionEndOut?: BackdropProps['onAfterTransitionOut'];\n  /** Triggers live announcement on show and value or message change. */\n  liveConfig?: {\n    /** Distinguishes the source of the update on the page. */\n    contextualLabel: string;\n  };\n  /** Ref to the visual indicator element, currently a role of progressbar. */\n  ref?: Ref<HTMLDivElement>;\n}\n"]}