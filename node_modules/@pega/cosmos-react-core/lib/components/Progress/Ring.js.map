{"version":3,"file":"Ring.js","sourceRoot":"","sources":["../../../src/components/Progress/Ring.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAM,UAAU,EAAmB,MAAM,OAAO,CAAC;AAIxD,OAAO,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AAGvD,MAAM,IAAI,GAAqC,UAAU,CAAC,SAAS,IAAI,CACrE,EAAE,KAAK,EAAE,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,GAAG,EAAE,SAAS,EAAE,GAAG,SAAS,EAAkC,EAChG,GAAyB;IAEzB,IAAI,gBAAgB,CAAC;IACrB,MAAM,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;IAEnC,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,gBAAgB,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,aAAa,CAAC;SAC5E,IAAI,KAAK,GAAG,QAAQ,IAAI,QAAQ,GAAG,QAAQ;QAAE,gBAAgB,GAAG,CAAC,CAAC;SAClE,IAAI,KAAK,GAAG,QAAQ;QAAE,gBAAgB,GAAG,aAAa,CAAC;;QACvD,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,GAAG,aAAa,CAAC;IAEzF,OAAO,CACL,KAAC,kBAAkB,IACjB,GAAG,EAAE,GAAG,EACR,IAAI,EAAC,aAAa,mBACH,QAAQ,mBACR,QAAQ,mBACR,KAAK,EACpB,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,OAAO,KAAK,KAAK,QAAQ,KAClC,SAAS,YAEb,eAAK,OAAO,EAAC,WAAW,aACtB,kBAAU,EACV,iBAAQ,eAAe,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,gBAAgB,EAAE,GAAI,IACnE,GACa,CACtB,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,eAAe,IAAI,CAAC","sourcesContent":["import { FC, forwardRef, PropsWithoutRef } from 'react';\n\nimport { ForwardProps } from '../../types';\n\nimport { StyledProgressRing } from './Progress.styles';\nimport { ProgressProps } from './Progress.types';\n\nconst Ring: FC<ProgressProps & ForwardProps> = forwardRef(function Ring(\n  { value, minValue = 0, maxValue = 100, placement, ...restProps }: PropsWithoutRef<ProgressProps>,\n  ref: ProgressProps['ref']\n) {\n  let strokeDashoffset;\n  const circumference = 18 * Math.PI;\n\n  if (typeof value !== 'number') strokeDashoffset = (1 - 33 / 100) * circumference;\n  else if (value > maxValue || minValue > maxValue) strokeDashoffset = 0;\n  else if (value < minValue) strokeDashoffset = circumference;\n  else strokeDashoffset = (1 - (value - minValue) / (maxValue - minValue)) * circumference;\n\n  return (\n    <StyledProgressRing\n      ref={ref}\n      role='progressbar'\n      aria-valuemin={minValue}\n      aria-valuemax={maxValue}\n      aria-valuenow={value}\n      placement={placement}\n      determinate={typeof value === 'number'}\n      {...restProps}\n    >\n      <svg viewBox='0 0 20 20'>\n        <circle />\n        <circle strokeDasharray={circumference} style={{ strokeDashoffset }} />\n      </svg>\n    </StyledProgressRing>\n  );\n});\n\nexport default Ring;\n"]}