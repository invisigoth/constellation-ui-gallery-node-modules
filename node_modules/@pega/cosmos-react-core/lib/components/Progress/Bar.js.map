{"version":3,"file":"Bar.js","sourceRoot":"","sources":["../../../src/components/Progress/Bar.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAM,UAAU,EAAkC,MAAM,OAAO,CAAC;AAIvE,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAGtD,MAAM,GAAG,GAAqC,UAAU,CAAC,SAAS,GAAG,CACnE,EACE,KAAK,EACL,QAAQ,GAAG,CAAC,EACZ,QAAQ,GAAG,GAAG,EACd,OAAO,EACP,SAAS,EACT,KAAK,EACL,GAAG,SAAS,EAC+C,EAC7D,GAAyB;IAEzB,IAAI,UAAU,GAAG,KAAK,CAAC;IAEvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,IAAI,KAAK,GAAG,QAAQ,IAAI,QAAQ,GAAG,QAAQ;YAAE,UAAU,GAAG,CAAC,CAAC;aACvD,IAAI,KAAK,GAAG,QAAQ;YAAE,UAAU,GAAG,GAAG,CAAC;;YACvC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;KAC3E;IAED,OAAO,CACL,KAAC,iBAAiB,IAChB,GAAG,EAAE,GAAG,EACR,IAAI,EAAC,aAAa,mBACH,QAAQ,mBACR,QAAQ,mBACR,KAAK,EACpB,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,OAAO,KAAK,KAAK,QAAQ,EACtC,KAAK,EAAE,EAAE,GAAG,KAAK,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC,EAAE,EAAmB,KAClF,SAAS,GACb,CACH,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,eAAe,GAAG,CAAC","sourcesContent":["import { FC, forwardRef, PropsWithoutRef, CSSProperties } from 'react';\n\nimport { ForwardProps } from '../../types';\n\nimport { StyledProgressBar } from './Progress.styles';\nimport { ProgressProps } from './Progress.types';\n\nconst Bar: FC<ProgressProps & ForwardProps> = forwardRef(function Bar(\n  {\n    value,\n    minValue = 0,\n    maxValue = 100,\n    message,\n    placement,\n    style,\n    ...restProps\n  }: PropsWithoutRef<ProgressProps & { style?: CSSProperties }>,\n  ref: ProgressProps['ref']\n) {\n  let percentage = value;\n\n  if (typeof value === 'number') {\n    if (value > maxValue || minValue > maxValue) percentage = 0;\n    else if (value < minValue) percentage = 100;\n    else percentage = (1 - (value - minValue) / (maxValue - minValue)) * -100;\n  }\n\n  return (\n    <StyledProgressBar\n      ref={ref}\n      role='progressbar'\n      aria-valuemin={minValue}\n      aria-valuemax={maxValue}\n      aria-valuenow={value}\n      placement={placement}\n      determinate={typeof value === 'number'}\n      style={{ ...style, '--progress': percentage ? `${percentage}%` : '' } as CSSProperties}\n      {...restProps}\n    />\n  );\n});\n\nexport default Bar;\n"]}