{"version":3,"file":"Ellipsis.js","sourceRoot":"","sources":["../../../src/components/Progress/Ellipsis.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAM,UAAU,EAAmB,MAAM,OAAO,CAAC;AAIxD,OAAO,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAC;AAG3D,MAAM,QAAQ,GAAqC,UAAU,CAAC,SAAS,QAAQ,CAC7E,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,SAAS,EAAkC,EACpE,GAAyB;IAEzB,OAAO,CACL,KAAC,sBAAsB,IAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,aAAa,EAAC,SAAS,EAAE,SAAS,KAAM,SAAS,YACtF,2BACE,gBAAQ,EACR,gBAAQ,EACR,gBAAQ,IACH,GACgB,CAC1B,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,eAAe,QAAQ,CAAC","sourcesContent":["import { FC, forwardRef, PropsWithoutRef } from 'react';\n\nimport { ForwardProps } from '../../types';\n\nimport { StyledProgressEllipsis } from './Progress.styles';\nimport { ProgressProps } from './Progress.types';\n\nconst Ellipsis: FC<ProgressProps & ForwardProps> = forwardRef(function Ellipsis(\n  { message, placement, ...restProps }: PropsWithoutRef<ProgressProps>,\n  ref: ProgressProps['ref']\n) {\n  return (\n    <StyledProgressEllipsis ref={ref} role='progressbar' placement={placement} {...restProps}>\n      <span>\n        <span />\n        <span />\n        <span />\n      </span>\n    </StyledProgressEllipsis>\n  );\n});\n\nexport default Ellipsis;\n"]}