{"version":3,"file":"Progress.js","sourceRoot":"","sources":["../../../src/components/Progress/Progress.tsx"],"names":[],"mappings":"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","sourcesContent":["import { forwardRef, PropsWithoutRef, FC, useState, useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { ForwardProps } from '../../types';\nimport Text from '../Text';\nimport { useConfiguration, useConsolidatedRef, useI18n, useLiveLog } from '../../hooks';\nimport Flex from '../Flex';\n\nimport { ProgressProps } from './Progress.types';\nimport Bar from './Bar';\nimport Ellipsis from './Ellipsis';\nimport Ring from './Ring';\nimport { StyledMessage, StyledProgress, StyledProgressBackdrop } from './Progress.styles';\n\nconst variantMap = {\n  ring: Ring,\n  bar: Bar,\n  ellipsis: Ellipsis\n} as const;\n\nconst delayDuration = 100;\nconst minVisibleDuration = 1000;\n\nconst Progress: FC<ProgressProps & ForwardProps> = forwardRef(function Progress(\n  {\n    variant = 'ring',\n    placement = 'global',\n    visible: visibleProp = true,\n    focusOnVisible = false,\n    delay = false,\n    onTransitionEndIn,\n    onTransitionEndOut,\n    value,\n    message,\n    liveConfig,\n    ...restProps\n  }: PropsWithoutRef<ProgressProps>,\n  ref: ProgressProps['ref']\n) {\n  const t = useI18n();\n  const { portalTarget } = useConfiguration();\n  const { announcePolite } = useLiveLog();\n  const progressEl = useConsolidatedRef<HTMLDivElement>(ref);\n\n  // Rendering states. Both are needed due to Backdrop's transition phase where isVisibleState is false but nullRender is true until onAfterTransitionOut.\n  const [isVisibleState, setIsVisibleState] = useState(delay ? false : visibleProp);\n  const [nullRender, setNullRender] = useState(!isVisibleState);\n\n  // Refs for timestamps and timeout ids.\n  const timeBeforeVisibleRender = useRef<number>();\n  const timeAfterVisibleRender = useRef<number>();\n  const delayTimer = useRef<number>();\n  const minVisibleTimer = useRef<number>();\n\n  const hasBackdrop = placement === 'global' || placement === 'local';\n  const valString = typeof value === 'number' ? `${value}%` : undefined;\n  const label = message && valString ? `${message} - ${valString}` : message || valString;\n\n  const renderVisible = () => {\n    setIsVisibleState(true);\n    setNullRender(false);\n  };\n\n  const renderNotVisible = () => {\n    setIsVisibleState(false);\n    // With a transition, setNullRender needs to be called in Backdrop's onAfterTransitionOut.\n    if (!hasBackdrop) {\n      setNullRender(true);\n    }\n  };\n\n  // Handle render and visible state.\n  useEffect(\n    () => {\n      if (visibleProp) {\n        // Capture a timestamp for additional timers.\n        timeBeforeVisibleRender.current = Date.now();\n\n        if (delay) {\n          delayTimer.current = window.setTimeout(renderVisible, delayDuration);\n        } else {\n          renderVisible();\n        }\n      } else if (\n        // A timer was started to render visible either avoid it or render null.\n        delayTimer.current !== undefined\n      ) {\n        // If a timeout has started to render visible, clear it.\n        clearTimeout(delayTimer.current);\n\n        // If the indicator has already rendered visible.\n        if (timeAfterVisibleRender.current !== undefined) {\n          const timeElapsedSinceLastVisibleRender = Date.now() - timeAfterVisibleRender.current;\n\n          // If the indicator has been visible for long enough we can remove it.\n          if (timeElapsedSinceLastVisibleRender >= minVisibleDuration) {\n            renderNotVisible();\n          } else {\n            // Hold off removing until we hit the minimum visible time.\n            minVisibleTimer.current = window.setTimeout(\n              renderNotVisible,\n              minVisibleDuration - timeElapsedSinceLastVisibleRender\n            );\n          }\n        } else {\n          renderNotVisible();\n        }\n      } else {\n        renderNotVisible();\n      }\n    },\n    // visibleProp is the only triggerable dependency. Others values will be captured.\n    [visibleProp]\n  );\n\n  // Live announcement\n  useEffect(\n    () => {\n      if (liveConfig?.contextualLabel && isVisibleState) {\n        announcePolite({\n          message: `${liveConfig.contextualLabel}, ${label ?? t('loading')}`,\n          type: 'status'\n        });\n      }\n    },\n    // isVisibleState is the only triggerable dependency. Others values will be captured.\n    [isVisibleState]\n  );\n\n  // Auto focusing and render timestamping.\n  useEffect(\n    () => {\n      if (!nullRender && isVisibleState) {\n        // After a visible render set a timestamp for timers above.\n        timeAfterVisibleRender.current = Date.now();\n\n        if (focusOnVisible) progressEl.current?.focus();\n      }\n    },\n    // nullRender is the only triggerable dependency. Others values will be captured.\n    [nullRender]\n  );\n\n  if (nullRender) return null;\n\n  const CompVariant = variantMap[variant];\n\n  let indicator = (\n    <CompVariant\n      aria-label={typeof value !== 'number' ? label : t('loading')}\n      as={placement === 'inline' ? 'span' : undefined}\n      {...restProps}\n      placement={placement}\n      value={value}\n      aria-valuetext={typeof value === 'number' ? label : undefined}\n      ref={progressEl}\n      tabIndex={-1}\n    />\n  );\n\n  if (placement !== 'inline') {\n    indicator = (\n      <Flex\n        container={{ direction: 'column', alignItems: 'center', gap: 0.5 }}\n        as={StyledProgress}\n        placement={placement}\n      >\n        {indicator}\n        {message && (\n          <Text as={StyledMessage} variant='secondary' aria-hidden='true'>\n            {message}\n          </Text>\n        )}\n      </Flex>\n    );\n  }\n\n  const content = hasBackdrop ? (\n    <StyledProgressBackdrop\n      open={isVisibleState}\n      container={{ direction: 'column' }}\n      position={placement === 'global' ? 'fixed' : 'absolute'}\n      variant='light'\n      alpha={0.8}\n      onAfterTransitionIn={onTransitionEndIn}\n      onAfterTransitionOut={() => {\n        setNullRender(true);\n        onTransitionEndOut?.();\n      }}\n    >\n      {indicator}\n    </StyledProgressBackdrop>\n  ) : (\n    indicator\n  );\n\n  return placement === 'global' && portalTarget ? createPortal(content, portalTarget) : content;\n});\n\nexport default Progress;\n"]}