{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/components/AppShell/utils.ts"],"names":[],"mappings":"AAAA,wDAAwD;AACxD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAiB,MAAoB,EAAE,YAAkB,EAAO,EAAE;IAC9F,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,MAAM,CAAC,QAAQ,EAAE,CAAC;IAClB,OAAO,MAAM,CAAC,aAAa,KAAK,IAAI,IAAI,MAAM,CAAC,aAAa,KAAK,YAAY,EAAE;QAC7E,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACrC,MAAM,CAAC,QAAQ,EAAE,CAAC;KACnB;IAED,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,OAAO,MAAM,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;QACjC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KAClC;IAED,OAAO,KAAK,CAAC,MAAM,CAAC,SAAS,CAAQ,CAAC;AACxC,CAAC,CAAC","sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const followingNodes = <T extends Node>(source: NodeIterator, startingNode: Node): T[] => {\n  const prevNodes = [];\n  source.nextNode();\n  while (source.referenceNode !== null && source.referenceNode !== startingNode) {\n    prevNodes.push(source.referenceNode);\n    source.nextNode();\n  }\n\n  const nodes = [];\n  while (source.nextNode() !== null) {\n    nodes.push(source.referenceNode);\n  }\n\n  return nodes.concat(prevNodes) as T[];\n};\n"]}