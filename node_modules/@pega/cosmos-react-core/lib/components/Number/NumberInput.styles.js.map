{"version":3,"file":"NumberInput.styles.js","sourceRoot":"","sources":["../../../src/components/Number/NumberInput.styles.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AAEhD,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AACnD,OAAO,WAAW,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AACzC,OAAO,EAAE,UAAU,EAAE,MAAM,SAAS,CAAC;AAMrC,MAAM,CAAC,MAAM,kBAAkB,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAqB,KAAK,CAAC,EAAE;IACtF,MAAM,EACJ,KAAK,EAAE,EACL,IAAI,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,EAClF,UAAU,EAAE,EACV,KAAK,EAAE,EAAE,MAAM,EAAE,EACjB,cAAc,EAAE,EACd,eAAe,EAAE,gBAAgB,EACjC,kBAAkB,EAAE,OAAO,EAC3B,cAAc,EAAE,WAAW,EAC3B,QAAQ,EAAE,EAAE,cAAc,EAAE,gBAAgB,EAAE,YAAY,EAAE,MAAM,EAAE,EACrE,EACF,EACF,EACD,IAAI,EACL,GAAG,KAAK,CAAC;IACV,OAAO,GAAG,CAAA;;sBAEU,gBAAgB;oBAClB,MAAM;;MAEpB,UAAU;;6BAEa,OAAO;2BACT,OAAO;;MAE5B,WAAW;eACF,OAAO;eACP,IAAI;;;;;0BAKO,OAAO,CAAC,oBAAoB,CAAC;qBAClC,MAAM,UAAU,WAAW;yBACvB,OAAO,CAAC,WAAW,CAAC,UAAU,WAAW;;;;;MAK5D,UAAU;8BACc,OAAO;;;QAG7B,YAAY;4BACQ,gBAAgB,MAAM,gBAAgB;;;;iBAIjD,OAAO;;qBAEH,MAAM,UAAU,WAAW;yBACvB,OAAO,CAAC,WAAW,CAAC,UAAU,WAAW;;GAE/D,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,kBAAkB,CAAC,YAAY,GAAG,gBAAgB,CAAC;AAEnD,MAAM,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,EAAE;IAC1D,MAAM,EACJ,KAAK,EAAE,EACL,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,EACtC,UAAU,EAAE,EACV,cAAc,EAAE,EACd,QAAQ,EAAE,EAAE,cAAc,EAAE,gBAAgB,EAAE,YAAY,EAAE,MAAM,EAAE,EACpE,cAAc,EAAE,WAAW,EAC5B,EACD,KAAK,EAAE,EAAE,MAAM,EAAE,EAClB,EACF,EACF,GAAG,KAAK,CAAC;IAEV,OAAO,GAAG,CAAA;4BACgB,OAAO;;sBAEb,gBAAgB;oBAClB,MAAM;;MAEpB,WAAW;;;;8BAIa,OAAO;;qBAEhB,MAAM,UAAU,WAAW;yBACvB,OAAO,CAAC,WAAW,CAAC,UAAU,WAAW;;;;;MAK5D,UAAU;8BACc,OAAO;;;GAGlC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,iBAAiB,CAAC,YAAY,GAAG,gBAAgB,CAAC;AAElD,eAAe,iBAAiB,CAAC","sourcesContent":["import styled, { css } from 'styled-components';\n\nimport { StyledFormControl } from '../FormControl';\nimport StyledInput from '../Input/Input.styles';\nimport { StyledText } from '../Text/Text';\nimport { defaultThemeProp } from '../../theme';\nimport { StyledButton } from '../Button';\nimport { StyledFlex } from '../Flex';\n\ninterface StyledStepperProps {\n  size: number;\n}\n\nexport const StyledStepperInput = styled(StyledFormControl)<StyledStepperProps>(props => {\n  const {\n    theme: {\n      base: { spacing, 'border-radius': baseBorderRadius, 'hit-area': hitArea, palette },\n      components: {\n        input: { height },\n        'form-control': {\n          'border-radius': formBorderRadius,\n          'foreground-color': fgColor,\n          'border-width': borderWidth,\n          ':focus': { 'border-color': focusBorderColor, 'box-shadow': shadow }\n        }\n      }\n    },\n    size\n  } = props;\n  return css`\n    &:focus-within:not([disabled]) {\n      border-color: ${focusBorderColor};\n      box-shadow: ${shadow};\n    }\n    ${StyledFlex} {\n      overflow: auto;\n      margin-inline-start: ${spacing};\n      margin-inline-end: ${spacing};\n    }\n    ${StyledInput} {\n      color: ${fgColor};\n      width: ${size}ch;\n      min-width: 1ch;\n      outline: none;\n      border: 0;\n      padding: 0;\n      background-color: ${palette['primary-background']};\n      height: calc(${height} - 2 * ${borderWidth});\n      min-height: calc(${hitArea['mouse-min']} - 2 * ${borderWidth});\n      &:focus:not([disabled]) {\n        box-shadow: none;\n      }\n    }\n    ${StyledText} {\n      padding: 0 calc(0.5 * ${spacing});\n      white-space: nowrap;\n    }\n    > ${StyledButton} {\n      border-radius: calc(${baseBorderRadius} * ${formBorderRadius});\n      margin-inline-start: auto;\n      border: 0;\n      &:enabled {\n        color: ${fgColor};\n      }\n      height: calc(${height} - 2 * ${borderWidth});\n      min-height: calc(${hitArea['mouse-min']} - 2 * ${borderWidth});\n    }\n  `;\n});\n\nStyledStepperInput.defaultProps = defaultThemeProp;\n\nconst StyledNumberInput = styled(StyledFormControl)(props => {\n  const {\n    theme: {\n      base: { spacing, 'hit-area': hitArea },\n      components: {\n        'form-control': {\n          ':focus': { 'border-color': focusBorderColor, 'box-shadow': shadow },\n          'border-width': borderWidth\n        },\n        input: { height }\n      }\n    }\n  } = props;\n\n  return css`\n    padding: 0 calc(0.5 * ${spacing});\n    &:focus-within:not([disabled]) {\n      border-color: ${focusBorderColor};\n      box-shadow: ${shadow};\n    }\n    ${StyledInput} {\n      color: inherit;\n      outline: none;\n      border: 0;\n      padding: 0 calc(0.5 * ${spacing});\n      background-color: initial;\n      height: calc(${height} - 2 * ${borderWidth});\n      min-height: calc(${hitArea['mouse-min']} - 2 * ${borderWidth});\n      &:focus:not([disabled]) {\n        box-shadow: none;\n      }\n    }\n    ${StyledText} {\n      padding: 0 calc(0.5 * ${spacing});\n      white-space: nowrap;\n    }\n  `;\n});\n\nStyledNumberInput.defaultProps = defaultThemeProp;\n\nexport default StyledNumberInput;\n"]}