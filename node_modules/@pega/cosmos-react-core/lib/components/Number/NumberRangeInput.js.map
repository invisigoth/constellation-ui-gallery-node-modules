{"version":3,"file":"NumberRangeInput.js","sourceRoot":"","sources":["../../../src/components/Number/NumberRangeInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  forwardRef,\n  FunctionComponent,\n  Ref,\n  useCallback,\n  useImperativeHandle,\n  useReducer,\n  useRef\n} from 'react';\n\nimport type { ForwardProps } from '../../types';\nimport { useConsolidatedRef, useI18n, useFocusWithin, useTestIds } from '../../hooks';\nimport { StyledRangeInputContainer } from '../Input/Input.styles';\nimport FormField from '../FormField';\nimport Flex from '../Flex';\nimport { withTestIds } from '../../utils';\n\nimport NumberInput from './NumberInput';\nimport type { NumberRangeInputProps } from './NumberInput.types';\nimport { getNumberRangeTestIds } from './Number.test-ids';\n\ntype DateRangeAction = { type: 'start' | 'end'; value: string };\ntype State = { start: string; end: string };\n\nconst reducer = (prevState: State, { type, value }: DateRangeAction): State => {\n  switch (type) {\n    case 'start': {\n      return { ...prevState, start: value };\n    }\n    case 'end': {\n      return { ...prevState, end: value };\n    }\n    default:\n      return prevState;\n  }\n};\n\nconst NumberRangeInput: FunctionComponent<NumberRangeInputProps & ForwardProps> = forwardRef(\n  function NumberRangeInput(\n    {\n      testId,\n      value = {},\n      onChange,\n      onBlur,\n      onFocus,\n      label,\n      fromLabel,\n      toLabel,\n      labelHidden,\n      placeholder,\n      disabled,\n      readOnly,\n      required,\n      status,\n      unit,\n      showDecimal,\n      numberOfDecimals,\n      showGroupSeparators,\n      min,\n      max,\n      step,\n      variant,\n      fromAdditionalInfo,\n      toAdditionalInfo,\n      autoFocus,\n      handle,\n      ...restProps\n    }: NumberRangeInputProps,\n    ref: Ref<HTMLDivElement>\n  ) {\n    const testIds = useTestIds(testId, getNumberRangeTestIds);\n\n    const t = useI18n();\n\n    const startValueInputRef = useRef<HTMLInputElement>(null);\n    const endValueInputRef = useRef<HTMLInputElement>(null);\n\n    const [state, dispatch] = useReducer(reducer, {\n      start: value.start ?? '',\n      end: value.end ?? ''\n    });\n\n    // Need to keep the value in ref also, to be able to call onBlur with newest value\n    const startValueRef = useRef(state.start);\n    const endValueRef = useRef(state.end);\n\n    const onFocusChange = useCallback(\n      (focused: boolean) => {\n        (focused ? onFocus : onBlur)?.({ start: startValueRef.current, end: endValueRef.current });\n      },\n      [onBlur, value.start, value.end]\n    );\n\n    const containerRef = useConsolidatedRef(ref);\n    useFocusWithin([containerRef], onFocusChange);\n\n    useImperativeHandle(\n      handle,\n      () => ({\n        clear: () => {\n          if (startValueInputRef.current) startValueInputRef.current.value = '';\n          if (endValueInputRef.current) endValueInputRef.current.value = '';\n          startValueRef.current = '';\n          endValueRef.current = '';\n          dispatch({ type: 'start', value: '' });\n          dispatch({ type: 'end', value: '' });\n          onChange({ start: '', end: '' });\n        }\n      }),\n      [onChange]\n    );\n\n    const commonProps = {\n      status,\n      placeholder,\n      readOnly,\n      required,\n      unit,\n      showDecimal,\n      numberOfDecimals,\n      showGroupSeparators,\n      min,\n      max,\n      variant\n    };\n\n    return (\n      <FormField\n        testId={testIds}\n        as='fieldset'\n        {...restProps}\n        ref={containerRef}\n        container={{ wrap: 'nowrap' }}\n        labelHidden={labelHidden}\n        labelAs='legend'\n        label={label}\n        disabled={disabled}\n        required={required}\n        readOnly={readOnly}\n        status={status}\n      >\n        <Flex container as={StyledRangeInputContainer}>\n          <NumberInput\n            testId={testIds.min}\n            {...commonProps}\n            value={state.start}\n            onChange={fromValue => {\n              onChange({ start: fromValue, end: value.end ?? '' });\n              dispatch({\n                type: 'start',\n                value: fromValue ?? ''\n              });\n            }}\n            onBlur={changedValue => {\n              dispatch({\n                type: 'start',\n                value: changedValue ?? ''\n              });\n              startValueRef.current = changedValue ?? '';\n              onChange({\n                start: changedValue ?? '',\n                end: state.end\n              });\n            }}\n            label={fromLabel}\n            aria-label={`${t('range_from_numeric') + (label ? ` - ${label}` : '')}`}\n            additionalInfo={fromAdditionalInfo}\n            autoFocus={autoFocus}\n            ref={startValueInputRef}\n          />\n          <NumberInput\n            testId={testIds.max}\n            {...commonProps}\n            value={state.end}\n            onChange={toValue => {\n              onChange({ start: value.start ?? '', end: toValue });\n              dispatch({\n                type: 'end',\n                value: toValue ?? ''\n              });\n            }}\n            onBlur={changedValue => {\n              dispatch({\n                type: 'end',\n                value: changedValue ?? ''\n              });\n              endValueRef.current = changedValue ?? '';\n              onChange({\n                start: state.start,\n                end: changedValue ?? ''\n              });\n            }}\n            label={toLabel}\n            aria-label={`${t('range_to_numeric') + (label ? ` - ${label}` : '')}`}\n            additionalInfo={toAdditionalInfo}\n            ref={endValueInputRef}\n          />\n        </Flex>\n      </FormField>\n    );\n  }\n);\n\nexport default withTestIds(NumberRangeInput, getNumberRangeTestIds);\n"]}