/**
 * Returns all valid focusable elements within a given ref.
 * @param focusablesRef The ref containing the element to search for focusable elements within.
 * @returns a list of valid focusable elements within the given ref.
 */
const getFocusables = (focusablesRef) => {
    if (!focusablesRef.current)
        return [];
    const selector = 'a, button, input, textarea, select, details, [tabindex]:not([tabindex="-1"])';
    return [...focusablesRef.current.querySelectorAll(selector)].filter(el => el instanceof HTMLElement &&
        !el.hasAttribute('disabled') &&
        el.getAttribute('tabindex') !== '-1' &&
        !el.closest('[inert]'));
};
export default getFocusables;
//# sourceMappingURL=getFocusables.js.map