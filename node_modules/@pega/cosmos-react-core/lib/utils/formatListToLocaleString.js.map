{"version":3,"file":"formatListToLocaleString.js","sourceRoot":"","sources":["../../src/utils/formatListToLocaleString.ts"],"names":[],"mappings":"AAEA;;;;;;;GAOG;AACH,MAAM,wBAAwB,GAAG,CAC/B,IAAc,EACd,CAAuC,EACvC,MAAc,EACd,EACE,KAAK,GAAG,IAAI,CAAC,MAAM,EACnB,SAAS,KAIP,EAAE,EACE,EAAE;IACV,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAExD,MAAM,QAAQ,GACZ,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAEvF,IAAI,SAAS,IAAI,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC;QAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC;IAElF,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACzE,CAAC,CAAC;AAEF,eAAe,wBAAwB,CAAC","sourcesContent":["import type { TranslationFunction, TranslationPack } from '../i18n';\n\n/**\n * Function generates string representation of the given list accordingly to localization rules of given locale.\n * @param list list of strings to format\n * @param t translation function used internally\n * @param locale locale tag to get the localization rules for\n * @param options formatting options\n * @returns\n */\nconst formatListToLocaleString = (\n  list: string[],\n  t: TranslationFunction<TranslationPack>,\n  locale: string,\n  {\n    count = list.length,\n    separator\n  }: {\n    count?: number;\n    separator?: string;\n  } = {}\n): string => {\n  const remainder = list.length ? count - list.length : 0;\n\n  const toFormat =\n    remainder > 0 ? [...list, t('more_count', [remainder], { count: remainder })] : list;\n\n  if (separator || !('ListFormat' in Intl)) return toFormat.join(separator ?? ', ');\n\n  return new Intl.ListFormat(locale, { style: 'long' }).format(toFormat);\n};\n\nexport default formatListToLocaleString;\n"]}