export const popoverMap = new WeakMap();
const getAllPopovers = (parent) => {
    const rootNode = parent.getRootNode();
    if (!(rootNode instanceof Document) && !(rootNode instanceof DocumentFragment))
        return [];
    const popoverTargets = [...parent.querySelectorAll('[data-popover-target]')];
    return popoverTargets.flatMap(el => {
        // False positive because popoverMap is exported.
        // eslint-disable-next-line sonarjs/no-empty-collection
        if (!popoverMap.has(el))
            return [];
        // eslint-disable-next-line sonarjs/no-empty-collection
        const pointerIds = popoverMap.get(el);
        const popovers = [...pointerIds].map(id => rootNode.querySelector(`[data-popover-id="${id.replace(/"/g, '\\"')}"]`));
        return popovers.flatMap(popover => (popover ? [popover, ...getAllPopovers(popover)] : []));
    });
};
export default getAllPopovers;
//# sourceMappingURL=getAllPopovers.js.map