/** @returns Throttled function that can be called at most once in given waitTime(ms). */
const throttle = (fn, waitTime) => {
    let paused = false;
    return function throttled(...args) {
        if (paused)
            return;
        paused = true;
        window.setTimeout(() => {
            fn.apply(this, args);
            paused = false;
        }, waitTime);
    };
};
export default throttle;
//# sourceMappingURL=throttle.js.map