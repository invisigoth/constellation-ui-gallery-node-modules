{"version":3,"file":"deepObjectComparison.js","sourceRoot":"","sources":["../../src/utils/deepObjectComparison.ts"],"names":[],"mappings":"AAAA,4EAA4E;AAC5E,MAAM,oBAAoB,GAAG,CAAC,MAAW,EAAE,MAAW,EAAW,EAAE;IACjE,gDAAgD;IAChD,IAAI,MAAM,KAAK,MAAM;QAAE,OAAO,IAAI,CAAC;IAEnC,gEAAgE;IAChE,IACE,OAAO,MAAM,KAAK,QAAQ;QAC1B,OAAO,MAAM,KAAK,QAAQ;QAC1B,MAAM,KAAK,IAAI;QACf,MAAM,KAAK,IAAI;QAEf,OAAO,KAAK,CAAC;IAEf,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAElC,8DAA8D;IAC9D,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM;QAAE,OAAO,KAAK,CAAC;IAEhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACxC,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACrB,0EAA0E;QAC1E,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;YAAE,OAAO,KAAK,CAAC;QAEvC,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;YAC1E,oHAAoH;YACpH,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;gBAAE,OAAO,KAAK,CAAC;YACpE,4EAA4E;SAC7E;aAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;KAC1E;IAED,0DAA0D;IAC1D,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,eAAe,oBAAoB,CAAC","sourcesContent":["/** Compares two objects by comparing each key value regardless of order. */\nconst deepObjectComparison = (valueA: any, valueB: any): boolean => {\n  // If the values are strictly equal, return true\n  if (valueA === valueB) return true;\n\n  // If the values are not objects and are not equal, return false\n  if (\n    typeof valueA !== 'object' ||\n    typeof valueB !== 'object' ||\n    valueA === null ||\n    valueB === null\n  )\n    return false;\n\n  const keysA = Object.keys(valueA);\n  const keysB = Object.keys(valueB);\n\n  // If the objects have different numbers of keys, return false\n  if (keysA.length !== keysB.length) return false;\n\n  for (let i = 0; i < keysA.length; i += 1) {\n    const key = keysA[i];\n    // If there is not a 1:1 mapping of keys between the objects, return false\n    if (!keysB.includes(key)) return false;\n\n    if (typeof valueA[key] === 'function' || typeof valueB[key] === 'function') {\n      // If the value of a given key is a function, and the functions are not equivalent between the objects, return false\n      if (valueA[key].toString() !== valueB[key].toString()) return false;\n      // If all checks have passed thus far, compare the next set of nested values\n    } else if (!deepObjectComparison(valueA[key], valueB[key])) return false;\n  }\n\n  // If all checks have passed, the objects are deeply equal\n  return true;\n};\n\nexport default deepObjectComparison;\n"]}