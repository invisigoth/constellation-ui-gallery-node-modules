{"version":3,"file":"sameOrigin.js","sourceRoot":"","sources":["../../src/utils/sameOrigin.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,MAAM,UAAU,GAAG,CACjB,EACE,QAAQ,EAAE,SAAS,EACnB,QAAQ,EAAE,SAAS,EACnB,IAAI,EAAE,KAAK,EACiC,EAC9C,EACE,QAAQ,EAAE,SAAS,EACnB,QAAQ,EAAE,SAAS,EACnB,IAAI,EAAE,KAAK,EACiC,EACrC,EAAE;IACX,IAAI,SAAS,KAAK,SAAS;QAAE,OAAO,KAAK,CAAC;IAC1C,IAAI,SAAS,KAAK,SAAS;QAAE,OAAO,KAAK,CAAC;IAE1C,IAAI,CAAC,KAAK,EAAE;QACV,IAAI,SAAS,KAAK,OAAO;YAAE,KAAK,GAAG,IAAI,CAAC;aACnC,IAAI,SAAS,KAAK,QAAQ;YAAE,KAAK,GAAG,KAAK,CAAC;KAChD;IAED,IAAI,CAAC,KAAK,EAAE;QACV,IAAI,SAAS,KAAK,OAAO;YAAE,KAAK,GAAG,IAAI,CAAC;aACnC,IAAI,SAAS,KAAK,QAAQ;YAAE,KAAK,GAAG,KAAK,CAAC;KAChD;IAED,OAAO,KAAK,KAAK,KAAK,CAAC;AACzB,CAAC,CAAC;AAEF,eAAe,UAAU,CAAC","sourcesContent":["/**\n * Checks if two URLs have the same origin.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#definition_of_an_origin Definition of an origin}\n */\nconst sameOrigin = (\n  {\n    protocol: protocolA,\n    hostname: hostnameA,\n    port: portA\n  }: Pick<URL, 'protocol' | 'hostname' | 'port'>,\n  {\n    protocol: protocolB,\n    hostname: hostnameB,\n    port: portB\n  }: Pick<URL, 'protocol' | 'hostname' | 'port'>\n): boolean => {\n  if (protocolA !== protocolB) return false;\n  if (hostnameA !== hostnameB) return false;\n\n  if (!portA) {\n    if (protocolA === 'http:') portA = '80';\n    else if (protocolA === 'https:') portA = '443';\n  }\n\n  if (!portB) {\n    if (protocolB === 'http:') portB = '80';\n    else if (protocolB === 'https:') portB = '443';\n  }\n\n  return portA === portB;\n};\n\nexport default sameOrigin;\n"]}