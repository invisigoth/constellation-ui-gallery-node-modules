{"version":3,"file":"debounce.js","sourceRoot":"","sources":["../../src/utils/debounce.ts"],"names":[],"mappings":"AAAA,yHAAyH;AACzH,MAAM,QAAQ,GAAG,CACf,EAAK,EACL,QAAgB,EACoB,EAAE;IACtC,IAAI,OAA2B,CAAC;IAEhC,OAAO,SAAS,SAAS,CAAY,GAAG,IAAI;QAC1C,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAE7B,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YAC/B,OAAO,GAAG,SAAS,CAAC;YACpB,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvB,CAAC,EAAE,QAAQ,CAAC,CAAC;IACf,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC","sourcesContent":["/** @returns Debounced function that runs only after waitTime(ms) has elapsed since the last time it was last invoked. */\nconst debounce = <F extends (...args: any[]) => any>(\n  fn: F,\n  waitTime: number\n): ((...args: Parameters<F>) => void) => {\n  let timeout: number | undefined;\n\n  return function debounced(this: any, ...args) {\n    window.clearTimeout(timeout);\n\n    timeout = window.setTimeout(() => {\n      timeout = undefined;\n      fn.apply(this, args);\n    }, waitTime);\n  };\n};\n\nexport default debounce;\n"]}