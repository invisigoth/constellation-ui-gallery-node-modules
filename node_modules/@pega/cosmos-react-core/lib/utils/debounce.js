/** @returns Debounced function that runs only after waitTime(ms) has elapsed since the last time it was last invoked. */
const debounce = (fn, waitTime) => {
    let timeout;
    return function debounced(...args) {
        window.clearTimeout(timeout);
        timeout = window.setTimeout(() => {
            timeout = undefined;
            fn.apply(this, args);
        }, waitTime);
    };
};
export default debounce;
//# sourceMappingURL=debounce.js.map