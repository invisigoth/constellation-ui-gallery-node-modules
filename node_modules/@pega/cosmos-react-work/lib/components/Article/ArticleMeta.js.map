{"version":3,"file":"ArticleMeta.js","sourceRoot":"","sources":["../../../src/components/Article/ArticleMeta.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAqB,OAAO,EAAE,MAAM,OAAO,CAAC;AAEnD,OAAO,EACL,YAAY,EACZ,eAAe,EAEf,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,IAAI,EACJ,kBAAkB,EAClB,OAAO,EACR,MAAM,yBAAyB,CAAC;AACjC,OAAO,KAAK,iBAAiB,MAAM,wEAAwE,CAAC;AAE5G,YAAY,CAAC,iBAAiB,CAAC,CAAC;AAWhC,MAAM,WAAW,GAAwC,CAAC,EACxD,QAAQ,EACR,aAAa,EACb,QAAQ,EACT,EAAE,EAAE;IACH,MAAM,CAAC,GAAG,OAAO,EAAE,CAAC;IACpB,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,EAAE;QAC7B,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,QAAQ,EAAE;YACZ,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtB;QAED,IAAI,aAAa,EAAE;YACjB,KAAK,CAAC,IAAI,CAAC,KAAC,eAAe,IAAC,KAAK,EAAE,aAAa,EAAE,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,GAAG,CAAC,CAAC;SACpF;QAED,IAAI,QAAQ,EAAE;YACZ,KAAK,CAAC,IAAI,CACR,MAAC,IAAI,IAAC,SAAS,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,aAC/C,MAAC,IAAI,kBACS,GAAG,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAC7C,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,aAE7C,KAAC,IAAI,IAAC,IAAI,EAAC,iBAAiB,GAAG,EAC/B,MAAC,IAAI,IAAC,OAAO,EAAC,WAAW,aACtB,QAAQ,CAAC,KAAK,EACf,KAAC,kBAAkB,cAAE,CAAC,CAAC,OAAO,CAAC,GAAsB,IAChD,IACF,EACP,MAAC,IAAI,kBACS,GAAG,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,EACnD,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,aAE7C,KAAC,IAAI,IAAC,IAAI,EAAC,mBAAmB,GAAG,EACjC,MAAC,IAAI,IAAC,OAAO,EAAC,WAAW,aACtB,QAAQ,CAAC,QAAQ,EAClB,KAAC,kBAAkB,cAAE,CAAC,CAAC,UAAU,CAAC,GAAsB,IACnD,IACF,KApB8C,OAAO,CAqBvD,CACR,CAAC;SACH;QAED,OAAO,KAAK,CAAC;IACf,CAAC,EAAE,CAAC,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;IAExC,OAAO,KAAC,QAAQ,IAAC,KAAK,EAAE,SAAS,GAAI,CAAC;AACxC,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import { FunctionComponent, useMemo } from 'react';\n\nimport {\n  registerIcon,\n  DateTimeDisplay,\n  DateTimeDisplayProps,\n  Flex,\n  Icon,\n  MetaList,\n  Text,\n  VisuallyHiddenText,\n  useI18n\n} from '@pega/cosmos-react-core';\nimport * as thumbsUpSolidIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/thumbs-up-solid.icon';\n\nregisterIcon(thumbsUpSolidIcon);\n\nexport interface ArticleMetaProps {\n  category?: string;\n  publishedDate?: DateTimeDisplayProps['value'];\n  feedback?: {\n    likes: number;\n    dislikes: number;\n  };\n}\n\nconst ArticleMeta: FunctionComponent<ArticleMetaProps> = ({\n  category,\n  publishedDate,\n  feedback\n}) => {\n  const t = useI18n();\n  const metaItems = useMemo(() => {\n    const items = [];\n    if (category) {\n      items.push(category);\n    }\n\n    if (publishedDate) {\n      items.push(<DateTimeDisplay value={publishedDate} variant='date' format='long' />);\n    }\n\n    if (feedback) {\n      items.push(\n        <Flex container={{ gap: 1, alignItems: 'center' }} key='likes'>\n          <Flex\n            aria-label={`${feedback.likes} ${t('likes')}`}\n            container={{ gap: 0.5, alignItems: 'center' }}\n          >\n            <Icon name='thumbs-up-solid' />\n            <Text variant='secondary'>\n              {feedback.likes}\n              <VisuallyHiddenText>{t('likes')}</VisuallyHiddenText>\n            </Text>\n          </Flex>\n          <Flex\n            aria-label={`${feedback.dislikes} ${t('dislikes')}`}\n            container={{ gap: 0.5, alignItems: 'center' }}\n          >\n            <Icon name='thumbs-down-solid' />\n            <Text variant='secondary'>\n              {feedback.dislikes}\n              <VisuallyHiddenText>{t('dislikes')}</VisuallyHiddenText>\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return items;\n  }, [category, publishedDate, feedback]);\n\n  return <MetaList items={metaItems} />;\n};\n\nexport default ArticleMeta;\n"]}