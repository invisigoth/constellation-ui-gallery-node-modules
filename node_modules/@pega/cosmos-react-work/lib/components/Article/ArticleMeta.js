import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo } from 'react';
import { registerIcon, DateTimeDisplay, Flex, Icon, MetaList, Text, VisuallyHiddenText, useI18n } from '@pega/cosmos-react-core';
import * as thumbsUpSolidIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/thumbs-up-solid.icon';
registerIcon(thumbsUpSolidIcon);
const ArticleMeta = ({ category, publishedDate, feedback }) => {
    const t = useI18n();
    const metaItems = useMemo(() => {
        const items = [];
        if (category) {
            items.push(category);
        }
        if (publishedDate) {
            items.push(_jsx(DateTimeDisplay, { value: publishedDate, variant: 'date', format: 'long' }));
        }
        if (feedback) {
            items.push(_jsxs(Flex, { container: { gap: 1, alignItems: 'center' }, children: [_jsxs(Flex, { "aria-label": `${feedback.likes} ${t('likes')}`, container: { gap: 0.5, alignItems: 'center' }, children: [_jsx(Icon, { name: 'thumbs-up-solid' }), _jsxs(Text, { variant: 'secondary', children: [feedback.likes, _jsx(VisuallyHiddenText, { children: t('likes') })] })] }), _jsxs(Flex, { "aria-label": `${feedback.dislikes} ${t('dislikes')}`, container: { gap: 0.5, alignItems: 'center' }, children: [_jsx(Icon, { name: 'thumbs-down-solid' }), _jsxs(Text, { variant: 'secondary', children: [feedback.dislikes, _jsx(VisuallyHiddenText, { children: t('dislikes') })] })] })] }, 'likes'));
        }
        return items;
    }, [category, publishedDate, feedback]);
    return _jsx(MetaList, { items: metaItems });
};
export default ArticleMeta;
//# sourceMappingURL=ArticleMeta.js.map