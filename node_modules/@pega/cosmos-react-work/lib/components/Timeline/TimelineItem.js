import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { isValidElement, useCallback, useRef, useState } from 'react';
import { ExpandCollapse, Grid, Icon, Status, useBreakpoint, FieldValueItem } from '@pega/cosmos-react-core';
import { StyledCard, StyledCardHeader, StyledTimelineIcon, StyledCardContent, StyledBulletWrapper, StyledToggleButton, StyledTime } from './Timeline.styles';
import { isFutureDate } from './utils';
const TimelineItem = ({ item: { date, title, icon, status, content }, timeFormat, prevItemDate, nextItemDate, currentTime }) => {
    const [collapsed, setCollapsed] = useState(true);
    const isSmallOrAbove = useBreakpoint('sm');
    const toggleCollapse = useCallback(() => setCollapsed(prevState => !prevState), []);
    const contentListRef = useRef(null);
    const isSMContentWidthOrAbove = useBreakpoint('sm', {
        breakpointRef: contentListRef
    });
    return (_jsxs("li", { children: [isSmallOrAbove && _jsx(StyledTime, { variant: timeFormat, value: date }), _jsx(StyledBulletWrapper, { hasIcon: !!icon, hasPrev: !!prevItemDate, hasNext: !!nextItemDate, isPrevFuture: isFutureDate(prevItemDate, currentTime), isNextFuture: isFutureDate(nextItemDate, currentTime), children: _jsx(StyledTimelineIcon, { container: { inline: true, alignItems: 'center', justify: 'center' }, children: icon && _jsx(Icon, { name: icon }) }) }), _jsxs("div", { children: [_jsx("div", { children: _jsx(StyledCard, { children: _jsxs(StyledCardHeader, { container: {
                                    cols: 'auto 1fr',
                                    alignContent: 'evenly',
                                    alignItems: 'center',
                                    gap: 0.5
                                }, sm: { container: { cols: 'auto 1fr auto' } }, children: [content && (_jsx(StyledToggleButton, { icon: true, variant: 'simple', onClick: toggleCollapse, collapsed: collapsed, "aria-expanded": !collapsed, compact: true, children: _jsx(Icon, { name: 'caret-down' }) })), _jsxs(Grid, { item: { colStart: '2', colEnd: '2' }, container: { rowGap: 0.25 }, children: [title, !isSmallOrAbove && (_jsxs(Grid, { container: {
                                                    cols: '1fr auto',
                                                    alignContent: 'evenly',
                                                    alignItems: 'center'
                                                }, children: [_jsx(StyledTime, { variant: 'time', value: date }), status && _jsx(Status, { variant: status.variant, children: status.children })] }))] }), isSmallOrAbove && status && (_jsx(Grid, { sm: { item: { colStart: '3', colEnd: '3' } }, children: _jsx(Status, { variant: status.variant, children: status.children }) }))] }) }) }), content && (_jsx(ExpandCollapse, { dimension: 'height', collapsed: collapsed, nullWhenCollapsed: true, children: _jsx(StyledCardContent, { children: isValidElement(content) ? (content) : (_jsx(Grid, { container: {
                                    gap: 1,
                                    cols: isSMContentWidthOrAbove
                                        ? `repeat(${content.length > 1 ? '2' : '1'}, minmax(16ch, auto) minmax(25%, 1fr))`
                                        : 'minmax(0, 1fr)'
                                }, ref: contentListRef, children: content.map(({ id, name, value, variant }) => {
                                    return (_jsx(FieldValueItem, { name: name, value: value, variant: isSmallOrAbove ? variant : 'stacked' }, id ?? name));
                                }) })) }) }))] })] }));
};
export default TimelineItem;
//# sourceMappingURL=TimelineItem.js.map