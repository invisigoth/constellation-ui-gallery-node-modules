import { FunctionComponent, MouseEventHandler, Ref } from 'react';
import { BaseProps, ButtonProps, FieldValueListProps, ForwardProps, InfoDialogProps, NoChildrenProp, OmitStrict } from '@pega/cosmos-react-core';
type InfoDialogSummaryHeading = Extract<InfoDialogProps['heading'], object>;
export interface GlimpseProps extends BaseProps, OmitStrict<InfoDialogProps, 'children'>, NoChildrenProp {
    /** The unique id for the operator. */
    id: string;
    /** Primary, secondary and avatar for the glimpse. */
    heading?: InfoDialogSummaryHeading;
    /** The set of field values to render in the list. */
    fields?: FieldValueListProps['fields'];
    /** Ref for the wrapping element. */
    ref?: Ref<HTMLDivElement>;
    /** Callback for click event on View profile button. Passing this will render View profile button */
    onViewProfile?: MouseEventHandler<HTMLButtonElement>;
    /** A URL location to navigate to. Passing an href will render View profile button as a link. */
    href?: ButtonProps['href'];
}
declare const Glimpse: FunctionComponent<GlimpseProps & ForwardProps>;
export default Glimpse;
//# sourceMappingURL=Glimpse.d.ts.map