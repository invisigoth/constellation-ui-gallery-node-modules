import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import styled, { css } from 'styled-components';
import { CardHeader, CardContent, CardFooter, Link, Text, StyledText, Actions, Flex, Tag, defaultThemeProp } from '@pega/cosmos-react-core';
import { StyledCard } from '@pega/cosmos-react-core/lib/components/Card/Card';
import { StyledCardHeader } from '@pega/cosmos-react-core/lib/components/Card/CardHeader';
import { StyledCardContent } from '@pega/cosmos-react-core/lib/components/Card/CardContent';
import { StyledCardFooter } from '@pega/cosmos-react-core/lib/components/Card/CardFooter';
import { StyledBareButton } from '@pega/cosmos-react-core/lib/components/Button/BareButton';
import ArticleMeta from '../Article/ArticleMeta';
const ArticleCard = styled(StyledCard)(({ theme: { base: { spacing, palette } } }) => {
    return css `
      &:not(:last-child) {
        border-block-end: 0.0625rem solid ${palette['border-line']};
        border-radius: 0;
        padding-block-end: ${spacing};
      }
      &&& {
        border-radius: 0;
        > ${StyledCardHeader} {
          padding-block-start: 0;
          padding-inline: 0;
        }
        > ${StyledCardContent}, > ${StyledCardFooter} {
          padding-inline: 0;
        }
        > ${StyledCardContent} {
          padding-block-end: ${spacing};
        }
        > ${StyledCardContent} > ${StyledText} {
          display: -webkit-box;
          -webkit-line-clamp: 3;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      }
    `;
});
export const StyledQuickFilters = styled.div(({ theme }) => {
    const { base: { spacing } } = theme;
    return css `
    ${StyledBareButton} {
      margin-inline-start: 0;
      margin-block-start: ${spacing};
    }
  `;
});
StyledQuickFilters.defaultProps = defaultThemeProp;
const ArticleSummary = (props) => {
    const { articleId, href, title, abstract, onTitleClick, primaryActions, meta, quickFilters, onQuickFilterClick, ...restProps } = props;
    return (_jsxs(ArticleCard, { as: 'li', role: 'article', ...restProps, children: [_jsxs(CardHeader, { container: { alignItems: 'start', justify: 'between' }, children: [_jsx(Link, { href: href ?? '/', onClick: onTitleClick, children: title }), primaryActions?.length && _jsx(Actions, { items: primaryActions })] }), _jsx(CardContent, { children: _jsx(Text, { children: abstract }) }), _jsxs(CardFooter, { children: [meta && _jsx(ArticleMeta, { ...meta }), quickFilters && quickFilters.length > 0 && (_jsx(Flex, { container: { gap: 0.5, pad: [0.5, undefined], wrap: 'wrap' }, item: {
                            grow: 1,
                            basis: '100%'
                        }, as: StyledQuickFilters, children: quickFilters.map(({ id, name }) => (_jsx(Tag, { onClick: onQuickFilterClick ? e => onQuickFilterClick?.({ id, name }, e) : undefined, children: `#${name}` }))) }))] })] }, articleId));
};
export default ArticleSummary;
//# sourceMappingURL=ArticleSummary.js.map