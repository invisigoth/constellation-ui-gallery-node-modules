{"version":3,"file":"ArticleList.types.js","sourceRoot":"","sources":["../../../src/components/ArticleList/ArticleList.types.ts"],"names":[],"mappings":"","sourcesContent":["import { MouseEvent, MouseEventHandler } from 'react';\n\nimport {\n  Action,\n  BaseProps,\n  ComboBoxProps,\n  OmitStrict,\n  RequireAtLeastOne,\n  SearchInputProps\n} from '@pega/cosmos-react-core';\n\nimport { ArticleMetaProps } from '../Article/ArticleMeta';\n\nexport interface ArticleSummaryProps extends BaseProps {\n  /** Unique id of article */\n  articleId: string;\n  /** URL or DOM id to navigate to. This will render the nav item as a link. */\n  href?: string;\n  /** Article title */\n  title: string;\n  /** Article content */\n  abstract: string;\n  /** Callback fired when article title is clicked */\n  onTitleClick?: (id?: string, event?: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) => void;\n  /** Primary actions which needs to be displayed with an icon */\n  primaryActions?: Action[];\n  /** A list of elements to be rendered within a MetaList. */\n  meta?: ArticleMetaProps;\n  /** Quick filters to filter articles */\n  quickFilters?: QuickFilter[];\n  /** callback fired when quick filter is clicked */\n  onQuickFilterClick?: ArticleListProps['onQuickFilterClick'];\n}\n\nexport interface Articles {\n  /** List of articles */\n  articles: ArticleSummaryProps[];\n  /** count of articles */\n  count?: number;\n  /** Props related to the Search Input. */\n  searchInput: OmitStrict<\n    SearchInputProps,\n    | 'placeholder'\n    | 'onSearchSubmit'\n    | 'searchResults'\n    | 'recentSearches'\n    | 'advancedSearchLink'\n    | 'resultsPopover'\n  >;\n  /** Props related to the Category Input. */\n  category?: OmitStrict<\n    ComboBoxProps,\n    | 'id'\n    | 'labelHidden'\n    | 'required'\n    | 'disabled'\n    | 'readOnly'\n    | 'status'\n    | 'info'\n    | 'actions'\n    | 'additionalInfo'\n  >;\n  /** Props related to the SortBy Input. */\n  sortBy?: OmitStrict<\n    ComboBoxProps,\n    | 'id'\n    | 'labelHidden'\n    | 'required'\n    | 'disabled'\n    | 'readOnly'\n    | 'status'\n    | 'info'\n    | 'mode'\n    | 'actions'\n    | 'additionalInfo'\n    | 'onChange'\n    | 'value'\n  >;\n  /** Callback fired when clear button is clicked */\n  onClearClick?: MouseEventHandler<HTMLButtonElement>;\n  /** Quick filters to filter articles */\n  quickFilters?: QuickFilter[];\n  /** Callback fired when applied quick filter is removed */\n  handleQuickFilterRemove?: (id: string) => void;\n  /** Prop to enable show / hide results */\n  showResults?: boolean;\n}\n\nexport interface ArticleListHeaderProps {\n  /** Title of article list */\n  title: string;\n  /** Article list header icon */\n  icon?: string;\n  /** Actions which needs to be displayed with an icon */\n  actions?: Action[];\n}\n\nexport type ArticleListProps = RequireAtLeastOne<\n  {\n    /** Props related to article list header */\n    header?: ArticleListHeaderProps;\n    /** Data of suggested articles */\n    suggested?: Pick<Articles, 'articles' | 'count'>;\n    /** Data of followed articles */\n    followed?: Articles;\n    /** Data of search articles */\n    search?: Articles;\n    /** current active tab whose list has to be rendered */\n    activeTab: string;\n    /** Callback fired when tab is clicked */\n    onTabClick?: (name: string, event?: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) => void;\n    /**\n     * Optionally renders an indeterminate progress indicator while articles are being fetched.\n     * @default false\n     */\n    loading?: boolean;\n    /**\n     * Optionally renders an indeterminate progress indicator while progressively fetching articles\n     * @default false\n     */\n    loadingMore?: boolean;\n    /** callback fired when quick filter is clicked */\n    onQuickFilterClick?: (\n      quickFilterParam: QuickFilter,\n      event: MouseEvent<HTMLButtonElement | HTMLAnchorElement>\n    ) => void;\n    /** Callback to fetch more rows */\n    onLoadMore?: () => void;\n  },\n  'suggested' | 'followed' | 'search'\n>;\n\nexport interface QuickFilter {\n  /** Unique id of quick Filter */\n  id: string;\n  /** Name of quick Filter */\n  name: string;\n}\n\nexport type ArticleListTabId = 'Suggested' | 'Followed' | 'Search';\n"]}