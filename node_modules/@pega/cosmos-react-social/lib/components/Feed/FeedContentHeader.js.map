{"version":3,"file":"FeedContentHeader.js","sourceRoot":"","sources":["../../../src/components/Feed/FeedContentHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC, MouseEvent, useContext, useEffect, useRef } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport {\n  Avatar,\n  Button,\n  DateTimeDisplay,\n  defaultThemeProp,\n  Flex,\n  Icon,\n  MenuButton,\n  MetaList,\n  ModalMethods,\n  StyledSecondary,\n  SummaryItem,\n  Text,\n  Tooltip,\n  useConfiguration,\n  useElement,\n  useI18n,\n  useModalManager\n} from '@pega/cosmos-react-core';\nimport BareButton from '@pega/cosmos-react-core/lib/components/Button/BareButton';\nimport { parseToDate } from '@pega/cosmos-react-core/lib/components/DateTime/Input/utils';\nimport { formatDateTime } from '@pega/cosmos-react-core/lib/components/DateTime/utils';\nimport { formatListToLocaleString } from '@pega/cosmos-react-core/lib/utils';\n\nimport { FeedContext } from './Feed.context';\nimport FeedModalList from './FeedModalList';\nimport FeedButton from './FeedButton';\nimport { FeedContentHeaderProps, FeedModalListProps } from './Feed.types';\n\nconst StyledFeedContentHeader = styled.div(({ theme }) => {\n  return css`\n    margin-block-end: ${theme.base.spacing};\n    column-gap: ${theme.base.spacing};\n\n    ${StyledSecondary} {\n      ${FeedButton} {\n        /* Negative margin needed to align the icon with the author name on the line above. */\n        margin-inline-start: calc(-0.75 * ${theme.base.spacing});\n      }\n    }\n  `;\n});\n\nStyledFeedContentHeader.defaultProps = defaultThemeProp;\n\nconst FeedContentHeader: FC<FeedContentHeaderProps> = (props: FeedContentHeaderProps) => {\n  const {\n    variant,\n    id,\n    fullname,\n    username,\n    postTimestamp,\n    content,\n    avatarSrc,\n    icon,\n    userStatus,\n    postType,\n    postContext,\n    recipients = [],\n    recipientsCount = 0,\n    menuItems,\n    edited,\n    editTimestamp,\n    recipientsLoading,\n    onEditSubmit,\n    onLoadMoreRecipients,\n    onRecipientInteraction,\n    onUserClick,\n    setEditMode\n  } = props;\n\n  const { userInfo: loggedInUser } = useContext(FeedContext);\n  const t = useI18n();\n  const { locale } = useConfiguration();\n  const { create } = useModalManager();\n\n  const recipientsModalRef = useRef<ModalMethods<FeedModalListProps>>();\n  const [postTimestampEl, setPostTimestampEl] = useElement<HTMLSpanElement>();\n  const [editTimestampEl, setEditTimestampEl] = useElement<HTMLSpanElement>();\n\n  const timestamps = [\n    <>\n      <DateTimeDisplay ref={setPostTimestampEl} value={postTimestamp} variant='relative' />\n      {postTimestamp && (\n        <Tooltip target={postTimestampEl}>\n          {formatDateTime(parseToDate(postTimestamp), {\n            t,\n            locale,\n            format: 'short',\n            variant: 'datetime',\n            timeZone: loggedInUser.timeZone\n          })}\n        </Tooltip>\n      )}\n    </>\n  ];\n\n  if (edited) {\n    timestamps.push(\n      <>\n        <Text ref={setEditTimestampEl} variant='secondary'>\n          {t('edited', [<DateTimeDisplay value={editTimestamp} variant='relative' />])}\n        </Text>\n        {editTimestamp && (\n          <Tooltip target={editTimestampEl}>\n            {formatDateTime(parseToDate(editTimestamp), {\n              t,\n              locale,\n              format: 'short',\n              variant: 'datetime',\n              timeZone: loggedInUser.timeZone\n            })}\n          </Tooltip>\n        )}\n      </>\n    );\n  }\n\n  const userVisual = (\n    <Avatar\n      name={fullname}\n      size={variant === 'post' ? 'l' : 'm'}\n      imageSrc={avatarSrc}\n      icon={icon}\n      status={userStatus}\n    />\n  );\n\n  const recipientsList = recipients.map(x => x.primary);\n\n  useEffect(() => {\n    if (recipients.length) {\n      recipientsModalRef.current?.update({\n        count: recipientsCount,\n        heading: t('feed_recipients'),\n        listItems: recipients,\n        onLoadMore: onLoadMoreRecipients,\n        loading: recipientsLoading\n      });\n    }\n  }, [recipientsCount, recipients, onLoadMoreRecipients, recipientsLoading]);\n\n  return (\n    <SummaryItem\n      as={StyledFeedContentHeader}\n      visual={\n        onUserClick ? (\n          <BareButton\n            onClick={(event: MouseEvent) => {\n              onUserClick?.({ id, username }, event);\n            }}\n          >\n            {userVisual}\n          </BareButton>\n        ) : (\n          userVisual\n        )\n      }\n      primary={\n        <div>\n          {onUserClick ? (\n            <Button\n              variant='text'\n              onClick={(event: MouseEvent) => {\n                onUserClick?.({ id, username }, event);\n              }}\n            >\n              <Text variant='h3'>{fullname}</Text>\n            </Button>\n          ) : (\n            <Text variant='h3'>{fullname}</Text>\n          )}\n          {postContext && <Text variant='primary'> {t('feed_context', [postContext])}</Text>}\n        </div>\n      }\n      secondary={\n        <Flex container={{ gap: 0.5, alignItems: 'center' }}>\n          {postType === 'private' && (\n            <Button\n              variant='simple'\n              as={FeedButton}\n              icon\n              compact\n              onClick={\n                recipients.length\n                  ? () => {\n                      if (recipientsCount > 2) {\n                        recipientsModalRef.current = create(FeedModalList, {\n                          count: recipientsCount,\n                          heading: t('feed_recipients'),\n                          listItems: recipients,\n                          onLoadMore: onLoadMoreRecipients,\n                          loading: recipientsLoading\n                        });\n                      }\n                    }\n                  : onRecipientInteraction\n              }\n              onFocus={onRecipientInteraction}\n              onMouseOver={onRecipientInteraction}\n              aria-label={`${t('feed_private_post')} ${t(\n                'feed_recipients'\n              )} ${formatListToLocaleString(recipientsList.slice(0, 2), t, locale, {\n                count: recipientsCount\n              })}`}\n              label={`${t('feed_private_post')}:\\n${\n                formatListToLocaleString(recipientsList.slice(0, 2), t, locale, {\n                  count: recipientsCount,\n                  separator: '\\n'\n                }) || t('feed_private_post')\n              }`}\n            >\n              <Icon name='lock-closed-solid' />\n            </Button>\n          )}\n          <MetaList items={timestamps} />\n        </Flex>\n      }\n      actions={\n        menuItems ? (\n          <MenuButton\n            text={t('feed_post_actions_menu')}\n            menu={{\n              items:\n                onEditSubmit && typeof content === 'string' && username === loggedInUser.username\n                  ? [\n                      {\n                        primary: t('edit'),\n                        id: 'edit',\n                        onClick: () => setEditMode(true)\n                      },\n                      ...menuItems\n                    ]\n                  : menuItems\n            }}\n            icon='more'\n            iconOnly\n            variant='simple'\n          />\n        ) : undefined\n      }\n    />\n  );\n};\n\nexport default FeedContentHeader;\n"]}