{"version":3,"file":"FeedReplyInput.js","sourceRoot":"","sources":["../../../src/components/Feed/FeedReplyInput.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAM,MAAM,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC9C,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAgB,UAAU,EAAE,MAAM,yBAAyB,CAAC;AAEnG,OAAO,KAAK,QAAQ,MAAM,6DAA6D,CAAC;AACxF,OAAO,KAAK,aAAa,MAAM,mEAAmE,CAAC;AAGnG,OAAO,eAAe,MAAM,mBAAmB,CAAC;AAEhD,YAAY,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;AAEtC,MAAM,CAAC,MAAM,yBAAyB,GAAG,MAAM,CAAC,GAAG,CAAA,EAAE,CAAC;AAEtD,yBAAyB,CAAC,YAAY,GAAG,gBAAgB,CAAC;AAE1D,MAAM,cAAc,GAA2C,CAC7D,KAAyC,EACzC,EAAE;IACF,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;IACvF,MAAM,MAAM,GAAG,MAAM,EAAuB,CAAC;IAC7C,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,UAAU,EAAkB,CAAC;IAEjE,SAAS,CAAC,GAAG,EAAE;QACb,aAAa,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,OAAO,CACL,KAAC,yBAAyB,IAAC,GAAG,EAAE,aAAa,KAAM,SAAS,YAC1D,KAAC,eAAe,IACd,OAAO,EAAC,OAAO,KACX,EAAE,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAE,EAC/C,aAAa,EAAE,UAAU,EACzB,MAAM,EAAE,MAAM,GACd,GACwB,CAC7B,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import { FC, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { registerIcon, defaultThemeProp, ForwardProps, useElement } from '@pega/cosmos-react-core';\nimport { RichTextEditorState } from '@pega/cosmos-react-rte';\nimport * as sendIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/send.icon';\nimport * as paperClipIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/paper-clip.icon';\n\nimport { FeedReplyInputProps } from './Feed.types';\nimport FeedInputRegion from './FeedInputRegion';\n\nregisterIcon(sendIcon, paperClipIcon);\n\nexport const StyledReplyInputContainer = styled.div``;\n\nStyledReplyInputContainer.defaultProps = defaultThemeProp;\n\nconst FeedReplyInput: FC<ForwardProps & FeedReplyInputProps> = (\n  props: ForwardProps & FeedReplyInputProps\n) => {\n  const { id, attachments, onFilesAdded, onSubmit, onSetInputRef, ...restProps } = props;\n  const rteRef = useRef<RichTextEditorState>();\n  const [newReplyEl, setNewReplyEl] = useElement<HTMLDivElement>();\n\n  useEffect(() => {\n    onSetInputRef?.({ ref: rteRef });\n  }, [rteRef]);\n\n  return (\n    <StyledReplyInputContainer ref={setNewReplyEl} {...restProps}>\n      <FeedInputRegion\n        variant='reply'\n        {...{ id, attachments, onFilesAdded, onSubmit }}\n        inputRegionEl={newReplyEl}\n        rteRef={rteRef}\n      />\n    </StyledReplyInputContainer>\n  );\n};\n\nexport default FeedReplyInput;\n"]}