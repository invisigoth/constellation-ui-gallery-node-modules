import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useRef } from 'react';
import styled from 'styled-components';
import { registerIcon, defaultThemeProp, useElement, useAfterInitialEffect } from '@pega/cosmos-react-core';
import * as timesIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/times.icon';
import * as paperClipIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/paper-clip.icon';
import FeedNewPostTypeMenu from './FeedNewPostTypeMenu';
import FeedInputRegion from './FeedInputRegion';
registerIcon(timesIcon, paperClipIcon);
export const StyledFeedNewPost = styled.div ``;
StyledFeedNewPost.defaultProps = defaultThemeProp;
const FeedNewPost = (props) => {
    const { id, attachments = [], onSubmit, onFilesAdded, autoFocus, recipients, onRecipientSearch, ...restProps } = props;
    const rteRef = useRef();
    const [postType, setPostType] = useState('post');
    const [resetPostTypeMenu, setResetPostTypeMenu] = useState(false);
    const [selectedRecipients, setSelectedRecipients] = useState([]);
    const [newPostEl, setNewPostEl] = useElement();
    useAfterInitialEffect(() => {
        if (postType === 'post') {
            rteRef.current?.focus();
        }
        if (postType !== 'private') {
            setSelectedRecipients([]);
        }
    }, [postType]);
    return (_jsxs(StyledFeedNewPost, { ref: setNewPostEl, ...restProps, children: [onRecipientSearch && (_jsx(FeedNewPostTypeMenu, { recipients: recipients || [], onSetPostType: setPostType, onSelectedRecipientsUpdate: setSelectedRecipients, onRecipientSearch: onRecipientSearch, reset: resetPostTypeMenu, onReset: () => setResetPostTypeMenu(false) })), _jsx(FeedInputRegion, { variant: 'post', ...{ id, attachments, onFilesAdded, onSubmit }, inputRegionEl: newPostEl, rteRef: rteRef, selectedRecipients: selectedRecipients })] }));
};
export default FeedNewPost;
//# sourceMappingURL=FeedNewPost.js.map