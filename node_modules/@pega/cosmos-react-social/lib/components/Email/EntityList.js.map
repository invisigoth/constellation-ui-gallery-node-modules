{"version":3,"file":"EntityList.js","sourceRoot":"","sources":["../../../src/components/Email/EntityList.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  forwardRef,\n  FunctionComponent,\n  PropsWithoutRef,\n  useState,\n  MouseEvent,\n  useEffect,\n  useImperativeHandle\n} from 'react';\n\nimport {\n  ForwardProps,\n  Text,\n  Flex,\n  Icon,\n  Card,\n  CardHeader,\n  CardContent,\n  useScrollToggle,\n  useElement,\n  useOuterEvent,\n  EmptyState,\n  useConsolidatedRef\n} from '@pega/cosmos-react-core';\n\nimport ContextMenuPopover from './ContextMenuPopover';\nimport { StyledEntityList } from './Email.styles';\nimport EmailEntity from './EmailEntity';\nimport { ContextMenuProps, EntityListProps, TargetProps } from './Email.types';\n\nconst EntityList: FunctionComponent<EntityListProps & ForwardProps> = forwardRef(\n  function EntityList(\n    { content, header, contextMenu }: PropsWithoutRef<EntityListProps>,\n    ref: EntityListProps['ref']\n  ) {\n    const [popoverOpen, setPopoverOpen] = useState(false);\n    const [currentTarget, setCurrentTarget] = useState<TargetProps | undefined>();\n    const { disableScroll, enableScroll } = useScrollToggle();\n    // Only way to set this is through imperative handle\n    const [contextMenuItems, setContextMenuItems] = useState<ContextMenuProps['items']>([]);\n    const [contextMenuLoading, setContextMenuLoading] = useState<boolean>(false);\n    const [popoverEl, setPopoverEl] = useElement<HTMLDivElement>();\n    const popoverRef = useConsolidatedRef(setPopoverEl, contextMenu?.popoverRef);\n\n    useOuterEvent('mousedown', [popoverEl], () => {\n      if (popoverOpen) setPopoverOpen(false);\n    });\n\n    useImperativeHandle(contextMenu?.handle, () => ({\n      setItems: (ctxMenuItems: ContextMenuProps['items']) => {\n        setContextMenuItems(ctxMenuItems || []);\n      },\n      setLoading(loading) {\n        setContextMenuLoading(loading);\n      },\n      setOpen(visible) {\n        setPopoverOpen(visible);\n      }\n    }));\n\n    // Handler for right click\n    const onContextMenu = (e: MouseEvent<HTMLDivElement>) => {\n      if (e.target instanceof HTMLElement && e.target.textContent?.trim()) {\n        setCurrentTarget({\n          targetNode: e.target,\n          cursorPosition: {\n            x: e.pageX - window.scrollX,\n            y: e.pageY - window.scrollY\n          }\n        });\n        contextMenu?.onContextMenu(e);\n      }\n    };\n\n    const onItemClick: ContextMenuProps['onItemClick'] = (selectedValue: {\n      fieldName: string;\n      fieldValue: string;\n    }) => {\n      setPopoverOpen(false);\n      contextMenu?.onItemClick(selectedValue);\n    };\n\n    const fields = content.map(data => {\n      return data.value\n        ? {\n            ...data,\n            value: (\n              // Attach the handler only when context menu is enabled\n              <Flex container={{ gap: 0.5, wrap: 'wrap' }} onContextMenu={onContextMenu}>\n                {data.value.map(entityObject => {\n                  return <EmailEntity key={entityObject.id} entity={entityObject.entity} />;\n                })}\n              </Flex>\n            )\n          }\n        : data;\n    });\n\n    useEffect(() => {\n      if (popoverOpen) disableScroll();\n      else enableScroll();\n    }, [popoverOpen]);\n\n    return (\n      <Card ref={ref}>\n        {header && (\n          <CardHeader container={{ alignItems: 'center', gap: 1 }}>\n            <Icon name={header.icon} />\n            <Text variant='h3'>{header.text}</Text>\n          </CardHeader>\n        )}\n        {content.length > 0 ? (\n          <CardContent>\n            <StyledEntityList fields={fields} variant='stacked' />\n            {contextMenu && currentTarget && (\n              <ContextMenuPopover\n                ref={popoverRef}\n                cursorPosition={currentTarget?.cursorPosition}\n                contextMenu={{\n                  ...contextMenu,\n                  items: contextMenuItems,\n                  loading: contextMenuLoading,\n                  onItemClick\n                }}\n                targetNode={currentTarget.targetNode}\n                show={popoverOpen}\n              />\n            )}\n          </CardContent>\n        ) : (\n          <EmptyState />\n        )}\n      </Card>\n    );\n  }\n);\n\nexport default EntityList;\n"]}