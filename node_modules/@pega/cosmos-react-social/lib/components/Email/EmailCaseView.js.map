{"version":3,"file":"EmailCaseView.js","sourceRoot":"","sources":["../../../src/components/Email/EmailCaseView.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC, PropsWithoutRef, useCallback, useState, useMemo, useRef } from 'react';\n\nimport {\n  Button,\n  Drawer,\n  Flex,\n  ForwardProps,\n  Icon,\n  useBreakpoint,\n  useDirection,\n  useI18n,\n  Text\n} from '@pega/cosmos-react-core';\nimport UtilitiesSummary from '@pega/cosmos-react-work/lib/components/CaseView/UtilitiesSummary';\nimport { StyledCaseDrawerContent } from '@pega/cosmos-react-work';\nimport { StyledPageIcon } from '@pega/cosmos-react-core/lib/components/PageTemplates/PageTemplates';\n\nimport {\n  StyledEmailCaseViewColumns,\n  StyledExpandedUtilities,\n  StyledUtilitiesContainer,\n  StyledCollapsedUtilitiesToggle,\n  StyledExpandedUtilitiesToggle,\n  StyledDrawerUtilitiesToggle,\n  StyledEmailCaseViewDrawer,\n  StyledEmailCaseViewHeader,\n  StyledEmailCaseViewContainer\n} from './Email.styles';\nimport { EmailCaseViewProps } from './Email.types';\n\nconst EmailCaseView: FC<EmailCaseViewProps & ForwardProps> = ({\n  header,\n  content,\n  banners,\n  utilities,\n  utilitiesSummaryItems,\n  defaultUtilitiesExpanded,\n  ...restProps\n}: PropsWithoutRef<EmailCaseViewProps>) => {\n  const direction = useDirection();\n  const t = useI18n();\n\n  const emailCaseRef = useRef<HTMLDivElement>(null);\n  const [showExpandedUtilities, setShowExpandedUtilities] = useState(\n    defaultUtilitiesExpanded || false\n  );\n\n  const isMediumOrAbove = useBreakpoint('md', { breakpointRef: emailCaseRef });\n\n  const utilitiesIcon = showExpandedUtilities\n    ? `move-${direction.end}-solid`\n    : `move-${direction.start}-solid`;\n\n  const onToggleUtilities = useCallback((e: KeyboardEvent | MouseEvent) => {\n    if (e.type === 'keydown' && (e as KeyboardEvent).key !== 'Enter') {\n      return;\n    }\n\n    setShowExpandedUtilities(prevState => !prevState);\n  }, []);\n\n  const expandedUtilities = useMemo(() => {\n    if (!utilities) {\n      return null;\n    }\n\n    const largeScreenUtility = (\n      <>\n        {showExpandedUtilities && (\n          <Button\n            variant='simple'\n            icon\n            onClick={onToggleUtilities}\n            as={StyledExpandedUtilitiesToggle}\n            label={t(showExpandedUtilities ? 'collapse_utilities_panel' : 'expand_utilities_panel')}\n          >\n            <Icon name={utilitiesIcon} />\n          </Button>\n        )}\n        <Flex\n          as={StyledExpandedUtilities}\n          container={{ direction: 'column', gap: 2 }}\n          showExpandedUtilities={showExpandedUtilities}\n        >\n          {utilities}\n        </Flex>\n      </>\n    );\n\n    const smallScreenUtilities = (\n      <Drawer\n        as={StyledEmailCaseViewDrawer}\n        open={showExpandedUtilities}\n        position='fixed'\n        placement={direction.end}\n        shadow\n        nullWhenClosed\n      >\n        <Flex as={StyledCaseDrawerContent} container={{ direction: 'column', gap: 2 }}>\n          <Flex container={{ justify: 'end' }}>\n            <Button\n              variant='simple'\n              icon\n              onClick={onToggleUtilities}\n              as={StyledDrawerUtilitiesToggle}\n              label={t('collapse_utilities_panel')}\n            >\n              <Icon name={`move-${direction.end}-solid`} />\n            </Button>\n          </Flex>\n          {utilities}\n        </Flex>\n      </Drawer>\n    );\n\n    return isMediumOrAbove ? largeScreenUtility : smallScreenUtilities;\n  }, [isMediumOrAbove, onToggleUtilities, showExpandedUtilities, utilities]);\n\n  return (\n    <StyledEmailCaseViewContainer {...restProps} ref={emailCaseRef}>\n      {header && (\n        <Flex\n          container={{ alignItems: 'center', pad: [0, 0, 0, 2], gap: 1 }}\n          as={StyledEmailCaseViewHeader}\n        >\n          {header.icon && (\n            <StyledPageIcon container={{ alignItems: 'center', justify: 'center' }}>\n              <Icon name={header.icon} />\n            </StyledPageIcon>\n          )}\n          <Text variant='h1'>{header.title}</Text>\n        </Flex>\n      )}\n      <Flex container={{ gap: 2 }} as={StyledEmailCaseViewColumns} hasHeader={!!header}>\n        <Flex container={{ gap: 1, direction: 'column' }} item={{ grow: 1 }}>\n          {banners && <div>{banners}</div>}\n          {content && <div>{content}</div>}\n        </Flex>\n\n        {(utilities || utilitiesSummaryItems) && (\n          <Flex\n            container={{ direction: 'column', alignItems: 'end', gap: 2 }}\n            as={StyledUtilitiesContainer}\n            showExpandedUtilities={showExpandedUtilities}\n          >\n            {expandedUtilities}\n            {!showExpandedUtilities && (\n              <Button\n                variant='simple'\n                icon\n                onClick={onToggleUtilities}\n                as={StyledCollapsedUtilitiesToggle}\n                aria-expanded={showExpandedUtilities ? 'true' : 'false'}\n                label={t(\n                  showExpandedUtilities ? 'collapse_utilities_panel' : 'expand_utilities_panel'\n                )}\n              >\n                <Icon name={utilitiesIcon} />\n              </Button>\n            )}\n\n            {!showExpandedUtilities &&\n              utilitiesSummaryItems &&\n              utilitiesSummaryItems.length > 0 && (\n                <UtilitiesSummary items={utilitiesSummaryItems} />\n              )}\n          </Flex>\n        )}\n      </Flex>\n    </StyledEmailCaseViewContainer>\n  );\n};\n\nexport default EmailCaseView;\n"]}