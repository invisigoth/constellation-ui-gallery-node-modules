import { FunctionComponent, Ref } from 'react';
import { ForwardProps } from '@pega/cosmos-react-core';
import { ChatComposerProps } from './ChatComposer';
export declare const StyledSuggestedReplyHeader: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledSuggestedReplyContent: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledReply: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledRepliesAction: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledNotification: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledSuggestedReplyIcon: import("styled-components").StyledComponent<"svg", import("styled-components").DefaultTheme, {
    suggestedReplyCollapsed?: boolean | undefined;
}, never>;
export interface SuggestedReply {
    /** Id for this suggested reply */
    id: string;
    /** Suggested reply message */
    message: string;
    /** Confidence of this suggested reply */
    confidence: number;
}
export interface SuggestedReplyPickerProps extends Pick<ChatComposerProps, 'onSend' | 'maxLength'> {
    /** ref to the element */
    ref?: Ref<HTMLDivElement>;
    /** Suggested replies */
    replies?: SuggestedReply[];
    /** Id of the current reply */
    currentReplyId?: SuggestedReply['id'];
    /** Fired when user clicks on left or right buttons
     *  @param id Id of the new reply
     */
    onReplyChange: (id: SuggestedReply['id']) => void;
    /** Current state of the panel */
    collapsed: boolean;
    /** Callback for expand or collapse click */
    onExpandCollapse: () => void;
    /** Callback for the event when a suggested reply is selected */
    onSelect: (suggestedReply: SuggestedReply) => void;
    /** Show notification on picker header */
    showNotification?: boolean;
}
declare const SuggestedReplyPicker: FunctionComponent<SuggestedReplyPickerProps & ForwardProps>;
export default SuggestedReplyPicker;
//# sourceMappingURL=SuggestedReplyPicker.d.ts.map