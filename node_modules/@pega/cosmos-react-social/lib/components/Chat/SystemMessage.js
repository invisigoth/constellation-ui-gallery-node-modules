import { jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { rgba } from 'polished';
import { Flex, tryCatch, defaultThemeProp, useI18n } from '@pega/cosmos-react-core';
export const StyledSystemMessage = styled.li(({ theme: { base: { palette: { 'foreground-color': foregroundColor }, transparency: { 'transparent-3': foregroundAlpha }, colors: { blue: { medium } }, spacing } }, variant }) => {
    const systemMessageForeGroundColor = variant === 'primary' ? medium : tryCatch(() => rgba(foregroundColor, foregroundAlpha));
    return css `
      color: ${systemMessageForeGroundColor};
      font-size: 0.75rem;
      padding: 0 0 calc(2 * ${spacing});

      :last-child {
        padding: 0;
      }
      ${variant === 'primary' &&
        css `
        text-transform: uppercase;
        font-weight: bold;
        ::before,
        ::after {
          display: inline-flex;
          content: '';
          border-top: 0.0625rem solid ${systemMessageForeGroundColor};
          flex-grow: 1;
          min-width: 1.5rem;
        }
        ::before {
          margin-inline-end: ${spacing};
        }
        ::after {
          margin-inline-start: ${spacing};
        }
      `}
    `;
});
StyledSystemMessage.defaultProps = defaultThemeProp;
const SystemMessage = forwardRef(function SystemMessage(props, ref) {
    const { message, timestamp, variant = 'secondary', ...restProps } = props;
    const t = useI18n();
    const ariaLabel = timestamp === undefined ? `${message}` : t('chat_message_at_timestamp', [message, timestamp]);
    return (_jsxs(Flex, { ref: ref, as: StyledSystemMessage, container: {
            alignItems: 'center',
            justify: 'center'
        }, item: {
            shrink: 0
        }, variant: variant, "aria-label": ariaLabel, ...restProps, children: [timestamp && `${timestamp}: `, " ", message] }));
});
export default SystemMessage;
//# sourceMappingURL=SystemMessage.js.map