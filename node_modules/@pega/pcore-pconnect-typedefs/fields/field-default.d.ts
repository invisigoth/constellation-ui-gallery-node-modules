import { FieldDefault, FieldDefaultsObj } from './types';
/**
 * @description
 * The FieldDefaultUtils class contains APIs that handle the field default related operations
 */
declare class FieldDefaultUtils {
    fieldDefaults: FieldDefaultsObj;
    constructor();
    /**
     * Updates the field defaults config to current config.
     * @param {object} configs field default configs
     * @example <caption> Example for updateFieldDefaults()</caption>
     * PCore.getFieldDefaultUtils().updateFieldDefaults({ Email: { 'client-validations': false }, Phone: { 'client-validations': false } })
     */
    updateFieldDefaults(configs: FieldDefaultsObj): void;
    /**
     * set the field default config for a component type.
     * @param {string} type component type
     * @param {string} key config key
     * @param {any} value config value
     * @example <caption> Example for setFieldDefault()</caption>
     * PCore.getFieldDefaultUtils().setFieldDefault("Email","client-validations" ,true)
     */
    setFieldDefault(type: string, key: string, value: FieldDefault): void;
    /**
     * get the field default config(formats and styles) for component type.
     * @param {string} type component type
     * @returns {object} field default config for component type.
     * @example <caption> Example for getDefaultsforType()</caption>
     * PCore.getFieldDefaultUtils().getDefaultsforType("Email")
     * // returns -- { 'client-validations': false }
     */
    getDefaultsforType(type: string): FieldDefault;
}
declare const _default: FieldDefaultUtils;
export default _default;
