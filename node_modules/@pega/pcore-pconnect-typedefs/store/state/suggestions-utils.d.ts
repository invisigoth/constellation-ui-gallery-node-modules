/**
 * Provides APIs to set, get, remove and merge in suggestion Context
 * This class is independent of the context
 */
declare class SuggestionsContext {
    constructor(context: any);
    /**
     * Obtains the value of a specified field from the Suggestions Context.
     * @public
     * @param {string} property - The field whose value is obtained from the Suggestions Context.
     * @returns {string} - The value of the field
     * @example <caption>Example for getField</caption>
     * In this example, the API obtains the value of the caseInfo.content.EmailField field from the Suggestions Context.
     * PCore.getStateUtils().getSuggestionsContext('app/primary_1/workarea_1').getField('caseInfo.content.EmailField')
     */
    getField(property: any): any;
    /**
     * Assigns a value to a specified field in the Suggestions Context.
     * @public
     * @param {string} property - The field that is assigned a value in the Suggestions Context.
     * @param {string} value - The value that is assigned to a field in the Suggestions Contex
     * @example <caption>Example for setField</caption>
     * In this example, the suggestion@gmail.com value is assigned to the caseInfo.content.EmailField field.
     * PCore.getStateUtils().getSuggestionsContext('app/primary_1/workarea_1').setField('caseInfo.content.EmailField','suggestion@gmail.com')
     */
    setField(property: any, value: any): void;
    /**
     * Deletes the value of a specified field from the Suggestions Context.
     * @public
     * @param {string} property - The field whose value is deleted from the Suggestions Context.
     * @example <caption>Example for removeField</caption>
     * In this example, the value of the caseInfo.content.EmailField field is deleted from the Suggestions Context.
     * PCore.getStateUtils().getSuggestionsContext('app/primary_1/workarea_1').removeField('caseInfo.content.EmailField')
     */
    removeField(property: any): void;
    /**
     * Updates a state in the Suggestions Context.
     * @public
     * @param {object} stateObj - The object containing the fields and values that must be updated in the Suggestions Context.
     * @example <caption>Example for setState</caption>
     * In this example, the API updates the values of the fields in the caseInfo object in the Suggestions Context.
     * PCore.getStateUtils().getSuggestionsContext('app/primary_1/workarea_1').setState({
     *   caseInfo: {
     *    content: {
     *      EmailField: 'suggestion@gmail.com',
     *       TextField: 'suggestion'
     *      }
     *    }
     *  })
     */
    setState(stateObj: any): void;
}
export default SuggestionsContext;
