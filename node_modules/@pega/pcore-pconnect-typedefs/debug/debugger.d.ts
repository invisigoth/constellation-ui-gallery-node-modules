import XRayRuntime from './xray-runtime';
declare class Debugger {
    xray: boolean;
    onXRayCallback: Function | null;
    readonly xrayRuntime: XRayRuntime;
    isPreview: boolean;
    debugLevels: string;
    constructor();
    onXRay(callback: Function): void;
    toggleXRay(bXRay: boolean): void;
    enableXRay(): void;
    disableXRay(): void;
    toggle(): void;
    isXRayOn(): boolean;
    getXRayRuntime(): XRayRuntime;
    /**
     * This API set the previewMode to true
     * @example <caption>PCore.getDebugger().setPreviewMode()</caption>
     */
    setPreviewMode(): void;
    /**
     * This API gets the current preview value
     * @example <caption>PCore.getDebugger().getPreviewMode()</caption>
     * @returns {boolean} true/false
     * @private
     */
    getPreviewMode(): boolean;
    /**
     * This API set the tracer flag as 1
     * @example <caption>PCore.getDebugger().enableTracer()</caption>
     * @private
     */
    enableTracer: () => void;
    /**
     * This API set the tracer flag as 0
     * @example <caption>PCore.getDebugger().disableTracer()</caption>
     * @private
     */
    disableTracer: () => void;
    getDebugLevels: () => string;
}
declare const _default: Debugger;
export default _default;
