/**
 * @description
 * The DataTypeUtils Class contains utility APIs to retrieve information about data types.
 */
declare class DataTypeUtils {
    /**
     * This API returns savable data page name of given data class.
     *
     * Note - Ensure that Default save data page is configured under Default Data sources for the given data class. Returns null if no Default save data page is configured for the given data class.
     *
     * @param {string} dataClass The name of the data class whose savable data page name must be obtained.
     * @returns {string} returns The name of the savable data page as a string.
     * @public
     * @static
     * @example <caption>Example for getSavableDataPage</caption>
     * PCore.getDataTypeUtils().getSavableDataPage("O02LDN-AppReact-Data-Test");
     */
    static getSavableDataPage(dataClass: string): any;
    /**
     * This API returns lookup data page name of given data class.
     *
     * Note - Ensure that Default record lookup data page is configured under Default Data sources for the given data class. Returns null if no Default record lookup data page is configured for the given data class.
     *
     * @param {string} dataClass The name of the data class whose lookup data page name must be obtained.
     * @returns {string} The name of the lookup data page as a string.
     * @public
     * @static
     * @example <caption>Example for getLookUpDataPage</caption>
     * PCore.getDataTypeUtils().getLookUpDataPage("O02LDN-AppReact-Data-Test");
     */
    static getLookUpDataPage(dataClass: string): any;
    /**
     * This API obtains information related to the lookup data page of a specified data class.
     * Note: Under the Default Data sources for the specified data class, ensure that the Default record lookup data page is configured.
     *
     * @param {string} dataClass The name of the data class whose lookup data page name must be obtained.
     * @returns {Object} The information related to the lookup data page.
     * Note: If the default record lookup data page is not configured for the data class, a null value is returned.
     *
     * @public
     * @static
     * @example <caption>In this example, the API obtains the information of the lookup data page for the O02LDN-AppReact-Data-Test data class.</caption>
     * PCore.getDataTypeUtils().getLookUpDataPageInfo("O02LDN-AppReact-Data-Test");
     *
     * The information of the lookup data page is returned as the following object:
     * {
     *  isAlternateKeyStorage:true,
     *   parameters:{
     *     'param1_on_DP':'@P .Dependent_Field_in_same_class',
     *      'Param2_on_DP':'Constant'
     *     }
     * }
     *
     */
    static getLookUpDataPageInfo(dataClass: string): any;
    /**
     * This API returns keys for given data page if valid Data Page Name is passed.
     *
     * Note - Ensure that either of the Default record lookup data page or Default save data page or Default list data page is configured under Default Data sources for the given data class. And pass this Data page as dataPageName. Returns null if no data page is configured in the data class.
     *
     * @param {string} dataPageName 	The name of the data page whose keys must be obtained.
     * @returns {Array} An array of objects containing the following properties:
     *             keyName - The name of the key associated with the specified data page.
     *             isAlternateKeyStorage - The flag that indicates if alternate key storage is enabled for the specified data page.
     *             linkedField - The property linked to the key.
     * @public
     * @static
     * @example <caption>Example for getDataPageKeys</caption>
     * PCore.getDataTypeUtils().getDataPageKeys("D_TestSavable");
     */
    static getDataPageKeys(dataPageName: string): {
        [key: string]: any;
    } | null;
}
export default DataTypeUtils;
