declare class StateMachine {
    constructor(target: any, pageReference: any, contextName: any);
    addChild(stateMachine: any): void;
    insertNode(instruction: any): void;
    buildChildSumbitPageInstructions(stateNode: any, isOnlyChanged: any): any[];
    buildSubmitPageInstructions(isOnlyChanged?: boolean): any[];
    initPageInstructions(c11nEnv: any, propertyNames: any, uniqueField: any): void;
    getChangeList(): any;
    initChangeList(index: any): void;
    update(payload: any, index: any, skipStateUpdate: any, options: any): void;
    delete(index: any, skipStateUpdate: any): void;
    insert(payload: any, index: any, skipStateUpdate: any): void;
    replacePage(payload: any): void;
    move(fromIndex: any, toIndex: any): void;
    deleteAll(referencePropName: any): void;
    updatePage(payload: any): void;
}
export default StateMachine;
