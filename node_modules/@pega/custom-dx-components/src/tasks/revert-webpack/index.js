
import fs from 'fs';
import path, { join } from 'path';
import { URL, fileURLToPath } from 'url';

import chalk from 'chalk';
import { up } from 'inquirer/lib/utils/readline.js';

import {
  convertIntoPascalCase,
  showVersion,
  updateUseWebPackPromotion
} from '../../util.js';
import {
  WEBPACK_CONFIG_JS_FILENAME,
  BUILDER_INDEX_FILE_PATH
} from '../../constants.js';



export const renamePromotedWebPack = async () => {

  // call this function from top level
  // fs.copyFileSync("./webpack.config.js", "webpack.config.js")

  const promoteWebPackDir = path.resolve(WEBPACK_CONFIG_JS_FILENAME);
  const renamedPromoteWebPackDir = path.resolve(`${WEBPACK_CONFIG_JS_FILENAME  }.notused`);

  try {
    fs.renameSync(promoteWebPackDir, renamedPromoteWebPackDir);
  }
  catch (ex) {
    console.log(chalk.bold.red(`File ${promoteWebPackDir} not found.`));
    process.exit();
  }

  console.log(chalk.bold.green("Bundler reverted to using internal webpack.config.js."));
  console.log(chalk.bold.green(`File ${promoteWebPackDir} marked as not used.`));

}



export default async options => {
  showVersion();

  await renamePromotedWebPack();
  await updateUseWebPackPromotion(false);

};
