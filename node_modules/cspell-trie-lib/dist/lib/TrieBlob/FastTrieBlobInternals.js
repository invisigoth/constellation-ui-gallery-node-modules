import { NumberSequenceByteEncoderDecoder } from './NumberSequenceByteDecoderAccumulator.js';
export class FastTrieBlobInternals {
    nodes;
    charIndex;
    charToIndexMap;
    NodeMaskEOW;
    NodeMaskChildCharIndex;
    NodeChildRefShift;
    isIndexDecoderNeeded;
    constructor(nodes, charIndex, charToIndexMap, maskInfo) {
        this.nodes = nodes;
        this.charIndex = charIndex;
        this.charToIndexMap = charToIndexMap;
        const { NodeMaskEOW, NodeMaskChildCharIndex, NodeChildRefShift } = maskInfo;
        this.NodeMaskEOW = NodeMaskEOW;
        this.NodeMaskChildCharIndex = NodeMaskChildCharIndex;
        this.NodeChildRefShift = NodeChildRefShift;
        this.isIndexDecoderNeeded = charIndex.length > NumberSequenceByteEncoderDecoder.MaxCharIndex;
    }
}
//# sourceMappingURL=FastTrieBlobInternals.js.map