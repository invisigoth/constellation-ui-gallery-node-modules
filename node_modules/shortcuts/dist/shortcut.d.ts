import type { Chord, ChordID, Shortcut as ShortcutType, ShortcutID } from './types';
declare const Shortcut: {
    getModifierKey: (id: ChordID) => ChordID;
    hasModifierKey: (id: ChordID) => boolean;
    getTriggerKey: (id: ChordID) => ChordID;
    hasTriggerKey: (id: ChordID) => boolean;
    event2id: (event: MouseEvent | KeyboardEvent) => ChordID;
    event2shortcut: (event: MouseEvent | KeyboardEvent) => ShortcutType;
    event2accelerator: (event: MouseEvent | KeyboardEvent) => string;
    event2symbols: (event: MouseEvent | KeyboardEvent) => string;
    chord2id: (arg: string) => number;
    chord2accelerator: (chord: Chord) => string;
    chord2symbols: (chord: Chord) => string;
    isValidShortcut: (shortcut: ShortcutType) => boolean;
    checkValidShortcut: (shortcut: ShortcutType) => boolean;
    shortcut2id: (arg: string) => ShortcutID;
    shortcut2accelerator: (arg: string) => string;
    shortcut2symbols: (arg: string) => string;
    isValidID: (id: ShortcutID) => boolean;
    checkValidID: (id: ShortcutID) => boolean;
    id2output: (id: ShortcutID, idMap: Record<number, string>, chordSeparator: string, sequenceSeparator: string) => string;
    id2shortcut: (id: ShortcutID) => string;
    id2accelerator: (id: ShortcutID) => string;
    id2symbols: (id: ShortcutID) => string;
};
export default Shortcut;
